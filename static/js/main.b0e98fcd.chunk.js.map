{"version":3,"sources":["layouts/Auth.js","style/loginForm.js","utils/axios.js","services/auth.js","services/localStorage.js","services/pubnub.js","components/login/LoginForm.js","pages/login/index.js","routes/PrivateRoute.js","routes/AuthRoute.js","style/myAccountDropdown.js","style/accountCard.js","utils/helpers.js","components/accounts/AccountCard.js","components/accounts/AccountList.js","components/core/header/MyAccountDropdown.js","style/header.js","components/core/header/Breadcrumb.js","components/core/header/Header.js","style/listingTable.js","style/tooltip.js","components/tables/TableIcons.js","components/tables/ListingPagination.js","components/tables/Markers.js","components/tables/ListingTable.js","components/applications/ApplicationTable.js","style/textModeration.js","components/core/Search.js","components/core/SnackBar.js","components/applications/AppsListing.js","pages/dashboard/index.js","style/sidebar.js","components/core/Sidebar.js","layouts/Dashboard.js","components/textModeration/wordListModeration/WordListHandler.js","components/textModeration/wordListModeration/WordListProfanityMethod.js","style/automaticProfanityMethod.js","style/slideBar.js","components/core/SliderComponent.js","components/textModeration/automaticModeration/AutomaticHandler.js","components/textModeration/automaticModeration/TisaneHandler.js","components/textModeration/automaticModeration/AutomaticProfanityMethod.js","components/textModeration/ModerationMethods.js","style/switchButton.js","components/core/SwitchButton.js","components/textModeration/FilterCard.js","utils/wordlist/index.js","utils/automaticTextModeration/index.js","utils/automaticTextModeration/filterConditionForAutomatic.js","utils/profanityFunction.js","utils/profanityFunctionForImage.js","components/imageModeration/CreateEventHandler.js","components/imageModeration/UpdateEventHandler.js","utils/imageModeration/index.js","components/textModeration/index.js","pages/textModeration/index.js","pages/accounts/index.js","style/confirmDialog.js","components/core/ConfirmDialog.js","style/createModerationModal.js","components/channels/AddChannelForm.js","components/channels/AddChannelMetadataModal.js","components/channels/UpdateChannelMetadataModal.js","components/channels/ChannelsTable.js","components/channels/JoinChannelModal.js","utils/usePubNub.js","components/channels/ChannelsListing.js","pages/channels/index.js","style/overview.js","components/overview/overviewGrid.js","pages/overview/index.js","components/users/AddUserForm.js","components/users/AddUserMetadataModal.js","components/users/UpdateUserMetadataModal.js","components/users/FlagUser.js","components/users/BanUser.js","components/users/UsersTable.js","style/drawer.js","components/users/FilterUsers.js","components/users/UsersListing.js","pages/users/index.js","style/messages.js","style/badge.js","components/users/UserAction.js","components/messages/MembersLoader.js","components/messages/Members.js","style/memberDetail.js","components/messages/MemberDetail.js","components/messages/UndoDelete.js","components/messages/EditMessage.js","components/messages/MessageContent.js","components/messages/Chat.js","components/messages/MessagesCount.js","components/messages/ToggleChat.js","components/messages/Messages.js","pages/messages/index.js","style/imageModeration.js","components/imageModeration/FilterCard.js","components/imageModeration/automaticModeration/ImageModerationHandler.js","components/imageModeration/automaticModeration/AutomaticImageModeration.js","components/imageModeration/index.js","pages/imageModeration/index.js","routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Auth","children","CssBaseline","useStyles","makeStyles","form","padding","margin","background","borderRadius","opacity","loginTextField","textfieldIcon","fontSize","maskPasswordIcon","cursor","root","display","backgroundImage","backgroundRepeat","backgroundSize","position","top","left","height","width","middle","verticalAlign","inner","marginLeft","marginRight","logSubtitle","font","textAlign","letterSpacing","color","button","fontWeight","textTransform","disabledButton","backgroundColor","logIconContainer","floatIcon","loader","axios","create","baseURL","validateStatus","status","signIn","credentials","a","post","signInResponse","data","Error","error","getCookie","key","cookie","get","setLocalStorage","value","localStorage","setItem","JSON","stringify","authenticate","next","token","set","expires","user","isAuth","getItem","parse","fetchAllAccounts","id","headers","accountsResponse","fetchAllApps","appsResponse","getChannels","pubnub","nextPage","prevPage","objects","getAllChannelMetadata","include","totalCount","limit","page","prev","sort","updated","channelsResponse","getUsers","filterBy","getAllUUIDMetadata","customFields","filter","usersResponse","addChannelMetadata","channelName","channelDescription","channel","setChannelMetadata","name","description","addChannelMetadataResponse","addUserMetadata","userName","email","uuid","profileUrl","setUUIDMetadata","addUserMetadataResponse","message","deleteChannelMetadata","removeChannelMetadata","deleteChannelMetadataResponse","deleteUserMetadata","removeUUIDMetadata","deleteUserMetadataResponse","editUserMetadata","editChannelMetadata","channelID","fetchMessages","channels","includeMeta","includeMessageActions","count","msgResponse","fetchPubNubFunction","keyId","functionResponse","createPubNubFunction","key_id","response","startPubNubFunction","block_id","stopPubNubFunction","createPubNubEventHandler","updatePubNubEventHandler","put","getUserByName","getChannelByName","getChannelMembers","UUIDFields","customUUIDFields","channelMembersResponse","getOnlineMembers","hereNow","fetchChannelMetadata","getChannelMetadata","getMessagesCount","midnightTimeToken","messageCounts","channelTimetokens","getChannelsOccupancy","channelsArray","includeUUIDs","includeState","checkChannelExistence","checkUserIDExistence","userID","softDeleteMessage","messageTimetoken","addMessageAction","action","type","deleteMessageAction","actionTimetoken","removeMessageAction","addEditMessageAction","setUserMetadata","metadata","custom","userResponse","LoginForm","classes","history","useHistory","Pubnub","generateUUID","useState","success","msg","loading","alert","setAlert","password","setCredentials","passwordIsMasked","setPasswordIsMasked","handleChange","e","target","handleSubmit","preventDefault","authSignInResponse","result","accountsResult","accounts","apps","push","togglePasswordMask","className","Grid","container","justify","item","xs","sm","md","logIcon","src","alt","Typography","align","onSubmit","spacing","alertCard","Alert","severity","TextField","variant","fullWidth","autoComplete","InputProps","startAdornment","InputAdornment","PersonOutlineOutlined","placeholder","required","onChange","autoFocus","endAdornment","RemoveRedEye","onClick","RemoveRedEyeOutlined","HttpsOutlined","Button","disabled","startIcon","CircularProgress","size","Login","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","AuthRoute","avatar","paperRoot","minWidth","zIndex","logoutIcon","cardRoot","checkIcon","avatarText","capitalizeFirstCharacter","split","map","word","toUpperCase","substring","join","selectedAccountsFromLS","appsFromLS","selectedAppFromLS","applicationsWithKeyFromLS","avatarStyle","index","account","capitalizeNameInitials","words","initials","length","formatDate","date","moment","Date","format","truncateString","string","showError","errorData","filterFunction","payload","filterEventHandler","block","filterImageFunction","pnFunctionFilterStatus","str","Function","getProfanityWordsByLanguage","profanityList","language","formatTimeToken","timeToken","unix","capitalizeFirstLetter","charAt","slice","formatProfileImageUrl","url","formatUserName","selectedChannelFromLS","combineLanguageWords","wordList","combinedWords","Object","values","reduce","c","groupLanguageWords","replace","constantBoolean","variable","getModeratedMessageTooltip","checkMuteStatus","member","mutedChannels","includes","checkBlockStatus","blockedChannels","getMessageFileUrl","messageObject","channelMessage","file","getFileUrl","formatBannedMessage","image","reason","imageReason","originalMessage","moderatedMessage","getMessageText","actions","keys","text","AccountCard","handleClick","MenuItem","testid","Avatar","style","noWrap","AccountList","selectedAccount","window","href","AccountListing","i","MyAccountDropdown","open","setOpen","prevOpen","useRef","anchorRef","handleClose","event","current","contains","handleListKeyDown","useEffect","focus","ref","undefined","endIcon","KeyboardArrowDownOutlined","prevOpenState","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","Box","pl","pr","Divider","clear","grow","flexGrow","boxShadow","headerMenu","verticalLine","borderLeft","Breadcrumb","keySet","Breadcrumbs","separator","NavigateNext","Link","currentPage","Header","setAccounts","AppBar","Toolbar","IconButton","edge","menuButton","tableRow","border","minHeight","tablehead","borderBottom","headLabel","keyName","appName","icons","table","scrollbarWidth","overflow","overflowX","alertMessage","tableCellIcon","tablePagination","LightTooltip","withStyles","theme","tooltip","palette","common","white","shadows","Tooltip","TableIcons","row","isflagged","flag","isBanned","ban","isUser","title","unFlagUser","flagUser","banUser","unbanUser","label","viewRow","onMouseOver","setOver","onMouseOut","editRow","deleteRow","ListingPagination","tableCount","rowsPerPage","tableData","TablePagination","rowsPerPageOptions","onChangePage","handleChangePage","labelDisplayedRows","backIconButtonProps","nextIconButtonProps","Markers","flaggedBy","flaggedAt","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","ListingTable","headCells","React","setOrder","setOrderBy","setPage","over","number","tableSlice","sliceTableArray","EnhancedTableHead","prop","headOrder","headOrderBy","onRequestSort","TableHead","TableRow","headCell","TableCell","alignment","disablePadding","sortDirection","TableSortLabel","active","direction","property","newPage","getNewPage","TableContainer","Table","rowCount","TableBody","hover","tabIndex","handleRowClick","headcell","n","tableCell","mr","ml","pt","ApplicationTable","searchResult","applications","setApplications","appsList","keysList","keyWithAppName","app","appIndex","keyIndex","created","modified","properties","selectedApp","subscribe_key","search","shape","breakpoints","up","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transitions","searchInput","labelStyle","methodNotSelected","methodSelected","profanityCardRoot","cancelButton","saveButton","addButton","addButtonContainer","marginTop","defaultText","textDecoration","reroute","rerouteIcon","subTitle","paddingBottom","infoIcon","Search","searched","onRequestSearch","searchVal","requestSearch","cancelSearch","onCancelSearch","SnackBar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","AppsListing","setSearchResult","setSearched","appsAlert","setAppsAlert","requestKeySearch","searchedVal","filteredRows","publish_key","toLowerCase","Fragment","Helmet","lg","pb","testId","Dashboard","textModerationIcon","overviewIcon","channelIcon","settingsIcon","chatIcon","userIcon","drawer","flexShrink","listItemRoot","content","Sidebar","toolbar","List","ListItem","selected","ListItemIcon","HomeOutlined","ListItemText","SettingsOutlined","ExpandMore","ExpandLess","Collapse","in","timeout","unmountOnExit","settingsItemRoot","DescriptionOutlined","ChatBubbleOutline","PersonOutlined","MailOutline","setState","setProfanityList","channelOnChange","wordListChannel","wordListLanguage","wordListModType","wordListCharacterToMaskWith","wordListReRouteMessages","checked","applyToAllChannelIdsWordlist","WordListProfanityMethod","handleSave","defaultWords","wordsListPatternError","wordsListMaskCharError","wordsListChannelError","checkboxForReroute","checkForApplyToAllChannelIds","Card","mb","Checkbox","FormControl","formControl","Select","MenuProps","getContentAnchorEl","inputProps","languageWords","multiline","rowsMax","maxLength","saveLoading","thickness","filterText","cancelButtonStyle","saveButtonStyle","testText","loaderStyle","rerouteBtn","rerouteIconStyle","SlideBar","thumb","valueLabel","track","rail","PrettoSlider","Slider","SliderComponent","marks","min","getAriaValueText","step","max","automaticDetection","toolForAutomaticDetection","automaticDetectionChannel","automaticDetectionReRouteMessages","automaticDetectionModType","siftNinjaRiskFactorThresholdVulgar","siftNinjaRiskFactorThresholdSexting","siftNinjaRiskFactorThresholdRacism","siftNinjaAccountName","siftNinjaChannelName","siftNinjaApiKey","automaticDetectionCharacterToMaskWith","applyToAllChannelIdsAutomatic","handleTisaneChange","tisaneApiKey","tisaneLanguage","tisaneRiskFactorThresholdBigotry","tisaneRiskFactorThresholdCyberBullying","tisaneRiskFactorThresholdCriminalActivity","tisaneRiskFactorThresholdSexualAdvances","tisaneRiskFactorThresholdProfanity","AutomaticProfanityMethod","automaticMaskCharError","automaticChannelError","TooltipText","textDecorationLine","interactive","ModerationMethods","wordListProfanity","automaticProfanity","SwitchButton","switchBase","transform","grey","focusVisible","Switch","focusVisibleClassName","disableRipple","FilterCard","p","regexForBanned","FilterConditionForWordList","textPnFnStatusdata","englishProfanity","hindiProfanity","frenchProfanity","spanishProfanity","portugeseProfanity","checkForWordListMaskWord","checkForWordListBlockMessage","checkForWordListReRouteMessages","English","Hindi","Portugese","French","Spanish","swearWords","regex","wordListMaskWordsAndReroute","wordListMaskWords","wordListBlockMessageAndReroute","wordListBlockMessage","repeat","getSelectedDetectionTool","selectedLanguage","getSelectedLanguage","FilterConditionForAutomatic","selectedDetectionTool","checkForAutomaticMaskMessage","checkForAutomaticBlockMessage","checkForAutomaticReRouteMessages","automaticMaskMessageAndReroute","automaticMaskMessage","automaticBlockMessageAndReroute","automaticBlockMessage","profanityFunction","textModerationToggle","english","hindi","spanish","french","portugese","checkForWordListProfanity","checkForAutomaticProfanity","profanityFunctionForImage","imageModerationToggle","toolForImageModeration","sightengineAPIUser","sightengineAPIKey","sightengineWorkflowId","sightengineRiskFactorThreshold","reRouteMessages","applyToAllChannelIds","checkForTextModeration","imageTypeFunction","imageFunction","textModerationPromise","imageModeration","filterConditions","blockId","channelId","config","code","log_level","output","prevState","previousStateValue","errorStatus","errorMsg","successMsg","successStatus","CreateEventHandler","eventHandler","uiPagecall","updatedConfig","previousState","previous","previousValue","UpdateEventHandler","textModerationCode","fetchFunctionsResponse","eventHandlerList","findTextModerationFunction","event_handlers","textChannelId","handleEventHandler","handleImageModerationSave","imageModerationCode","findImageFunction","isState","fetchFunctions","blockIdForImage","filterImageEventHandler","TextModeration","initialLoading","checkForTextModerationToogle","badWordsByLanguage","wordListValidationResult","test","trim","beforeState","before","prevStateValue","prevValue","preValue","headerToken","eventHandlers","path","fetch","then","r","TextModerationPage","Account","confirmButton","confirmDialog","ConfirmDialog","onConfirm","Dialog","maxWidth","DialogTitle","DialogContent","DialogActions","actionMessage","down","closeButton","right","joinChannelButton","buttonText","inputBox","modalLayout","uploadIcon","bottom","subHeadingFont","lineHeight","headingFont","addChannelButton","addChannelButtonFont","AddChannelForm","formik","touched","Boolean","errors","helperText","rows","channelAlert","buttonTitle","channelValidationSchema","yup","strict","matches","characters","checkValidChannelName","AddChannelMetadataModal","pubnubObject","isAdded","addChannelAlert","setAddChannelAlert","resetForm","useFormik","initialValues","validationSchema","addNewChannelMetadata","channelResponse","disableTypography","UpdateChannelMetadataModal","channelUpdated","setName","setDescription","setChannelID","updateChannelAlert","setUpdateChannelAlert","enableReinitialize","updateChannelMetadata","ChannelsTable","setSearchableData","deleteChannel","setChannels","setMessage","setLoading","confirmOpen","setConfirmOpen","modalOpen","setModalOpen","channelData","setChannelData","updatedChannel","setUpdatedChannel","settableCount","nextpage","setNextPage","previousPage","setpreviousPage","pageNumber","setPageNumber","fetchChannels","applicationChannels","channelsList","channelsIDs","selectedChannel","channelsOccupancy","forEach","channelIndex","occupancy","iconsClick","rowId","updatedChannelData","JoinChannelModal","setChannelName","setError","usePubNub","PubNub","subscribeKey","secretKey","secret_key","publishKey","ChannelsListing","updatedData","setupdatedData","setChannelAlert","updatedChannelsData","channelsData","Channels","gridOne","gridTwo","headings","OverviewGrid","application","setApplication","secretKeyIsMasked","setSecretKeyIsMasked","Overview","AddUserForm","user_id","profile_url","userAlert","userValidationSchema","AddUserMetadataModal","addUserAlert","setAddUserAlert","addNewUserMetadata","userData","UpdateUserMetadataModal","isUpdated","setUserName","setEmail","UUID","setUUID","setProfileUrl","updateUserAlert","setUpdateUserAlert","updateUserMetadata","FlagUser","setuserID","flagAlert","setFlagAlert","selectedAcount","updatedAt","customMetaData","BanUser","banAlert","setBanAlert","UsersTable","deleteUser","users","setUsers","setUserData","setUpdatedData","setNextpage","flagConfirmOpen","setFlagConfirmOpen","setAction","banModalOpen","setBanModalOpen","fetchUsers","applicationUsers","usersList","selectedUser","x","list","listText","userType","FilterUsers","isBanChecked","setIsBanChecked","isFlagChecked","setIsFlagChecked","isFiltered","Drawer","anchor","UsersListing","dataAdded","setDataAdded","setFilterBy","setUserAlert","usersData","Users","header","messages","chat","marginBottom","timeField","channelMember","chatText","wordBreak","whiteSpace","members","channelMembers","maxHeight","userProfile","totalUsers","onlineUsers","messagesCount","messagesCountFont","deletedChat","messageContainer","activeToggled","disableToggled","messageBox","borderRight","editMessageHeader","editMessageFont","objectFit","imageIcon","imageContainer","OnlineBadge","badge","paper","Badge","OfflineBadge","UserAction","muteAlert","setMuteAlert","handleMuteClick","getMutedChannels","getBlockedChannels","MembersLoader","membersLength","onEnter","fetchChannelsMembersOnScroll","Members","setMembers","setOnlineUsers","setSelectedUser","fetchOnlineMembers","onlineMembersResponse","onlineMember","j","onlineUsersArray","userObj","actionsDisable","toolTipTitle","setOnlineUsersArray","Set","detail","selectedMemberDetail","mute","userDetail","filteredArray","filteredMember","memberIndex","findIndex","splice","oldArray","sectionHeading","profilePicture","labelItem","containerRoot","closeIcon","blockIcon","online","MemberDetail","toggleMemberDetails","dialogOpen","setDialogOpen","setMute","setBlock","UndoDelete","timetoken","actionToken","EditMessage","setText","setDisabled","displayBox","setDisplayBox","setActionToken","setAlertMessage","messagesLength","MessageContent","confirmDelete","updateMessage","confirmUndo","toggledVal","deleted","Chat","selectedMessage","setSelectedMessage","setMessages","undoConfirmOpen","setUndoConfirmOpen","setMessageToEdit","messagesEndRef","setTimeout","scrollIntoView","isLoading","time","messageToEdit","MessagesCount","setCount","setHours","ToggleChat","setToggledVal","Messages","firstUpdate","useLocation","setChannel","memberDetails","setMemberDetails","setToggleMemberDetails","setTotalCount","fetchChannelMembers","fetchChannelMessages","channelMessages","messagesList","messagesSet","unsubscribeAll","addListener","receivedMessage","filterMember","publisher","subscribe","mt","messageToken","updatedResponse","filteredMessage","messageIndex","details","toggleValue","labelText","card","cancel","save","loaderLoading","sightengineAPIUserError","sightengineAPIKeyError","sightengineWorkflowIdError","AutomaticImageModeration","channelIdError","channelIdDisabled","ImageModeration","checkForToggleSwitch","textModeration","ImageModerationPage","Routes","basename","exact","Accounts","jss","jssPreset","insertionPoint","document","getElementById","App","StylesProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"2QAYeA,EATF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACE,qCACE,cAACC,EAAA,EAAD,IACCD,M,iICLME,EAAYC,YAAW,CAClCC,KAAM,CACJC,QAAS,oBACTC,OAAQ,MACRC,WAAY,sCACZC,aAAc,MACdC,QAAS,GAEXC,eAAgB,CACd,2BAA4B,CAC1BF,aAAc,MACdD,WAAY,SAGd,iCAAkC,CAChCA,WAAY,SAEd,mCAAoC,CAClCA,WAAY,SAEdE,QAAS,GAEXE,cAAe,CACbF,QAAS,GACTG,SAAU,QAEZC,iBAAkB,CAChBC,OAAQ,UACRL,QAAS,GACTG,SAAU,QAEZG,KAAM,CACJC,QAAS,QACTC,gBAAiB,qBACjBC,iBAAkB,YAClBC,eAAgB,OAChBC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,OACRC,MAAO,QAETC,OAAQ,CACNT,QAAS,aACTU,cAAe,UAEjBC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbL,MAAO,QAETM,YAAa,CACXC,KAAM,iIAENC,UAAW,SACXC,cAAe,MACfC,MAAO,UACPzB,QAAS,IAEX0B,OAAQ,CACN5B,WAAY,sCACZC,aAAc,MACdC,QAAS,EACTe,MAAO,OACPY,WAAY,MACZb,OAAQ,OACRc,cAAe,OACfH,MAAO,QACP,UAAW,CACTE,WAAY,MACZ7B,WAAY,sCACZ2B,MAAO,UAGXI,eAAgB,CACdJ,MAAO,kBACPK,gBAAiB,WAEnBC,iBAAkB,CAChBR,UAAW,SACX1B,OAAQ,oBAEVmC,UAAW,CACTF,gBAAiB,UACjB/B,aAAc,iBACdH,QAAS,mBAEXqC,OAAQ,CACNR,MAAO,W,SCxFIS,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,+BACTC,eAAgB,SAACC,GAAD,OAAYA,EAAS,OCFhC,SAAeC,EAAtB,kC,4CAAO,WAAsBC,GAAtB,eAAAC,EAAA,sEACwBP,EAAMQ,KAAK,MAAOF,GAD1C,UAEyB,OADxBG,EADD,QAEcL,OAFd,yCAGIK,EAAeC,MAHnB,aAKC,IAAIC,MAAMF,EAAeC,KAAKE,OAAS,wBALxC,4C,4CCYMC,EAAY,SAACC,GACxB,OAAOC,IAAOC,IAAIF,IAGPG,EAAkB,SAACH,EAAKI,GACnCC,aAAaC,QAAQN,EAAKO,KAAKC,UAAUJ,KAO9BK,EAAe,SAACb,EAAMc,GAxBV,IAACV,EAAKI,EAALJ,EAyBd,QAzBmBI,EAyBVR,EAAKe,MAxBxBV,IAAOW,IAAIZ,EAAKI,EAAO,CACrBS,QAAS,IAwBXV,EAAgB,OAAQP,EAAKkB,MAC7BJ,KAQWK,EAAS,WAEpB,GADsBhB,EAAU,SAE9B,QAAIM,aAAaW,QAAQ,SAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,UCtCtC,SAAeE,EAAtB,oC,4CAAO,WAAgCC,EAAIR,GAApC,eAAAlB,EAAA,sEAC0BP,EAAMgB,IAAN,4BAA+BiB,GAAM,CAClEC,QAAS,CACP,kBAAkB,GAAlB,OAAsBT,MAHrB,UAM2B,OAL1BU,EADD,QAMgB/B,OANhB,yCAOI+B,EAAiBzB,MAPrB,aASC,IAAIC,MAAM,4BATX,4C,sBAaA,SAAeyB,EAAtB,oC,4CAAO,WAA4BH,EAAIR,GAAhC,eAAAlB,EAAA,sEACsBP,EAAMgB,IAAN,yBAA4BiB,GAAM,CAC3DC,QAAS,CACP,kBAAkB,GAAlB,OAAsBT,MAHrB,UAMuB,OALtBY,EADD,QAMYjC,OANZ,yCAOIiC,EAAa3B,MAPjB,aASC,IAAIC,MAAM,gCATX,4C,sBAaA,SAAe2B,EAAtB,sC,4CAAO,WAA2BC,EAAQC,EAAUC,GAA7C,eAAAlC,EAAA,sEAC0BgC,EAAOG,QAAQC,sBAAsB,CAClEC,QAAS,CACPC,YAAY,GAEdC,MAAO,GACPC,KAAM,CACJvB,KAAMgB,EACNQ,KAAMP,GAERQ,KAAM,CAAEC,QAAS,UAVd,UAY2B,OAX1BC,EADD,QAYgB/C,OAZhB,yCAaI+C,GAbJ,aAeC,IAAIxC,MAAM,iCAfX,4C,sBAmBA,SAAeyC,EAAtB,wC,4CAAO,WAAwBb,EAAQC,EAAUC,EAAUY,GAApD,eAAA9C,EAAA,sEACuBgC,EAAOG,QAAQY,mBAAmB,CAC5DV,QAAS,CACPC,YAAY,EACZU,cAAc,GAEhBT,MAAO,GACPC,KAAM,CACJvB,KAAMgB,EACNQ,KAAMP,GAERQ,KAAM,CAAEC,QAAS,QACjBM,OAAQH,IAZL,UAcwB,OAbvBI,EADD,QAcarD,OAdb,yCAeIqD,GAfJ,aAiBC,IAAI9C,MAAM,8BAjBX,4C,sBAqBA,SAAe+C,EAAtB,wC,4CAAO,WACLnB,EACAoB,EACAC,EACAC,GAJK,eAAAtD,EAAA,sEAMoCgC,EAAOG,QAAQoB,mBAAmB,CACzED,UACAnD,KAAM,CACJqD,KAAMJ,EACNK,YAAaJ,KAVZ,UAaqC,OAPpCK,EAND,QAa0B7D,OAb1B,yCAcI6D,GAdJ,aAgBC,IAAItD,MAAM,kCAhBX,4C,sBAoBA,SAAeuD,EAAtB,0C,4CAAO,WACL3B,EACA4B,EACAC,EACAC,EACAC,GALK,eAAA/D,EAAA,6DAOA6D,IAAOA,EAAQ,MACfE,IAAYA,EAAa,MARzB,SASiC/B,EAAOG,QAAQ6B,gBAAgB,CACnEF,OACA3D,KAAM,CACJqD,KAAMI,EACNC,QACAE,gBAdC,UAiBkC,OARjCE,EATD,QAiBuBpE,OAjBvB,yCAkBIoE,GAlBJ,aAoBC,IAAI7D,MAAM6D,EAAwBC,SApBnC,4C,sBAwBA,SAAeC,GAAtB,qC,8CAAO,WAAqCnC,EAAQsB,GAA7C,eAAAtD,EAAA,sEAEGgC,EAAOG,QAAQiC,sBAAsB,CACzCd,QAASA,IAHR,UAKwC,OAJvCe,EADD,QAK6BxE,OAL7B,yCAMIwE,GANJ,aAQC,IAAIjE,MAAM,+BARX,4C,sBAYA,SAAekE,GAAtB,qC,8CAAO,WAAkCtC,EAAQ8B,GAA1C,eAAA9D,EAAA,sEACoCgC,EAAOG,QAAQoC,mBAAmB,CACzET,KAAMA,IAFH,UAIqC,OAHpCU,EADD,QAI0B3E,OAJ1B,yCAKI2E,GALJ,aAOC,IAAIpE,MAAM,+BAPX,4C,sBAWA,SAAeqE,GAAtB,2C,8CAAO,WACLzC,EACA4B,EACAC,EACAC,EACAC,GALK,eAAA/D,EAAA,6DAOA6D,IAAOA,EAAQ,MACfE,IAAYA,EAAa,MARzB,SASiC/B,EAAOG,QAAQ6B,gBAAgB,CACnEF,OACA3D,KAAM,CACJqD,KAAMI,EACNC,QACAE,gBAdC,UAiBkC,OARjCE,EATD,QAiBuBpE,OAjBvB,yCAkBIoE,GAlBJ,aAoBC,IAAI7D,MAAM,gCApBX,4C,sBAwBA,SAAesE,GAAtB,yC,8CAAO,WACL1C,EACAoB,EACAC,EACAsB,GAJK,eAAA3E,EAAA,sEAMoCgC,EAAOG,QAAQoB,mBAAmB,CACzED,QAASqB,EACTxE,KAAM,CACJqD,KAAMJ,EACNK,YAAaJ,KAVZ,UAaqC,OAPpCK,EAND,QAa0B7D,OAb1B,yCAcI6D,GAdJ,aAgBC,IAAItD,MAAM,kCAhBX,4C,sBAoBA,SAAewE,GAAtB,qC,8CAAO,WAA6B5C,EAAQoB,GAArC,eAAApD,EAAA,sEACqBgC,EAAO4C,cAAc,CAC7CC,SAAU,CAACzB,GACX0B,aAAa,EACbC,uBAAuB,EACvBC,MAAO,MALJ,YACCC,EADD,iDAQIA,EAAYJ,SAASzB,IARzB,aAUC,IAAIhD,MAAM,0BAVX,4C,sBAeA,SAAe8E,GAAtB,qC,8CAAO,WAAmCC,EAAOjE,GAA1C,eAAAlB,EAAA,sEAC0BP,EAAMgB,IAAN,yBAA4B0E,EAA5B,UAA2C,CACxExD,QAAS,CACP,kBAAkB,GAAlB,OAAsBT,MAHrB,UAM2B,OAL1BkE,EADD,QAMgBvF,OANhB,yCAOIuF,EAAiBjF,MAPrB,aASC,IAAIC,MAAM,oCATX,4C,sBAaA,SAAeiF,GAAtB,qC,8CAAO,WAAoCtF,EAAamB,GAAjD,eAAAlB,EAAA,sEACkBP,EAAMQ,KAAN,yBACHF,EAAYuF,OADT,UAErBvF,EACA,CACE4B,QAAS,CACP,kBAAkB,GAAlB,OAAsBT,MANvB,UAUmB,OATlBqE,EADD,QAUQ1F,OAVR,yCAWI0F,EAASpF,MAXb,aAaC,IAAIC,MACRmF,EAASpF,KAAK+D,SAAW,0CAdtB,4C,sBAmBA,SAAesB,GAAtB,qC,8CAAO,WAAmCzF,EAAamB,GAAhD,eAAAlB,EAAA,sEACkBP,EAAMQ,KAAN,wBACJF,EAAYuF,OADR,kBACwBvF,EAAY0F,SADpC,UAErB1F,EACA,CACE4B,QAAS,CACP,kBAAkB,GAAlB,OAAsBT,MANvB,UAUmB,OATlBqE,EADD,QAUQ1F,OAVR,yCAWI0F,EAASpF,MAXb,aAaC,IAAIC,MAAMmF,EAASpF,KAAKE,OAbzB,4C,sBAiBA,SAAeqF,GAAtB,qC,8CAAO,WAAkC3F,EAAamB,GAA/C,eAAAlB,EAAA,sEACkBP,EAAMQ,KAAN,wBACJF,EAAYuF,OADR,kBACwBvF,EAAY0F,SADpC,SAErB1F,EACA,CACE4B,QAAS,CACP,kBAAkB,GAAlB,OAAsBT,MANvB,UAUmB,OATlBqE,EADD,QAUQ1F,OAVR,yCAWI0F,EAASpF,MAXb,aAaC,IAAIC,MAAMmF,EAASpF,KAAKE,OAbzB,4C,sBAiBA,SAAesF,GAAtB,qC,8CAAO,WAAwC5F,EAAamB,GAArD,eAAAlB,EAAA,sEACkBP,EAAMQ,KAAN,wBACJF,EAAYuF,OADR,kBAErBvF,EACA,CACE4B,QAAS,CACP,kBAAkB,GAAlB,OAAsBT,MANvB,UAUmB,OATlBqE,EADD,QAUQ1F,OAVR,yCAWI0F,EAASpF,MAXb,aAaC,IAAIC,MAAMmF,EAASpF,KAAK+D,SAbzB,4C,sBAgBA,SAAe0B,GAAtB,qC,8CAAO,WAAwC7F,EAAamB,GAArD,eAAAlB,EAAA,sEACkBP,EAAMoG,IAAN,yBACH9F,EAAYuF,OADT,0BACiCvF,EAAY2B,IAClE3B,EACA,CACE4B,QAAS,CACP,kBAAkB,GAAlB,OAAsBT,MANvB,UAUmB,OATlBqE,EADD,QAUQ1F,OAVR,yCAWI0F,EAASpF,MAXb,aAaC,IAAIC,MAAMmF,EAASpF,KAAK+D,SAbzB,4C,sBAiBA,SAAe4B,GAAtB,qC,8CAAO,WAA6B9D,EAAQ4B,GAArC,eAAA5D,EAAA,sEACuBgC,EAAOG,QAAQY,mBAAmB,CAC5DE,OAAQ,cAAgBW,EAAW,OAFhC,UAIwB,OAHvBV,EADD,QAIarD,OAJb,yCAKIqD,EAAc/C,MALlB,aAOC,IAAIC,MAAM,8BAPX,4C,sBAWA,SAAe2F,GAAtB,qC,8CAAO,WAAgC/D,EAAQoB,GAAxC,eAAApD,EAAA,sEACuBgC,EAAOG,QAAQC,sBAAsB,CAC/Da,OAAQ,cAAgBG,EAAc,OAFnC,UAIwB,OAHvBF,EADD,QAIarD,OAJb,yCAKIqD,EAAc/C,MALlB,aAOC,IAAIC,MAAM,8BAPX,4C,sBAWA,SAAe4F,GAAtB,uC,8CAAO,WAAiChE,EAAQoB,EAAanB,GAAtD,eAAAjC,EAAA,sEACgCgC,EAAOG,QAAQ6D,kBAAkB,CACpE1C,QAASF,EACTf,QAAS,CACP4D,YAAY,EACZC,kBAAkB,EAClB5D,YAAY,GAEdC,MAAO,IACPC,KAAM,CACJvB,KAAMgB,KAVL,UAaiC,OAZhCkE,EADD,QAasBtG,OAbtB,yCAcIsG,GAdJ,aAgBC,IAAI/F,MAAM,yCAhBX,4C,sBAoBA,SAAegG,GAAtB,qC,8CAAO,WAAgCpE,EAAQoB,GAAxC,eAAApD,EAAA,sEACkBgC,EAAOqE,QAAQ,CACpCxB,SAAU,CAACzB,KAFR,YACCmC,EADD,iDAKIA,EAASV,SAASzB,GAAlB,WALJ,aAOC,IAAIhD,MAAM,uCAPX,4C,sBAWA,SAAekG,GAAtB,qC,8CAAO,WAAoCtE,EAAQoB,GAA5C,eAAApD,EAAA,sEAC0BgC,EAAOG,QAAQoE,mBAAmB,CAC/DjD,QAASF,IAFN,UAI2B,OAH1BR,EADD,QAIgB/C,OAJhB,yCAKI+C,EAAiBzC,MALrB,aAOC,IAAIC,MAAM,gCAPX,4C,sBAWA,SAAeoG,GAAtB,uC,8CAAO,WAAgCxE,EAAQoB,EAAaqD,GAArD,eAAAzG,EAAA,sEACkBgC,EAAO0E,cAAc,CAC1C7B,SAAU,CAACzB,GACXuD,kBAAmB,CAACF,KAHjB,YACClB,EADD,iDAMIA,EAASV,UAAYU,EAASV,SAASzB,IAN3C,aAQC,IAAIhD,MAAM,sCARX,4C,sBAYA,SAAewG,GAAtB,qC,8CAAO,WAAoC5E,EAAQ6E,GAA5C,eAAA7G,EAAA,sEACkBgC,EAAOqE,QAAQ,CACpCxB,SAAUgC,EACVC,cAAc,EACdC,cAAc,IAJX,YACCxB,EADD,iDAOIA,EAASV,UAAY,IAPzB,aASC,IAAIzE,MAAM,8BATX,4C,sBAaA,SAAe4G,GAAtB,qC,8CAAO,WAAqChF,EAAQsB,GAA7C,eAAAtD,EAAA,sEACkBgC,EAAOG,QAAQC,sBAAsB,CAC1Da,OAAQ,UAAYK,EAAU,MAF3B,UAImB,OAHlBiC,EADD,QAIQ1F,OAJR,yCAKI0F,EAASpF,MALb,aAOC,IAAIC,MAAM,gCAPX,4C,sBAWA,SAAe6G,GAAtB,qC,8CAAO,WAAoCjF,EAAQkF,GAA5C,eAAAlH,EAAA,sEACkBgC,EAAOG,QAAQY,mBAAmB,CACvDE,OAAQ,UAAYiE,EAAS,MAF1B,UAImB,OAHlB3B,EADD,QAIQ1F,OAJR,yCAKI0F,EAASpF,MALb,aAOC,IAAIC,MAAM,6BAPX,4C,sBAWA,SAAe+G,GAAtB,uC,8CAAO,WAAiCnF,EAAQsB,EAAS8D,GAAlD,eAAApH,EAAA,sEACkBgC,EAAOqF,iBAAiB,CAC7C/D,UACA8D,mBACAE,OAAQ,CACNC,KAAM,UACN5G,MAAO,OANN,YACC4E,EADD,iDAUIA,EAASpF,MAVb,aAYC,IAAIC,MAAM,gCAZX,4C,sBAgBA,SAAeoH,GAAtB,yC,8CAAO,WACLxF,EACAsB,EACA8D,EACAK,GAJK,eAAAzH,EAAA,sEAMkBgC,EAAO0F,oBAAoB,CAChDpE,UACA8D,mBACAK,oBATG,YAMClC,EAND,iDAYIA,EAASpF,MAZb,aAcC,IAAIC,MAAM,gCAdX,4C,sBAkBA,SAAeuH,GAAtB,yC,8CAAO,WACL3F,EACAsB,EACA8D,EACAzG,GAJK,eAAAX,EAAA,sEAMkBgC,EAAOqF,iBAAiB,CAC7C/D,UACA8D,mBACAE,OAAQ,CACNC,KAAM,UACN5G,WAXC,YAMC4E,EAND,iDAeIA,EAASpF,MAfb,aAiBC,IAAIC,MAAM,gCAjBX,4C,sBAqBA,SAAewH,GAAtB,uC,8CAAO,WAA+B5F,EAAQ8B,EAAM+D,GAA7C,eAAA7H,EAAA,sEACsBgC,EAAOG,QAAQ6B,gBAAgB,CACxDF,KAAMA,EACN3D,KAAM,CACJ2H,OAAQD,KAJP,UAOuB,OANtBE,EADD,QAOYlI,OAPZ,yCAQIkI,EAAa5H,MARjB,aAUC,IAAIC,MAAM,yCAVX,4C,yDCzNQ4H,GA3NG,WAChB,IAAMC,EAAUjL,IACVkL,EAAUC,cACVrE,EAAOsE,KAAOC,eAEpB,EAA0BC,mBAAS,CACjCC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,IAHX,mBAAOC,EAAP,KAAcC,EAAd,KAKA,EAAsCL,mBAAS,CAAEzE,MAAO,GAAI+E,SAAU,KAAtE,mBAAO7I,EAAP,KAAoB8I,EAApB,KACA,EAAgDP,oBAAS,GAAzD,mBAAOQ,EAAP,KAAyBC,EAAzB,KAEMC,EAAe,SAACzB,GAAD,OAAU,SAAC0B,GAC9B,OAAQ1B,GACN,IAAK,QACHsB,EAAe,2BAAK9I,GAAN,IAAmB8D,MAAOoF,EAAEC,OAAOvI,SACjD,MACF,IAAK,WACHkI,EAAe,2BAAK9I,GAAN,IAAmB6I,SAAUK,EAAEC,OAAOvI,SACpD,MACF,QACE,UAIAwI,EAAY,uCAAG,WAAOF,GAAP,qBAAAjJ,EAAA,6DACnBiJ,EAAEG,iBADiB,SAGjBT,EAAS,2BAAKD,GAAN,IAAaD,SAAS,KAHb,SAIgB3I,EAAOC,GAJvB,OAIXsJ,EAJW,SAKOA,EAAmBC,OAAnCjI,EALS,EAKTA,KAAMH,EALG,EAKHA,MACdyH,EAAS,2BACJD,GADG,IAENH,QAAS,CAAE1I,QAAQ,EAAM2I,IAAK,8BAC9BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAE/BxH,EAAa,CAAEK,OAAMH,SAAT,sBAAkB,8BAAAlB,EAAA,+EAECyB,EAAiBJ,EAAKK,GAAIR,GAF3B,cAEtBqI,EAFsB,gBAGT1H,EACf0H,EAAeD,OAAOE,SAAS,GAAG9H,GAClCR,GALwB,OAGtBuI,EAHsB,OAO1B/I,EAAgB,iBAAkB6I,EAAeD,OAAOE,UACxD9I,EACE,wBACA6I,EAAeD,OAAOE,SAAS,IAEjC9I,EAAgB,qBAAsB+I,GACtC/I,EAAgB,OAAQoD,GACxB6E,EAAS,2BACJD,GADG,IAENH,QAAS,CAAE1I,QAAQ,EAAM2I,IAAK,IAC9BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEXP,EAAQwB,KAAK,cApBa,wDAsBpB,IAAItJ,MAAJ,MAtBoB,2DAXb,kDAqCjBuI,EAAS,2BACJD,GADG,IAENrI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,KAAItE,SAChCuE,SAAS,EACTF,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,OAzChB,0DAAH,sDA8CZmB,EAAqB,WACzBZ,GAAoB,SAACtG,GAAD,OAAWA,MAGjC,OACE,mCACE,qBAAKmH,UAAW3B,EAAQpK,KAAxB,SACE,qBAAK+L,UAAW3B,EAAQ1J,OAAxB,SACE,qBAAKqL,UAAW3B,EAAQxJ,MAAxB,SACE,cAACoL,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,sBAAKP,UAAW3B,EAAQ/K,KAAxB,UACE,eAAC2M,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAIC,GAAI,GAAIF,GAAI,GAA/B,SACE,qBAAKL,UAAW3B,EAAQ3I,iBAAxB,SACE,sBAAMsK,UAAW3B,EAAQmC,QAAzB,SACE,qBACEC,IAAI,yBACJC,IAAI,cACJhM,MAAO,YAKf,cAACuL,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAIC,GAAI,GAAIF,GAAI,GAA/B,SACE,cAACM,EAAA,EAAD,CACEX,UAAW3B,EAAQrJ,YACnB4L,MAAM,SAFR,kEASJ,uBAAMC,SAAUtB,EAAhB,UACE,eAACU,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASW,QAAS,EAA1C,UACE,eAACb,EAAA,EAAD,CAAMI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIH,MAAI,EAAlC,UACE,sBAAKJ,UAAW3B,EAAQ0C,UAAxB,UACGjC,EAAMH,QAAQ1I,QACb,cAAC+K,GAAA,EAAD,CAAOC,SAAS,UAAhB,SACGnC,EAAMH,QAAQC,MAGlBE,EAAMrI,MAAMR,QACX,cAAC+K,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBnC,EAAMrI,MAAMmI,SAGzC,uBACA,0BAEF,cAACqB,EAAA,EAAD,CAAMI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIH,MAAI,EAAlC,SACE,cAACc,EAAA,EAAD,CACEvD,KAAK,OACLwD,QAAQ,WACRvH,KAAK,QACLwH,WAAS,EACTC,aAAa,QACbrB,UAAW3B,EAAQzK,eACnB0N,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBlN,SAAS,QAAzB,SACE,cAACmN,EAAA,EAAD,CACEzB,UAAW3B,EAAQxK,mBAK3B6N,YAAY,iBACZC,UAAQ,EACRC,SAAUxC,EAAa,SACvBrI,MAAOZ,EAAY8D,MACnB4H,WAAS,MAGb,cAAC5B,EAAA,EAAD,CAAMI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIH,MAAI,EAAlC,SACE,cAACc,EAAA,EAAD,CACEvD,KAAMuB,EAAmB,WAAa,OACtCmC,aAAa,WACbF,QAAQ,WACRnB,UAAW3B,EAAQzK,eACnBgG,KAAK,WACL0H,WAAY,CACVQ,aACE,cAACN,EAAA,EAAD,CAAgBlN,SAAS,MAAzB,SACG4K,EACC,cAAC6C,EAAA,EAAD,CACE/B,UAAW3B,EAAQtK,iBACnBiO,QAASjC,IAGX,cAACkC,EAAA,EAAD,CACEjC,UAAW3B,EAAQxK,cACnBmO,QAASjC,MAKjBwB,eACE,cAACC,EAAA,EAAD,CAAgBlN,SAAS,QAAzB,SACE,cAAC4N,EAAA,EAAD,CACElC,UAAW3B,EAAQxK,mBAK3BuN,WAAS,EACTM,YAAY,WACZC,UAAQ,EACRC,SAAUxC,EAAa,YACvBrI,MAAOZ,EAAY6I,gBAIzB,uBAEA,cAACiB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAIC,GAAI,GAAIF,GAAI,GAA/B,SACE,cAAC8B,EAAA,EAAD,CACEnC,UAAW3B,EAAQhJ,OACnB+L,WAAS,EACT/C,QAAS,CAAE+D,SAAU/D,EAAQ7I,gBAC7B4M,SAAUtD,EAAMD,QAChBlB,KAAK,SACL0E,UACEvD,EAAMD,QACJ,cAACyD,EAAA,EAAD,CACEtC,UAAW3B,EAAQzI,OACnB2M,KAAM,KAEN,KAZR,SAeGzD,EAAMD,QAAU,aAAe,6CCvN3C2D,GATD,WACZ,OACE,mCACE,cAAC,EAAD,UACE,cAAC,GAAD,S,0BCcOC,GAlBM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,0BACnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACNpL,IACE,cAACgL,EAAD,eAAeI,IAEf,cAAC,IAAD,CACEC,GAAI,CACFC,SAAU,IACVC,MAAO,CAAEC,KAAMJ,EAAMK,kB,iBCQlBC,GAlBG,SAAC,GAAD,IAAcV,EAAd,EAAGC,UAAyBC,EAA5B,0BAChB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACNpL,IACE,cAAC,IAAD,CACEqL,GAAI,CACFC,SAAU,aACVC,MAAO,CAAEC,KAAMJ,EAAMK,aAIzB,cAACT,EAAD,eAAeI,S,qJCdV1P,GAAYC,YAAW,CAClCgQ,OAAO,CACL5N,gBAAgB,UAChBL,MAAM,UACN1B,aAAa,MACbF,OAAO,mBAET6B,OAAQ,CACNE,cAAe,OACfzB,SAAU,QAEZwP,UAAW,CACTC,SAAU,QACVC,OAAO,GAETC,WAAW,CACTrO,MAAM,a,qBChBGhC,GAAYC,YAAW,CAClCqQ,SAAU,CACR1P,OAAQ,WAEV2P,UAAU,CACRvO,MAAM,WAER6E,MAAM,CACJnG,SAAS,QAEX8P,WAAW,CACT9P,SAAS,QAEXuP,OAAO,K,oBCbIQ,GAA2B,SAACjK,GAEvC,OADYA,EAAKkK,MAAM,KAEpBC,KAAI,SAACC,GACJ,OAAOA,EAAK,GAAGC,cAAgBD,EAAKE,UAAU,MAE/CC,KAAK,MAWGC,GAAyB,WACpC,QAAIpN,aAAaW,QAAQ,0BAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,2BAM9B0M,GAAa,WACxB,QAAIrN,aAAaW,QAAQ,uBAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,wBAM9B2M,GAAoB,WAC/B,QAAItN,aAAaW,QAAQ,sBAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,uBAM9B4M,GAA4B,WACvC,QAAIvN,aAAaW,QAAQ,8BAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,+BAM9B6M,GAAc,SAACC,EAAOC,GACjC,OAAID,EAAQ,IAAM,EACT,CACLhP,gBAAiB,UACjBf,MAAO,OACPD,OAAQ,OACRW,MAAO,UACP1B,aAAc,OAEP+Q,EAAQ,IAAM,EAChB,CACLhP,gBAAiB,UACjBf,MAAO,OACPD,OAAQ,OACRW,MAAO,UACP1B,aAAc,OAEP+Q,EAAQ,IAAM,EAChB,CACLhP,gBAAiB,UACjBf,MAAO,OACPD,OAAQ,OACRW,MAAO,UACP1B,aAAc,OAEP+Q,EAAQ,IAAM,EAChB,CACLhP,gBAAiB,UACjBf,MAAO,OACPD,OAAQ,OACRW,MAAO,UACP1B,aAAc,OAEP+Q,IAAUC,IAAUzK,MACtB,CACL7E,MAAO,gBAFJ,GAeIuP,GAAyB,SAAC/K,GACrC,GAAIA,EAAM,CACR,IAAIgL,EAAQhL,EAAKkK,MAAM,KACrBe,EAAWD,EAAM,GAAGV,UAAU,EAAG,GAAGD,cACtC,OAAIW,EAAME,OAAS,EACjBD,GAAYD,EAAMA,EAAME,OAAS,GAAGZ,UAAU,EAAG,GAAGD,cAG/CW,EAAM,GAAGV,UAAU,EAAG,GAAGD,cAElC,OAAO,GAWIc,GAAa,SAACC,GACzB,OAAIA,EACKC,KAAO,IAAIC,KAAKF,IAAOG,OAAO,wBAEhC,MAGIC,GAAiB,SAACC,EAAQZ,GACrC,OACGY,GAAUA,EAAOP,OAAS,IAAgB,OAAVL,GAChCY,GAAUA,EAAOP,OAAS,IAAgB,gBAAVL,EAE1BY,EAAOnB,UAAU,EAAG,IAAM,MAE/BmB,GAAUA,EAAOP,OAAS,GACrBO,EAAOnB,UAAU,EAAG,IAAM,MAE5BmB,GAAU,KAaNC,GAAY,SAACC,GACxB,MAA0B,cAAtBA,EAAUjL,QACL,kCAELiL,EAAUjL,QACL,qBAEFiL,EAAU9O,MAAM6D,SAcZkL,GAAiB,SAACjP,EAAMI,GACnC,GAAIJ,EAAM,OAAOA,EAAKkP,QAAQpM,QAAO,SAAC+G,GAAD,OAAUA,EAAKxG,OAAL,cAAqBjD,EAAImB,QAG7D4N,GAAqB,SAACnP,EAAMoP,GACvC,GAAIpP,EAAM,OAAOA,EAAK8C,QAAO,SAAC+G,GAAD,OAAUA,EAAKxG,OAAL,gBAAuB+L,EAAM,GAAG7N,QAG5D8N,GAAsB,SAACrP,EAAMI,GACxC,GAAIJ,EAAM,OAAOA,EAAKkP,QAAQpM,QAAO,SAAC+G,GAAD,OAAUA,EAAKxG,OAAL,cAAqBjD,EAAImB,GAAzB,yBAOpC+N,GAAyB,SAACC,GAErC,OAAO,IAAIC,SAAS,UAAYD,EAAzB,MAGIE,GAA8B,SAACC,EAAeC,GACzD,OAAOD,EAAcC,IAUVC,GAAkB,SAACC,GAC9B,OAAIA,EAAkBnB,KAAOoB,KAAKD,EAAY,KAAUjB,OAAO,SACxD,MAGImB,GAAwB,SAACjB,GACpC,OAAIA,EAAeA,EAAOkB,OAAO,GAAGtC,cAAgBoB,EAAOmB,MAAM,GAC1D,MAGIC,GAAwB,SAACC,GACpC,OAAIA,GACG,2BAGIC,GAAiB,SAAC/M,GAC7B,OAAIA,GACG,WAGIgN,GAAwB,WACnC,QAAI5P,aAAaW,QAAQ,0BAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,2BAqB9BkP,GAAuB,SAACC,GACnC,IAAMC,EAAgBC,OAAOC,OAAOH,GAAUzN,QAAO,SAAC+G,GAAD,OAA0B,IAAhBA,EAAK0E,UACpE,OAAIiC,EAAcjC,OAAS,EAClBiC,EACJG,QAAO,SAAC9Q,EAAG+Q,GAAJ,OAAU/Q,EAAI,IAAM+Q,KAC3BrD,MAAM,KACNK,KAAK,KAEH,IAGF,SAASiD,GAAmBxC,GACjC,OAAIA,EACKA,EACJd,MAAM,KACNK,KAAK,KACLkD,QAAQ,iBAAkB,IAExBzC,EAGF,SAAS0C,GAAgBC,GAC9B,MAA2B,kBAAbA,EAAqC,SAAbA,EAAsBA,EAGvD,IAmBMC,GAA6B,SAAClN,GACzC,OAAIA,EAAgB,sBAAwBA,EACrC,MAQImN,GAAkB,SAACC,EAAQhO,GACtC,SACEgO,GACAA,EAAOxN,KAAKgE,QACZwJ,EAAOxN,KAAKgE,OAAOyJ,eACnBD,EAAOxN,KAAKgE,OAAOyJ,cAAcC,SAASlO,KAOjCmO,GAAmB,SAACH,EAAQhO,GACvC,SACEgO,GACAA,EAAOxN,KAAKgE,QACZwJ,EAAOxN,KAAKgE,OAAO4J,iBACnBJ,EAAOxN,KAAKgE,OAAO4J,gBAAgBF,SAASlO,KAOnCqO,GAAoB,SAACC,EAAeC,EAAgB7P,EAAQ2C,GACvE,GACEkN,EAAe3N,SACf2N,EAAe3N,QAAQ4N,MACvBD,EAAe3N,QAAQ4N,KAAKpQ,IAC5BmQ,EAAe3N,QAAQ4N,KAAKtO,OAC3BqO,EAAe3N,QAAQ4N,KAAKxB,IAC7B,CACA,IAAMA,EAAMtO,EAAO+P,WAAW,CAC5BzO,QAASqB,EACTjD,GAAImQ,EAAe3N,QAAQ4N,KAAKpQ,GAChC8B,KAAMqO,EAAe3N,QAAQ4N,KAAKtO,OAEpCoO,EAAcE,KAAKxB,IAAMA,EAE3B,OAAOsB,GAGII,GAAsB,SAACJ,GAelC,OAdIA,EAAcE,MAAQF,EAAcE,KAAKxB,MAAKsB,EAAcK,MAAQL,EAAcE,KAAKxB,KAEvFsB,EAAcE,MAAQF,EAAcE,KAAKI,SAC3CN,EAAcO,YAAcP,EAAcE,KAAKI,QAE7CN,EAAc1N,SAAW0N,EAAc1N,QAAQkO,kBACjDR,EAAcQ,gBAAkBR,EAAc1N,QAAQkO,iBAEpDR,EAAc1N,SAAW0N,EAAc1N,QAAQmO,mBACjDT,EAAcS,iBAAmBT,EAAc1N,QAAQmO,kBAErDT,EAAc1N,SAAW0N,EAAc1N,QAAQgO,SACjDN,EAAcM,OAASN,EAAc1N,QAAQgO,QAExCN,GAGIU,GAAiB,SAACT,EAAgBD,GAC7C,OACGC,EAAeU,SACdV,EAAeU,QAAQ5P,SACvBiO,OAAO4B,KAAKX,EAAeU,QAAQ5P,SAAS,IAC9CiP,EAAca,MACbb,EAAc1N,SAAW0N,EAAc1N,QAAQuO,MC/TrCC,GArCK,SAAC,GAAqC,IAAnCpE,EAAkC,EAAlCA,QAASqE,EAAyB,EAAzBA,YAAatE,EAAY,EAAZA,MACrCpG,EAAUjL,KAEhB,OACE,mCACE,cAAC4V,GAAA,EAAD,CAAUC,OAAM,UAAKxE,GAASzC,QAAS,kBAAM+G,EAAYrE,IAAzD,SACE,eAACzE,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC4I,GAAA,EAAD,CACElJ,UAAW3B,EAAQgF,OACnB8F,MAAO3E,GAAYC,GACnBtD,QAAQ,SAHV,SAKE,cAACR,EAAA,EAAD,CAAYsI,OAAO,cAAcjJ,UAAW3B,EAAQuF,WAApD,SACGc,GAAWA,EAAQzK,MAChB4J,GAAyBa,EAAQzK,MAAMuM,MAAM,EAAG,IAChD,WAIV,cAACvG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACK,EAAA,EAAD,CAAYsI,OAAO,QAAQG,QAAM,EAACpJ,UAAW3B,EAAQpE,MAArD,SACGyK,EAAQzK,UAGb,cAACgG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC,KAAD,CACE6I,MAAO3E,GAAYE,EAAQzK,MAAOmK,IAClCpE,UAAW3B,EAAQsF,sBCHlB0F,GA9BK,SAAC,GAAkB,IAAhBzJ,EAAe,EAAfA,SACftI,EAAQZ,EAAU,SAElBqS,EAAW,uCAAG,WAAOO,GAAP,eAAAlT,EAAA,+EAEC6B,EAAaqR,EAAgBxR,GAAIR,GAFlC,OAEZuI,EAFY,OAGhB/I,EAAgB,wBAAyBwS,GACzCxS,EAAgB,qBAAsB+I,GACtC0J,OAAOpG,SAASqG,KAAO,aALP,sDAOV,IAAIhT,MAAJ,MAPU,yDAAH,sDAWjB,SAASiT,IACP,OAAO7J,EAASmE,KAAI,SAACW,EAASgF,GAC5B,OACE,cAAC,GAAD,CACEhF,QAASA,EAETqE,YAAaA,EACbtE,MAAOiF,GAFFA,MAQb,OAAO,cAACD,EAAD,KCbM,SAASE,GAAT,GAA0C,IAAb/J,EAAY,EAAZA,SACpCvB,EAAUjL,KAChB,EAAwBsL,oBAAS,GAAjC,mBAAOkL,EAAP,KAAaC,EAAb,KACMC,EAAWC,iBAAOH,GAClBI,EAAYD,iBAAO,MAMnBE,EAAc,SAACC,GACfF,EAAUG,SAAWH,EAAUG,QAAQC,SAASF,EAAM5K,SAG1DuK,GAAQ,IAGV,SAASQ,EAAkBH,GACP,QAAdA,EAAMvT,MACRuT,EAAM1K,iBACNqK,GAAQ,IAWZ,OAPAS,qBAAU,YACiB,IAArBR,EAASK,UAA6B,IAATP,GAC/BI,EAAUG,QAAQI,QAEpBT,EAASK,QAAUP,IAClB,CAACA,IAGF,8BACE,gCACE,eAACzH,EAAA,EAAD,CACEqI,IAAKR,EACL,gBAAeJ,EAAO,sBAAmBa,EACzC,gBAAc,OACdzK,UAAW3B,EAAQhJ,OACnBqV,QAAS,cAACC,GAAA,EAAD,IACT3I,QAlCa,WACnB6H,GAAQ,SAACe,GAAD,OAAoBA,MA2BxB,UAQE,cAAC1B,GAAA,EAAD,CAAQlJ,UAAW3B,EAAQgF,OAAQlC,QAAQ,SAA3C,SACG0C,GAAyBO,KAAyBnK,MAAMuM,MAAM,EAAG,MAEnEpC,KAAyBnK,SAE5B,cAAC4Q,GAAA,EAAD,CACEjB,KAAMA,EACNkB,SAAUd,EAAUG,QACpBY,UAAMN,EACNO,YAAU,EACVC,eAAa,EACbjL,UAAW3B,EAAQiF,UANrB,SAQG,gBAAG4H,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACC,cAACC,GAAA,EAAD,2BACMF,GADN,IAEE/B,MAAO,CACLkC,gBAA+B,WAAdF,EAAyB,aAAe,iBAH7D,SAME,cAACG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmBC,YAAavB,EAAhC,SACE,eAACwB,GAAA,EAAD,CAAUC,cAAe9B,EAAM9R,GAAG,iBAAiB6T,UAAWtB,EAA9D,UACE,cAAC,GAAD,CAAazK,SAAUA,IACvB,cAACgM,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACE,cAACC,GAAA,EAAD,MAEF,eAAC/C,GAAA,EAAD,CAAUhH,QAAS,kBXxDf3K,EWwD6B,kBAAOkS,OAAOpG,SAASqG,KAAO,KXvDjFxS,aAAagV,aACb3U,IAFqB,IAACA,GWwDJ,UACE,qBAAKoJ,IAAI,sBAAsBC,IAAI,YACnC,cAACkL,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,kECzFjB,IAAMzY,GAAYC,YAAW,CAClC4Y,KAAM,CACJC,SAAU,GAEZjY,KAAM,CACJwB,gBAAiB,QACjB0W,UACE,qGAEJC,WAAY,CACVhX,MAAO,QACP5B,OAAQ,QAEV6B,OAAQ,CACNE,cAAe,OACfzB,SAAU,QAEZuY,aAAc,CACZvX,WAAY,OACZC,YAAa,OACbuX,WAAY,sBACZ7X,OAAQ,U,UClBG,SAAS8X,GAAWzJ,GACjC,IAAM0J,EAASlI,KACf,OACE,8BACE,eAACmI,GAAA,EAAD,CACEC,UAAW,cAACC,GAAA,EAAD,CAAc7Y,SAAS,UAClC,aAAW,aAFb,UAIE,cAAC8Y,GAAA,EAAD,CAAMxX,MAAM,UAAUoU,KAAK,aAA3B,SACE,cAAC7I,EAAA,EAAD,CAAYQ,QAAQ,QAApB,4BAED2B,EAAM+J,YACL,cAACD,GAAA,EAAD,CAAMxX,MAAM,UAAUoU,KAAK,YAA3B,SACE,cAAC7I,EAAA,EAAD,CAAYvL,MAAM,UAAU+L,QAAQ,QAApC,SACGqL,GAAUA,EAAO5S,SAItB,cAAC+G,EAAA,EAAD,CAAYvL,MAAM,UAAU+L,QAAQ,QAApC,SACGqL,GAAUA,EAAO5S,OAGrBkJ,EAAM+J,YACL,cAAClM,EAAA,EAAD,CAAYvL,MAAM,UAAU+L,QAAQ,QAApC,SACG2B,EAAM+J,cAEP,UCbG,SAASC,KACtB,IAAMzO,EAAUjL,KACVkL,EAAUC,cAChB,EAAgCG,mBAAS,IAAzC,mBAAOkB,EAAP,KAAiBmN,EAAjB,KACMP,EAASlI,KACT9K,EAAcoN,KAEpB0D,qBAAU,WACRyC,INdE/V,aAAaW,QAAQ,mBAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,sBMctC,IA6CH,OACE,qBAAKqI,UAAW3B,EAAQ4N,KAAxB,SACE,cAACe,GAAA,EAAD,CAAQ1Y,SAAS,SAAS0L,UAAW3B,EAAQpK,KAA7C,SACE,eAACgZ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEpV,GAAG,cACHqV,KAAK,QACLnL,QAAS,kBAAM1D,EAAQwB,KAAK,eAC5BE,UAAW3B,EAAQ+O,WACnBhY,MAAM,UACN,aAAW,cANb,SAQE,qBAAKqL,IAAI,yBAAyB/L,MAAO,GAAIgM,IAAI,OAEnD,qBAAKV,UAAW3B,EAAQgO,eAxDI,eAA9B/N,EAAQ6E,SAASH,SAEjB,cAACyJ,GAAA,EAAD,CAAa,aAAW,aAAxB,SACE,cAAC9L,EAAA,EAAD,CAAYvL,MAAM,UAAU+L,QAAQ,QAApC,4BAKmC,cAA9B7C,EAAQ6E,SAASH,SACnB,cAACuJ,GAAD,CAAYM,YAAa,aACO,cAA9BvO,EAAQ6E,SAASH,SACnB,cAACuJ,GAAD,CAAYM,YAAa,KACO,WAA9BvO,EAAQ6E,SAASH,SACnB,cAACuJ,GAAD,CAAYM,YAAa,UACO,qBAA9BvO,EAAQ6E,SAASH,SACnB,cAACuJ,GAAD,CAAYM,YAAa,oBACO,sBAA9BvO,EAAQ6E,SAASH,SACnB,cAACuJ,GAAD,CAAYM,YAAa,qBACO,uBAA9BvO,EAAQ6E,SAASH,SAExB,eAACyJ,GAAA,EAAD,CAAaC,UAAW,cAACC,GAAA,EAAD,CAAc7Y,SAAS,UAAY,aAAW,aAAtE,UACE,cAAC8Y,GAAA,EAAD,CAAMxX,MAAM,UAAUoU,KAAK,aAA3B,SACE,cAAC7I,EAAA,EAAD,CAAYQ,QAAQ,QAApB,4BAEF,cAACyL,GAAA,EAAD,CAAMxX,MAAM,UAAUoU,KAAK,YAA3B,SACE,cAAC7I,EAAA,EAAD,CAAYvL,MAAM,UAAU+L,QAAQ,QAApC,SACGqL,GAAUA,EAAO5S,SAGtB,cAACgT,GAAA,EAAD,CAAMxX,MAAM,UAAUoU,KAAK,YAA3B,SACE,cAAC7I,EAAA,EAAD,CAAYvL,MAAM,UAAU+L,QAAQ,QAApC,wBAIF,cAACR,EAAA,EAAD,CAAYvL,MAAM,UAAU+L,QAAQ,QAApC,SACG3H,YAjBF,EAwCD,qBAAKwG,UAAW3B,EAAQ4N,OACxB,cAAChM,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC+B,EAAA,EAAD,CAAQnC,UAAW3B,EAAQhJ,OAA3B,oBAEF,cAAC4K,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,qBAAKJ,UAAW3B,EAAQgO,iBAE1B,cAACpM,EAAA,EAAD,CAAMG,MAAI,EAACJ,UAAW3B,EAAQ+N,WAA9B,SACE,cAACzC,GAAD,CAAmB/J,SAAUA,a,mFC9F5BxM,GAAYC,YAAW,CAClCga,SAAU,CACR5Z,WAAY,sCACZO,OAAQ,UACRR,OAAQ,OAER8Z,OAAQ,qBACR3Z,QAAS,EACT,WAAY,CACVO,QAAS,QAEX,UAAW,CACT,WAAY,CACVA,QAAS,iBAGbqZ,UAAW,QAEbC,UAAW,CACT,uBAAwB,GAIxB,sBAAuB,CACrB/X,gBAAiB,UACjBgY,aAAc,mBAEhB,uBAAwB,CACtBlK,SAAU,UAIdmK,UAAW,CACT5Z,SAAU,OACVwB,WAAY,OAEdqY,QAAS,CACP1Y,KAAM,+KACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,KAEXia,QAAS,CACP3Y,KAAM,+KACNE,cAAe,qCACfD,UAAW,OACXpB,SAAU,OAGVsB,MAAO,UACPzB,QAAS,GAEXka,MAAO,CACLta,QAAS,OAEXua,MAAO,CACLC,eAAgB,OAChBC,SAAU,OACVC,UAAW,UAEbC,aAAc,CACZza,WAAY,eAEd0a,cAAe,CACbzZ,MAAO,SAET0Z,gBAAiB,CACf,gCAAiC,CAC/B3a,WAAY,sCACZC,aAAc,MACdC,QAAS,M,kBCtEF0a,GAAeC,cAAW,SAACC,GAAD,MAAY,CACjDC,QAAS,CACP/Y,gBAAiB8Y,EAAME,QAAQC,OAAOC,MACtCxC,UAAWoC,EAAMK,QAAQ,GACzB3Z,KACE,+KACFE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,MATe2a,CAWxBO,MCTW,SAASC,GAAWhM,GACjC,IAAQiM,EAAQjM,EAARiM,IACF1Q,EAAUjL,KACV4b,EAAYlM,EAAMiM,KAAOjM,EAAMiM,IAAI7Q,QAAU4E,EAAMiM,IAAI7Q,OAAO+Q,KAC9DC,EAAWpM,EAAMiM,KAAOjM,EAAMiM,IAAI7Q,QAAU4E,EAAMiM,IAAI7Q,OAAOiR,IAEnE,OACE,iCAEQrM,EAAMsM,QAAWJ,GAAcE,EAYxBpM,EAAMsM,SAAWF,EAExB,cAACb,GAAD,CAAcgB,MAAM,SAApB,SACE,cAACnC,GAAA,EAAD,CACEC,KAAK,QACLnN,UAAW3B,EAAQwP,MACnB7L,QAAS,SAACkI,GAAD,OAAWpH,EAAMwM,WAAWpF,EAAO6E,IAH9C,SAKE,qBAAKtO,IAAI,kBAAkBC,IAAI,kBARhC,EAVH,cAAC2N,GAAD,CAAcgB,MAAM,OAApB,SACE,cAACnC,GAAA,EAAD,CACEC,KAAK,QACLnN,UAAW3B,EAAQwP,MACnB7L,QAAS,SAACkI,GAAD,OAAWpH,EAAMyM,SAASrF,EAAO6E,IAH5C,SAKE,qBAAKtO,IAAI,kBAAkBC,IAAI,aAoBnCoC,EAAMsM,SAAWF,EAEjB,cAACb,GAAD,CAAcgB,MAAM,MAApB,SACE,cAACnC,GAAA,EAAD,CACEC,KAAK,QACLnN,UAAW3B,EAAQwP,MACnB7L,QAAS,SAACkI,GAAD,OAAWpH,EAAM0M,QAAQtF,EAAO6E,IAH3C,SAKE,qBAAKtO,IAAI,iBAAiBC,IAAI,cAI3BoC,EAAMsM,OAEb,cAACf,GAAD,CAAcgB,MAAM,QAApB,SACE,cAACnC,GAAA,EAAD,CACEC,KAAK,QACLnN,UAAW3B,EAAQwP,MACnB7L,QAAS,SAACkI,GAAD,OAAWpH,EAAM2M,UAAUvF,EAAO6E,IAH7C,SAKE,qBAAKtO,IAAI,iBAAiBC,IAAI,mBAR/B,EAePoC,EAAMsM,OAWJ,KAVF,cAACf,GAAD,CAAcgB,MAAM,OAApB,SACE,cAACnC,GAAA,EAAD,CACEC,KAAK,QACLuC,MAAM,OACN1P,UAAW3B,EAAQwP,MACnB7L,QAAS,SAACkI,GAAD,OAAWpH,EAAM6M,QAAQzF,EAAO6E,EAAIjX,KAJ/C,SAME,qBAAK2I,IAAI,mBAAmBC,IAAI,aAItC,cAAC2N,GAAD,CAAcgB,MAAM,OAApB,SACE,cAACnC,GAAA,EAAD,CACEC,KAAK,QACLnN,UAAW3B,EAAQwP,MACnB+B,YAAa,kBAAM9M,EAAM+M,SAAQ,IACjCC,WAAY,kBAAMhN,EAAM+M,SAAQ,IAChC7N,QAAS,SAACkI,GAAD,OAAWpH,EAAMiN,QAAQ7F,EAAO6E,IAL3C,SAOE,qBAAKtO,IAAI,kBAAkBC,IAAI,aAGnC,cAAC2N,GAAD,CAAcgB,MAAM,SAApB,SACE,cAACnC,GAAA,EAAD,CACEC,KAAK,QACLuC,MAAM,SACN1P,UAAW3B,EAAQwP,MACnB+B,YAAa,kBAAM9M,EAAM+M,SAAQ,IACjCC,WAAY,kBAAMhN,EAAM+M,SAAQ,IAChC7N,QAAS,SAACkI,GAAD,OAAWpH,EAAMkN,UAAU9F,EAAO6E,EAAIjX,KANjD,SAQE,qBAAK2I,IAAI,oBAAoBC,IAAI,kB,cCjG5B,SAASuP,GAAkBnN,GACxC,IAAMzE,EAAUjL,KACV8c,EACJpN,EAAMoN,WAAapN,EAAMqN,YACrBrN,EAAMoN,WACNpN,EAAMsN,UAAUtL,OAEtB,OAAOhC,EAAMsN,UAAUtL,OACrB,cAACuL,GAAA,EAAD,CACErQ,UAAW3B,EAAQ+P,gBACnBkC,mBAAoB,CAACxN,EAAMqN,aAC3BxN,UAAU,MACVvH,MAAO8U,EACPtX,KAAMkK,EAAMlK,KACZuX,YAAarN,EAAMqN,YACnBI,aAAczN,EAAM0N,iBACpBC,mBAAoB,gBAAGvN,EAAH,EAAGA,KAAMH,EAAT,EAASA,GAAI3H,EAAb,EAAaA,MAAb,gBAA4B8H,EAA5B,YAAoCH,EAApC,eAA6C3H,IACjEsV,oBAAqB,CACnBtb,MAAO,WAETub,oBAAqB,CACnBvb,MAAO,aAGT,KCvBS,SAASwb,GAAQ9N,GAC9B,IAAMkM,EAAYlM,EAAMiM,KAAOjM,EAAMiM,IAAI7Q,QAAU4E,EAAMiM,IAAI7Q,OAAO+Q,KAC9DC,EAAWpM,EAAMiM,KAAOjM,EAAMiM,IAAI7Q,QAAU4E,EAAMiM,IAAI7Q,OAAOiR,IACnE,OACE,qCACGrM,EAAMsM,QAAUJ,EACf,cAACX,GAAD,CACEgB,MACE,qCACE,cAAC1O,EAAA,EAAD,4BAAwBmC,EAAMiM,IAAI7Q,OAAOoK,UACzC,uBACA,cAAC3H,EAAA,EAAD,gCAA4BmC,EAAMiM,IAAI7Q,OAAO2S,aAC7C,uBACA,cAAClQ,EAAA,EAAD,gCAA4BoE,GAAWjC,EAAMiM,IAAI7Q,OAAO4S,iBAP9D,SAWE,qBAAKrQ,IAAI,qBAAqBC,IAAI,cAElC,KACHoC,EAAMsM,QAAUF,EAAW,qBAAKzO,IAAI,oBAAoBC,IAAI,WAAc,QCDjF,SAASqQ,GAAqB3a,EAAG4a,EAAGC,GAClC,OAAID,EAAEC,GAAW7a,EAAE6a,IACT,EAEND,EAAEC,GAAW7a,EAAE6a,GACV,EAEF,EAGT,SAASC,GAAcC,EAAOF,GAC5B,MAAiB,SAAVE,EACH,SAAC/a,EAAG4a,GAAJ,OAAUD,GAAqB3a,EAAG4a,EAAGC,IACrC,SAAC7a,EAAG4a,GAAJ,OAAWD,GAAqB3a,EAAG4a,EAAGC,IAG5C,SAASG,GAAWC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMtN,KAAI,SAACyN,EAAI/M,GAAL,MAAe,CAAC+M,EAAI/M,MAMrD,OALA8M,EAAezY,MAAK,SAAC1C,EAAG4a,GACtB,IAAMG,EAAQG,EAAWlb,EAAE,GAAI4a,EAAE,IACjC,OAAc,IAAVG,EAAoBA,EACjB/a,EAAE,GAAK4a,EAAE,MAEXO,EAAexN,KAAI,SAACyN,GAAD,OAAQA,EAAG,MAGxB,SAASC,GAAa3O,GACnC,IAAM4O,EAAY5O,EAAM4O,UAClBtB,EAAYtN,EAAMvM,KACxB,EAA0Bob,IAAMjT,SAAS,OAAzC,mBAAOyS,EAAP,KAAcS,EAAd,KACA,EAA8BD,IAAMjT,SAAS,IAA7C,mBAAOuS,EAAP,KAAgBY,EAAhB,KACMxT,EAAUjL,KAChB,EAAwBue,IAAMjT,SAAS,GAAvC,mBAAO9F,EAAP,KAAakZ,EAAb,KACA,EAAsBH,IAAMjT,SAAS,IAA9ByR,EAAP,oBACA,EAAwBwB,IAAMjT,UAAS,GAAvC,mBAAOqT,EAAP,KAAalC,EAAb,KAEA8B,IAAMrH,WAAU,WACdwH,EAAQhP,EAAMkP,UACb,CAAClP,EAAMkP,SAEV,IAOIC,EZ6HyB,SAAC7B,EAAWxX,EAAMuX,GAC/C,OAAIC,EAAUtL,OAASqL,EACdC,EAAU5J,MAAM5N,EAAOuX,EAAavX,EAAOuX,EAAcA,GAE3DC,EYjIU8B,CAAgB9B,EAAWxX,EAAMuX,GAElD,SAASgC,EAAkBC,GACzB,IAAQC,EAA0CD,EAA1CC,UAAWC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,cAMhC,OACE,cAACC,GAAA,EAAD,CAAWxS,UAAW3B,EAAQmP,UAA9B,SACE,cAACiF,GAAA,EAAD,UACGf,EAAU3N,KAAI,SAAC2O,GAAD,OACb,cAACC,GAAA,EAAD,CAEE/R,MAAO8R,EAASE,UAChBrf,QAASmf,EAASG,eAAiB,OAAS,UAC5CC,cAAeR,IAAgBI,EAAS5a,IAAKua,EAJ/C,SAME,cAACU,GAAA,EAAD,CACE/S,UAAW3B,EAAQqP,UACnBsF,OAAQV,IAAgBI,EAAS5a,GACjCmb,UAAWX,IAAgBI,EAAS5a,GAAKua,EAAY,MACrDrQ,SAlBekR,EAkBYR,EAAS5a,GAlBR,SAACoS,GACvCqI,EAAcrI,EAAOgJ,KAab,SAMGR,EAAShD,SAXPgD,EAAS5a,IATE,IAACob,SA6B7B,IAAM1O,EAAc,SAACC,GACnB,OAAIA,EAAQ,IAAM,EACT,CACLhP,gBAAiB,UACjBL,MAAO,UACP1B,aAAc,OAEP+Q,EAAQ,IAAM,EAChB,CACLhP,gBAAiB,UACjBL,MAAO,UACP1B,aAAc,OAEP+Q,EAAQ,IAAM,EAChB,CACLhP,gBAAiB,UACjBL,MAAO,UACP1B,aAAc,OAGT,CACL+B,gBAAiB,UACjBL,MAAO,UACP1B,aAAc,QAUpB,OACE,gCACE,cAACuc,GAAD,CACEC,WAAYpN,EAAMoN,WAClBM,iBA9EmB,SAACtG,EAAOiJ,GAC3B/C,EAAUtL,QAAUqL,GACtBrN,EAAMsQ,WAAWD,GAEnBrB,EAAQqB,IA2EJva,KAAMA,EACNwX,UAAWA,EACXD,YAAaA,IAEf,cAACkD,GAAA,EAAD,CAAgBrT,UAAW3B,EAAQyP,MAAnC,SACE,eAACwF,GAAA,EAAD,CACE,kBAAgB,aAChB/Q,KAAM,SACN,aAAW,iBAHb,UAKE,cAAC4P,EAAD,CACEE,UAAWlB,EACXmB,YAAarB,EACbsB,cAxBgB,SAACrI,EAAOgJ,GAEhCtB,EADcX,IAAYiC,GAAsB,QAAV/B,EACrB,OAAS,OAC1BU,EAAWqB,IAsBHK,SAAUnD,EAAUtL,SAGhBsL,EAAUtL,OAEV,cAAC0O,GAAA,EAAD,UACGpC,GAAWa,EAAYf,GAAcC,EAAOF,IAAUlN,KACrD,SAACgL,EAAKtK,GACJ,OACE,cAACgO,GAAA,EAAD,CACEgB,OAAK,EACLzT,UAAW3B,EAAQgP,SACnBtC,KAAK,WACL2I,UAAW,EAEX1R,QAAS,SAACkI,GAAD,OACPpH,EAAM6Q,eAAezJ,EAAO6E,EAAKgD,IAPrC,SAUGL,EAAU3N,KAAI,SAAC6P,EAAUC,GACxB,OAAID,EAASvQ,OAET,cAACsP,GAAA,EAAD,CAEE/R,MAAM,OACNZ,UAAW3B,EAAQyV,UAHrB,SAKE,eAAC7T,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAAC0L,GAAA,EAAD,CAAKmI,GAAI,EAAT,SACE,cAAC7K,GAAA,EAAD,CACE/H,QAAQ,SACRgI,MAAO3E,EAAYC,GACnBhE,IAAKsO,EAAI5U,WAHX,SAKGwK,GAAuBoK,EAAInV,UAGhC,eAACgS,GAAA,EAAD,WACE,uBAAO5L,UAAW3B,EAAQsP,QAA1B,SACGoB,EAAInV,OAEP,uBACA,uBAAOoG,UAAW3B,EAAQuP,QAA1B,SACGmB,EAAInB,SAAWmB,EAAI7U,MAAQ6U,EAAIjX,QAGpC,cAAC8T,GAAA,EAAD,CAAKoI,GAAI,EAAGC,GAAI,EAAhB,SACE,cAACrD,GAAD,CACExB,OAAQwE,EAASnc,KACjBsX,IAAKA,UA3Bb,UACUA,EAAIjX,GADd,YACoB2M,EADpB,YAC6BoP,IAgCtBD,EAAS/F,MAEhB,cAAC8E,GAAA,EAAD,CAEE/R,MAAM,OACNZ,UAAW3B,EAAQ8P,cAHrB,SAKE,cAACW,GAAD,CACEC,IAAKA,EACLgB,QAASjN,EAAMiN,QACfC,UAAWlN,EAAMkN,UACjBL,QAAS7M,EAAM6M,QACfP,OAAQwE,EAASnc,KACjB8X,SAAUzM,EAAMyM,SAChBC,QAAS1M,EAAM0M,QACfF,WAAYxM,EAAMwM,WAClBG,UAAW3M,EAAM2M,UACjBI,QAASA,KAfb,UACUd,EAAIjX,GADd,YACoB2M,EADpB,YAC6BoP,IAoB/B,cAAClB,GAAA,EAAD,CAEE/R,MAAM,OACNZ,UAAW3B,EAAQyV,UAHrB,SAKG1O,GAAe2J,EAAI6E,EAAS9b,IAAK8b,EAAS9b,KAL7C,UACUiX,EAAIjX,GADd,YACoB2M,EADpB,YAC6BoP,QAtEnC,UAKU9E,EAAIjX,GALd,YAKoB2M,SAgFvB3B,EAAMxI,QACX,cAACkZ,GAAA,EAAD,UACE,cAACf,GAAA,EAAD,UACE,cAACE,GAAA,EAAD,UACE,cAAC3R,GAAA,EAAD,CAAOC,SAAU,OAAQjB,UAAW3B,EAAQ6P,aAA5C,SACGpL,EAAMxI,gBAKb,aC9PH,SAAS4Z,GAAT,GAA6C,IAAjBC,EAAgB,EAAhBA,aACzC,EAAwCzV,mBAAS,IAAjD,mBAAO0V,EAAP,KAAqBC,EAArB,KACM/V,EAAUC,cAchB+L,qBAAU,WACR,IAAMgK,EAAYjQ,MAAgBA,KAAa3E,QAAW,GACpD6U,EAAW,GACbC,EAAiB,GACrBF,EAASvQ,KAAI,SAAC0Q,EAAKC,GAcjB,OAbAD,EAAI7L,KAAK7E,KAAI,SAACpN,EAAKge,GAWjB,OAVAH,EAAiB7d,GACFiX,QAAU6G,EAAI7a,KAC7B4a,EAAeI,QACbje,EAAIie,SACJ3P,KAAO,IAAIC,KAAmB,IAAdvO,EAAIie,UAAiBzP,OAAO,wBAC9CqP,EAAeK,SACble,EAAIke,UACJ5P,KAAO,IAAIC,KAAoB,IAAfvO,EAAIke,WAAkB1P,OAAO,wBAC/CqP,EAAe5a,KAAOjD,EAAIme,WAAWlb,KACrC2a,EAASzU,KAAK0U,IACP,MAEF,KAETH,EAAgBE,GAChBzd,EAAgB,4BAA6Byd,KAC5C,IAEHjK,qBAAU,WACJ6J,EAAarP,QACfuP,EAAgBF,KAEjB,CAACA,IAcJ,OACE,cAAC1C,GAAD,CACElb,KAAM6d,EACN1C,UAzDc,CAChB,CACE5Z,GAAI,OACJ8a,UAAW,OACXlD,MAAO,OACPrM,QAAQ,GAEV,CAAEvL,GAAI,cAAe8a,UAAW,OAAQlD,MAAO,eAC/C,CAAE5X,GAAI,gBAAiB8a,UAAW,OAAQlD,MAAO,iBACjD,CAAE5X,GAAI,UAAW8a,UAAW,OAAQlD,MAAO,eAiDzCiE,eAhBmB,SAACzJ,EAAO6E,GAC7B,IACE,IAAMgG,EAAcX,EAAa/a,QAAO,SAAUob,GAChD,OAAOA,EAAIO,gBAAkBjG,EAAIiG,iBAEnCle,EAAgB,oBAAqBie,EAAY,IACjDzW,EAAQwB,KAAK,aACb,MAAO+T,GACP,MAAM,IAAIrd,MAAMqd,KAShBvZ,QAAS,gBACT0X,OAAQ,I,aCrED5e,GAAYC,aAAW,SAACkb,GAAD,MAAY,CAC9CtC,KAAM,CACJC,SAAU,GAEZmD,MAAO,CACLpa,KAAM,oJACNE,cAAe,qCACfC,MAAO,UACPtB,SAAU,QAIZmhB,OAAO,cACL3gB,SAAU,WACVZ,aAAc6a,EAAM2G,MAAMxhB,aAC1B+B,gBAAiB,QAEjBV,YAAawZ,EAAMzN,QAAQ,GAC3BhM,WAAY,EACZwY,OAAQ,oBACR5Y,MAAO,QACN6Z,EAAM4G,YAAYC,GAAG,MAAQ,CAC5BtgB,WAAYyZ,EAAMzN,QAAQ,GAC1BpM,MAAO,SAGX2gB,WAAY,CACV9hB,QAASgb,EAAMzN,QAAQ,EAAG,GAC1BrM,OAAQ,OACRH,SAAU,WACVghB,cAAe,OACfphB,QAAS,OACTqhB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTrgB,MAAO,WAETsgB,WAAW,cACTniB,QAASgb,EAAMzN,QAAQ,EAAG,EAAG,EAAG,GAEhC6U,YAAY,cAAD,OAAgBpH,EAAMzN,QAAQ,GAA9B,OACXkK,WAAYuD,EAAMqH,YAAY9f,OAAO,SACrCpB,MAAO,QACN6Z,EAAM4G,YAAYC,GAAG,MAAQ,CAC5B1gB,MAAO,SAGXmhB,YAAa,CACXpiB,WAAY,uCAEZC,aAAc,MACdC,QAAS,GAGXmiB,WAAY,CACV1gB,MAAO,WAGT2gB,kBAAmB,CACjBtiB,WAAY,QACZO,OAAQ,UACRmY,UAAW,wBACXmB,OAAQ,oBACR5Z,aAAc,OACd0B,MAAO,QACPzB,QAAS,EACTJ,QAAS,oBACTmB,MAAO,SAETshB,eAAgB,CACdviB,WAAY,sCACZO,OAAQ,UACRmY,UAAW,wBACXmB,OAAQ,oBACR5Z,aAAc,OACd0B,MAAO,UACPzB,QAAS,EACTJ,QAAS,oBACTmB,MAAO,SAGTuhB,kBAAmB,CACjB1iB,QAAS,QAGX2iB,aAAc,CACZxhB,MAAO,QACPlB,OAAQ,MACRiB,OAAQ,OACR0X,UAAW,oBACX1W,gBAAiB,QACjB6X,OAAQ,oBACR5Z,aAAc,MACdC,QAAS,EACTsB,KAAM,8HACNE,cAAe,qCACfC,MAAO,UACPtB,SAAU,QAEZqiB,WAAY,CACV1iB,WAAY,sCACZC,aAAc,MACdC,QAAS,EACTyB,MAAO,QACPV,MAAO,QACPlB,OAAQ,MACRiB,OAAQ,OACRX,SAAU,OACV,UAAW,CACTL,WAAY,sCACZ2B,MAAO,UAGXghB,UAAW,CACTtiB,SAAU,QAEZuiB,mBAAoB,CAClBC,UAAW,MACX7iB,WAAY,UACZ2B,MAAO,UACPzB,QAAS,EACT,UAAW,CACTF,WAAY,UACZ2B,MAAO,YAGXmhB,YAAa,CACXthB,KAAM,+KACNE,cAAe,qCACfqhB,eAAgB,YAChBphB,MAAO,UACPpB,OAAQ,UACRL,QAAS,EACT,UAAW,CACTF,WAAY,UACZ2B,MAAO,YAIXQ,OAAQ,CACNb,YAAa,OAEf0hB,QAAS,CACPlhB,cAAe,OACfT,WAAY,OACZW,gBAAiB,UACjBL,MAAO,UACP,UAAW,CACTG,cAAe,OACfT,WAAY,OACZW,gBAAiB,UACjBL,MAAO,YAGXshB,YAAa,CACX3hB,YAAa,OAEf4hB,SAAU,CACR1hB,KAAM,+KACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,EACTijB,cAAc,QAEhBC,SAAS,CACPtjB,QAAQ,uB,qBCrKG,SAASujB,GAAOhU,GAC7B,IAAMzE,EAAUjL,KAOhB,OACE,cAAC,KAAD,CACE0E,GAAG,YACHf,MAAO+L,EAAMiU,SACbC,gBAAiB,SAACC,GAAD,OAAenU,EAAMoU,cAAcD,IACpDrV,SAAU,SAACqV,GAAD,OAVO,SAACA,GACfA,GACHnU,EAAMqU,eAQmB/X,CAAa6X,IACtCG,eAAgB,kBAAMtU,EAAMqU,gBAC5BzV,YAAaoB,EAAMpB,YACnB1B,UAAW3B,EAAQwX,YACnBR,WACE,mCACE,qBAAK5U,IAAI,oBAAoBC,IAAI,OAGrC0B,SAAUU,EAAMV,W,cCSPiV,OA9Bf,YAAoC,IAAhBphB,EAAe,EAAfA,OAAQ2I,EAAO,EAAPA,IAC1B,EAAwB+S,IAAMjT,UAAS,GAAvC,mBAAOkL,EAAP,KAAaC,EAAb,KAKA,SAASI,EAAYC,EAAO5B,GACX,cAAXA,GAGJuB,GAAQ,GAGV,OAXAS,qBAAU,WACRT,GAAQ,KACP,CAAC5T,IAUF,cAACqhB,GAAA,EAAD,CACExf,GAAG,WACHyf,aAAc,CACZC,SAAU,MACVC,WAAY,SAEd7N,KAAMA,EACN8N,iBAAkB,IAClBC,QAAS1N,EARX,SAUE,cAACjJ,GAAA,EAAD,CAAO2W,QAAS1N,EAAahJ,SAAUhL,EAAvC,SACG2I,OC2DMgZ,OAjFf,WACE,MAAwClZ,mBAAS,IAAjD,mBAAOyV,EAAP,KAAqB0D,EAArB,KACA,EAAgCnZ,mBAAS,IAAzC,mBAAOqY,EAAP,KAAiBe,EAAjB,KACA,EAAkCpZ,mBAAS,CACzCC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,MAF/B,mBAAOmZ,EAAP,KAAkBC,EAAlB,KAKMC,EAAmB,SAACC,GACxBF,EAAa,2BACRD,GADO,IAEVpZ,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAE/B,IAAMuZ,EAAe5T,KAA4BlL,QAAO,SAAC0V,GACvD,OACEA,EAAIqJ,YAAYC,cAAczQ,SAASsQ,EAAYG,gBACnDtJ,EAAIiG,cAAcqD,cAAczQ,SAASsQ,EAAYG,kBAGpDF,EAAarT,QAChBkT,EAAa,2BACRD,GADO,IAEVpZ,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,4BAGhCiZ,EAAgBM,IAWlB,OAJA7N,qBAAU,WACRuN,EAAgBtT,QACf,IAGD,eAAC,IAAM+T,SAAP,WACE,cAACC,GAAA,EAAD,CAAQlJ,MAAM,iBACd,cAACpP,EAAA,EAAD,CAAME,QAAQ,SAASD,WAAS,EAAhC,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAIC,GAAI,GAAIiY,GAAI,GAA/B,SACE,eAACvY,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAACY,QAAS,EAAjD,UACE,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAGF,GAAI,GAA7B,SACE,cAACuL,GAAA,EAAD,CAAKC,GAAI,EAAGoI,GAAI,EAAGwE,GAAI,EAAvB,SACE,cAAC9X,EAAA,EAAD,CAAYsI,OAAO,mBAAmB9H,QAAQ,KAA9C,8BAKJ,cAAClB,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAGF,GAAI,GAA7B,SACE,cAACuL,GAAA,EAAD,CAAKC,GAAI,EAAGoI,GAAI,EAAGwE,GAAI,EAAvB,SACE,cAAC3B,GAAD,CACE4B,OAAO,uBACP3B,SAAUA,EACVG,cAAee,EACfd,aA5BQ,WACtBW,EAAY,IACZG,EAAiBlB,IA2BHrV,YAAa,mDAOzB,uBACA,cAACzB,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAGX,QAAQ,SAApC,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIiY,GAAI,GAAvC,SACE,cAACtE,GAAD,CAAkBC,aAAcA,QAGnC4D,EAAUthB,MAAMR,QACf,cAAC,GAAD,CAAU2I,IAAKmZ,EAAUthB,MAAMmI,IAAK3I,OAAQ,SAE7C8hB,EAAUpZ,QAAQ1I,QACjB,cAAC,GAAD,CAAU2I,IAAKmZ,EAAUpZ,QAAQC,IAAK3I,OAAQ,gBCpEvC0iB,GATG,WAChB,OACE,qCACE,cAACxlB,EAAA,EAAD,IACA,cAAC2Z,GAAD,IACA,cAAC,GAAD,Q,kDCRO1Z,GAAYC,aAAW,SAACkb,GAAD,MAAY,CAC9Cta,KAAM,CACJC,QAAS,OACTX,QAAS,QAEXqlB,mBAAoB,CAClBxjB,MAAO,WAETyjB,aAAc,CACZzjB,MAAO,WAET0jB,YAAa,CACX1jB,MAAO,WAET2jB,aAAc,CACZ3jB,MAAO,WAET4jB,SAAU,CACR5jB,MAAO,WAET6jB,SAAU,CACR7jB,MAAO,WAET8jB,OAAO,gBACJ3K,EAAM4G,YAAYC,GAAG,MAAQ,CAC5B1gB,MA3Bc,IA4BdykB,WAAY,IAGhBC,aAAc,CACZ7V,SAAU,QAEZ8V,QAAS,CACPnN,SAAU,EACV3Y,QAASgb,EAAMzN,QAAQ,Q,gFCsFZwY,OArGf,YAA+B,IAAZD,EAAW,EAAXA,QACXhb,EAAUjL,KACVkL,EAAUC,cAChB,EAAwBoT,IAAMjT,UAAS,GAAvC,mBAAOkL,EAAP,KAAaC,EAAb,KAMMqP,EACJ,gCACE,qBAAKlZ,UAAW3B,EAAQkb,UACxB,eAACC,GAAA,EAAD,CAAM3G,gBAAgB,EAAtB,UACE,eAAC4G,GAAA,EAAD,CACE3hB,GAAG,eACHkK,QAAS,kBAAM1D,EAAQwB,KAAK,cAC5B4Z,SAAwC,cAA9Bpb,EAAQ6E,SAASH,SAC3B3N,QAAM,EAJR,UAME,cAACskB,GAAA,EAAD,CAAc3Z,UAAW3B,EAAQ+a,aAAjC,SACE,cAACQ,GAAA,EAAD,CAAc5Z,UAAW3B,EAAQwa,iBAEnC,cAACgB,GAAA,EAAD,UACE,cAAClZ,EAAA,EAAD,CAAYQ,QAAQ,QAApB,2BAIJ,eAACsY,GAAA,EAAD,CAAU3hB,GAAG,eAAezC,QAAM,EAAC2M,QAtBrB,WAClB6H,GAASD,IAqBL,UACE,cAAC+P,GAAA,EAAD,CAAc3Z,UAAW3B,EAAQ+a,aAAjC,SACE,cAACU,GAAA,EAAD,CAAkB9Z,UAAW3B,EAAQ0a,iBAEvC,cAACc,GAAA,EAAD,UACE,cAAClZ,EAAA,EAAD,CAAYQ,QAAQ,QAApB,wBAEDyI,EAAO,cAACmQ,GAAA,EAAD,IAAiB,cAACC,GAAA,EAAD,OAG3B,cAACC,GAAA,EAAD,CAAUC,GAAItQ,EAAMuQ,QAAQ,OAAOC,eAAa,EAAhD,SACE,eAACZ,GAAA,EAAD,CAAM7W,UAAU,MAAMkQ,gBAAc,EAApC,UACE,eAAC4G,GAAA,EAAD,CACEpkB,QAAM,EACN2M,QAAS,kBAAM1D,EAAQwB,KAAK,qBAC5B4Z,SAAwC,qBAA9Bpb,EAAQ6E,SAASH,SAH7B,UAKE,cAAC2W,GAAA,EAAD,CAAc3Z,UAAW3B,EAAQgc,iBAAjC,SACE,cAACC,GAAA,EAAD,CAAqBta,UAAW3B,EAAQua,uBAE1C,cAACiB,GAAA,EAAD,UACE,cAAClZ,EAAA,EAAD,CAAYQ,QAAQ,QAApB,kCAIJ,eAACsY,GAAA,EAAD,CAAUpkB,QAAM,EAAC2M,QAAS,kBAAM1D,EAAQwB,KAAK,sBAA7C,UACE,cAAC6Z,GAAA,EAAD,CAAc3Z,UAAW3B,EAAQgc,iBAAjC,SACE,cAACE,GAAA,EAAD,CAAmBva,UAAW3B,EAAQ2a,aAExC,cAACa,GAAA,EAAD,UACE,cAAClZ,EAAA,EAAD,CAAYQ,QAAQ,QAApB,wCAMR,eAACsY,GAAA,EAAD,CACE3hB,GAAG,YACHzC,QAAM,EACN2M,QAAS,kBAAM1D,EAAQwB,KAAK,WAC5B4Z,SAAwC,WAA9Bpb,EAAQ6E,SAASH,SAJ7B,UAME,cAAC2W,GAAA,EAAD,CAAc3Z,UAAW3B,EAAQ+a,aAAjC,SACE,cAACoB,GAAA,EAAD,CAAgBxa,UAAW3B,EAAQ4a,aAErC,cAACY,GAAA,EAAD,UACE,cAAClZ,EAAA,EAAD,CAAYQ,QAAQ,QAApB,wBAIJ,eAACsY,GAAA,EAAD,CACE3hB,GAAG,eACHzC,QAAM,EACN2M,QAAS,kBAAM1D,EAAQwB,KAAK,cAC5B4Z,SAAwC,cAA9Bpb,EAAQ6E,SAASH,SAJ7B,UAME,cAAC2W,GAAA,EAAD,CAAc3Z,UAAW3B,EAAQ+a,aAAjC,SACE,cAACqB,GAAA,EAAD,CAAaza,UAAW3B,EAAQya,gBAElC,cAACe,GAAA,EAAD,UACE,cAAClZ,EAAA,EAAD,CAAYQ,QAAQ,QAApB,iCAMV,OACE,sBAAKnB,UAAW3B,EAAQpK,KAAxB,UACE,qBAAK+L,UAAW3B,EAAQ6a,OAAxB,SAAiCA,IACjC,sBAAMlZ,UAAW3B,EAAQgb,QAAzB,SAAmCA,QCvG1BV,GAVG,SAAC,GAAkB,IAAhBzlB,EAAe,EAAfA,SACnB,OACE,qCACE,cAACC,EAAA,EAAD,IACA,cAAC2Z,GAAD,IACA,cAAC,GAAD,CAASuM,QAASnmB,Q,wCCVXkM,GAAe,SAAC,GAAD,IAC1Bsb,EAD0B,EAC1BA,SACAzX,EAF0B,EAE1BA,MACAgD,EAH0B,EAG1BA,cACA0U,EAJ0B,EAI1BA,iBACA/gB,EAL0B,EAK1BA,KAL0B,OAMtB,SAACyF,GACiB,oBAAlBA,EAAEC,OAAO1F,KACX8gB,EAAS,2BACJzX,GADG,IAEN2X,iBAAiB,EACjB9T,SAAS,2BAAM7D,EAAM6D,UAAb,IAAuB+T,gBAAiBxb,EAAEC,OAAOvI,WAEhC,qBAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN6D,SAAS,2BAAM7D,EAAM6D,UAAb,IAAuBgU,iBAAkBzb,EAAEC,OAAOvI,WAEjC,0BAAlBsI,EAAEC,OAAO1F,KAClB+gB,EAAiB,2BACZ1U,GADW,mBAEbhD,EAAM6D,SAASgU,iBAAmBzb,EAAEC,OAAOvI,SAEnB,oBAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN6D,SAAS,2BAAM7D,EAAM6D,UAAb,IAAuBiU,gBAAiB1b,EAAEC,OAAOvI,WAEhC,gCAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN6D,SAAS,2BACJ7D,EAAM6D,UADH,IAENkU,4BAA6B3b,EAAEC,OAAOvI,WAGf,2BAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN6D,SAAS,2BACJ7D,EAAM6D,UADH,IAENmU,wBAAyB5b,EAAEC,OAAO4b,aAGpB,iCAATthB,IACNyF,EAAEC,OAAO4b,QACVR,EAAS,2BACJzX,GADG,IAEN6D,SAAS,2BACN7D,EAAM6D,UADD,IACW+T,gBAAiB,IACpCM,6BAA8B9b,EAAEC,OAAO4b,aAIzCR,EAAS,2BACJzX,GADG,IAEN6D,SAAS,2BACN7D,EAAM6D,UADD,IAERqU,6BAA8B9b,EAAEC,OAAO4b,gBC6RhCE,GApUiB,SAAC,GAO1B,IANLC,EAMI,EANJA,WACAC,EAKI,EALJA,aACArY,EAII,EAJJA,MACAyX,EAGI,EAHJA,SACAzU,EAEI,EAFJA,cACA0U,EACI,EADJA,iBAEMtc,EAAUjL,KAGhB,EAUI6P,EAAM6D,SATR+T,EADF,EACEA,gBACAC,EAFF,EAEEA,iBACAC,EAHF,EAGEA,gBACAQ,EAJF,EAIEA,sBACAN,EALF,EAKEA,wBACAO,EANF,EAMEA,uBACAC,EAPF,EAOEA,sBACAN,EARF,EAQEA,6BACAH,EATF,EASEA,4BAGIU,EAAqBpU,GAAgB2T,GACrCU,EAA+BrU,GAAgB6T,GAErD,OACE,mCACE,eAACS,GAAA,EAAD,CAAM5b,UAAW3B,EAAQ4X,kBAAzB,UACE,eAAChW,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAOsY,OAAO,aAAa1Y,UAAW3B,EAAQyX,WAA9C,0BAIF,cAAC7V,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAM,+JAApB,SACE,qBAAK5O,IAAI,yBAAyBC,IAAI,yBAK9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,YACH4J,YAAY,UACZ9H,KAAK,kBACLwI,SAAUuZ,EACVllB,MAAOglB,EACPta,QAAQ,WACRoB,KAAK,QACLnB,WAAS,EACTrK,MAAO8jB,EACPjZ,SAAUxC,GAAa,CACrBsb,WACAzX,QACAgD,gBACA0U,yBAIN,cAAC1a,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC0b,GAAA,EAAD,CACEhkB,GAAG,uBACHojB,QAASS,EACT/Z,SAAUxC,GAAa,CACrBsb,WACAzX,QACArJ,KAAM,qCAIZ,cAACqG,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAACtT,EAAA,EAAD,CAAYsI,OAAO,mBAAmB9H,QAAQ,QAA9C,+CAOR,uBACA,cAAClB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,SACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAf,UACE,uBAAOoY,OAAO,WAAW1Y,UAAW3B,EAAQyX,WAA5C,sBAGA,cAAClK,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAACE,GAAA,EAAD,CACE/b,UAAW3B,EAAQ2d,YACnBzZ,KAAK,QACLb,YAAY,WACZN,WAAS,EAJX,SAME,cAAC6a,GAAA,EAAD,CACEnkB,GAAG,mBACHqJ,QAAQ,WACR+a,UAAW,CACT3E,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd0E,mBAAoB,MAEtBviB,KAAK,mBACL7C,MAAO+jB,EACPlZ,SAAUxC,GAAa,CACrBsb,WACAzX,QACAgD,gBACA0U,qBAEFyB,WAAY,CAAE,aAAc,iBAlB9B,SAxFO,CAAC,UAAW,QAAS,UAAW,YAAa,UA4GpCrY,KAAI,SAACmC,EAAUzB,GAC3B,OACE,cAACuE,GAAA,EAAD,CAAUjS,MAAOmP,EAAjB,SACGA,GAD6BzB,iBAU9C,uBACA,eAACxE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAxB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAOsY,OAAO,WAAW1Y,UAAW3B,EAAQyX,WAA5C,yBAIF,cAAC7V,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAM,mEAApB,SACE,qBAAK5O,IAAI,yBAAyBC,IAAI,2BAMhD,cAACT,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CACEsI,OAAO,oBACPrI,MAAM,QACNZ,UAAW3B,EAAQkY,YACnBvU,QAAS,kBAAMsZ,EAAaR,IAJ9B,oCAUJ,cAAClP,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,kBACH4J,YAAY,8BACZ1B,UAAW3B,EAAQge,cACnBC,WAAS,EACT7lB,MAAO8kB,EACPgB,QAAS,EACT3iB,KAAK,wBACL7C,MAAOiP,GAA4BC,EAAe6U,GAClDlZ,SAAUxC,GAAa,CACrBsb,WACAzX,QACAgD,gBACA0U,qBAEFvZ,WAAS,EACTD,QAAQ,eAGZ,uBACA,uBACA,eAAClB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAaW,QAAS,EAA9C,UACE,eAACb,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAtB,UACE,uBAAOmY,OAAO,cAAc1Y,UAAW3B,EAAQyX,WAA/C,wCAGA,cAAClK,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAACE,GAAA,EAAD,CAAa/b,UAAW3B,EAAQ2d,YAAazZ,KAAK,QAAQnB,WAAS,EAAnE,SACE,eAAC6a,GAAA,EAAD,CACEnkB,GAAG,oBACHqJ,QAAQ,WACR+a,UAAW,CACT3E,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd0E,mBAAoB,MAEtBviB,KAAK,kBACLgI,SAAUxC,GAAa,CACrBsb,WACAzX,QACAgD,gBACA0U,qBAEF5jB,MAAOgkB,EACPqB,WAAY,CAAE,aAAc,iBAlB9B,UAoBE,cAACpT,GAAA,EAAD,CAAUjS,MAAM,YAAhB,uBACA,cAACiS,GAAA,EAAD,CAAUjS,MAAM,gBAAhB,qCAKR,cAACkJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAtB,SACuB,cAApBwa,GACC,qCACE,eAAC9a,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAOsY,OAAO,YAAY1Y,UAAW3B,EAAQqR,MAA7C,uCAIF,cAACzP,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAM,gCAApB,SACE,qBAAK5O,IAAI,yBAAyBC,IAAI,yBAM9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC/S,EAAA,EAAD,CACEpJ,GAAG,WACHyK,KAAK,QACLb,YAAY,MACZ0a,WAAY,CAAEI,UAAW,GACzB/lB,MAAO+kB,EACPxb,UAAW3B,EAAQge,cACnBtlB,MAAOikB,EACPpZ,SAAUxC,GAAa,CACrBsb,WACAzX,QACAgD,gBACA0U,qBAEFvZ,WAAS,EACTxH,KAAK,8BACLuH,QAAQ,uBAOpB,uBACA,eAAClB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC0b,GAAA,EAAD,CACEhkB,GAAG,kBACH8B,KAAK,yBACLgI,SAAUxC,GAAa,CACrBsb,WACAzX,QACAgD,gBACA0U,qBAEFO,QAASQ,MAGb,cAACzb,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAACtT,EAAA,EAAD,CAAYsI,OAAO,eAAe9H,QAAQ,QAA1C,wCAOR,cAAClB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,UACE,eAACzJ,EAAA,EAAD,CAAQnC,UAAW3B,EAAQoY,QAA3B,UACE,qBAAKhW,IAAI,qBAAqBT,UAAW3B,EAAQqY,YAAahW,IAAI,YAAa,IAC9E,UAAYma,YAMrB,uBACA,eAAC5a,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBW,QAAS,EAAjD,UACE,cAACb,EAAA,EAAD,CAAMG,MAAI,IACV,eAACH,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAAC+B,EAAA,EAAD,CAAQrK,GAAG,SAASkI,UAAW3B,EAAQ6X,aAAc/U,QAAQ,YAA7D,oBAGA,eAACgB,EAAA,EAAD,CACErK,GAAG,OACHsK,SAAUa,EAAMwZ,YAChBzc,UAAW3B,EAAQ8X,WACnBnU,QAASqZ,EACTla,QAAQ,YALV,UAOG8B,EAAMwZ,YACL,cAACna,EAAA,EAAD,CACEC,KAAM,GACNma,UAAW,EACXtnB,MAAM,UACN4K,UAAW3B,EAAQzI,SAGrB,6BAfJ,sBC3TCxC,GAAYC,aAAW,SAACkb,GAAD,MAAY,CAC9CoO,WAAY,CACV1nB,KACE,8FACFE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,EACTG,SAAU,QAEZ4b,MAAO,CACLta,MAAO,WAETsO,SAAU,CACRnQ,QAAS,QAEXqpB,kBAAmB,CACjBloB,MAAO,QACPlB,OAAQ,MACRiB,OAAQ,OACR0X,UAAW,oBACX1W,gBAAiB,QACjB6X,OAAQ,oBACR5Z,aAAc,MACdC,QAAS,EACTsB,KAAK,8HACLE,cAAe,qCACfC,MAAO,UACPtB,SAAU,QAEZ+oB,gBAAiB,CACfppB,WAAY,sCACZC,aAAc,MACdC,QAAS,EACTyB,MAAO,QACPV,MAAO,QACPlB,OAAQ,MACRiB,OAAQ,OACRX,SAAU,OACV,UAAW,CACTL,WAAY,sCACZ2B,MAAO,UAIX0nB,SAAU,CACR7nB,KAAK,+KACLE,cAAe,qCACfqhB,eAAgB,YAChBphB,MAAO,UACPpB,OAAQ,UACRL,QAAS,EACT,UAAW,CACTF,WAAY,UACZ2B,MAAO,YAGX2nB,YAAa,CACXhoB,YAAa,OAEfioB,WAAY,CACVznB,cAAe,OACfT,WAAY,OACZW,gBAAiB,UACjBL,MAAO,UACP,UAAW,CACTG,cAAe,OACfT,WAAY,OACZW,gBAAiB,UACjBL,MAAO,YAGX6nB,iBAAkB,CAChBloB,YAAa,OAEf8hB,SAAS,CACPtjB,QAAQ,uBC7EC2pB,GAAW5O,aAAW,CACjCra,KAAM,CACJmB,MAAO,UACPX,OAAQ,GAEV0oB,MAAO,CACL1oB,OAAQ,GACRC,MAAO,GACPe,gBAAiB,UACjB6X,OAAQ,yBACRgJ,WAAY,EACZxhB,YAAa,EACb,6BAA8B,CAC5BqX,UAAW,YAGf6G,OAAQ,GACRoK,WAAY,CACV5oB,KAAM,oBAER6oB,MAAO,CACL5oB,OAAQ,EACRf,aAAc,GAEhB4pB,KAAM,CACJ7oB,OAAQ,EACRf,aAAc,KAILN,GAAYC,aAAW,SAACkb,GAAD,MAAY,CAC9Cta,KAAM,CACJS,MAAO,QAETlB,OAAQ,CACNiB,OAAQ8Z,EAAMzN,QAAQ,QChCpByc,GAAeL,G,OAASM,GAEf,SAASC,GAAT,GAAqD,IAA1B1mB,EAAyB,EAAzBA,MAAO6K,EAAkB,EAAlBA,SAAUhI,EAAQ,EAARA,KACnDyE,EAAUjL,KAEVsqB,EAAQ,CACZ,CACE3mB,MAAO,EACP2Y,MAAgB,WAAT9V,EAAoB,OAAS,GAEtC,CACE7C,MAAO,IACP2Y,MAAgB,WAAT9V,EAAoB,UAAY,KAEzC,CACE7C,MAAO,GACP2Y,MAAgB,WAAT9V,EAAoB,OAAS,IAEtC,CACE7C,MAAO,IACP2Y,MAAgB,WAAT9V,EAAoB,SAAW,KAExC,CACE7C,MAAO,EACP2Y,MAAgB,WAAT9V,EAAoB,MAAQ,IAQvC,OACE,qBAAKoG,UAAW3B,EAAQpK,KAAxB,SACE,cAACspB,GAAD,CACExmB,MAAOA,EACP4mB,IAAK,EACLC,iBATN,SAAmB3W,GACjB,MAAM,GAAN,OAAUA,IASN,kBAAgB,kBAChB4W,KAAM,IACNH,MAAOA,EACPI,IAAK,EACLlc,SAAUA,MC9CX,IAAMxC,GACX,SAAC,GAAD,IAAGsb,EAAH,EAAGA,SAAUzX,EAAb,EAAaA,MAAOrJ,EAApB,EAAoBA,KAApB,OACA,SAACyF,EAAGtI,GACoB,8BAAlBsI,EAAEC,OAAO1F,KACX8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBC,0BAA2B3e,EAAEC,OAAOvI,WAGb,8BAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN2X,iBAAiB,EACjBmD,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBE,0BAA2B5e,EAAEC,OAAOvI,WAGb,sCAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBG,kCAAmC7e,EAAEC,OAAO4b,aAGrB,8BAAlB7b,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBI,0BAA2B9e,EAAEC,OAAOvI,WAGtB,iCAAT6C,EACT8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBK,mCAAoCrnB,OAGtB,kCAAT6C,EACT8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBM,oCAAqCtnB,OAGvB,iCAAT6C,EACT8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBO,mCAAoCvnB,OAGb,yBAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBQ,qBAAsBlf,EAAEC,OAAOvI,WAGR,yBAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBS,qBAAsBnf,EAAEC,OAAOvI,WAGR,oBAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBU,gBAAiBpf,EAAEC,OAAOvI,WAGH,0CAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBW,sCAAuCrf,EAAEC,OAAOvI,WAGlC,kCAAT6C,IACLyF,EAAEC,OAAO4b,QACXR,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBE,0BAA2B,IAC3BU,8BAA+Btf,EAAEC,OAAO4b,aAI5CR,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBY,8BAA+Btf,EAAEC,OAAO4b,gBC3GvC0D,GACX,SAAC,GAAD,IAAGlE,EAAH,EAAGA,SAAUzX,EAAb,EAAaA,MAAOrJ,EAApB,EAAoBA,KAApB,OACA,SAACyF,EAAGtI,GACoB,iBAAlBsI,EAAEC,OAAO1F,KACX8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBc,aAAcxf,EAAEC,OAAOvI,WAGA,mBAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBe,eAAgBzf,EAAEC,OAAOvI,WAGX,kCAAT6C,EACT8gB,EAAS,2BACJzX,GADG,IAEN2X,iBAAiB,EACjBmD,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBgB,iCAAkChoB,OAGpB,wCAAT6C,EACT8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBiB,uCAAwCjoB,OAG1B,2CAAT6C,EACT8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBkB,0CAA2CloB,OAG7B,yCAAT6C,EACT8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBmB,wCAAyCnoB,OAG3B,oCAAT6C,GACT8gB,EAAS,2BACJzX,GADG,IAEN8a,mBAAmB,2BACd9a,EAAM8a,oBADO,IAEhBoB,mCAAoCpoB,SCwiB/BqoB,GA5kBkB,SAAC,GAAqC,IAAnCnc,EAAkC,EAAlCA,MAAOyX,EAA2B,EAA3BA,SAAUW,EAAiB,EAAjBA,WACnD,EAsBIpY,EAAM8a,mBArBRC,EADF,EACEA,0BACAI,EAFF,EAEEA,mCACAC,EAHF,EAGEA,oCACAC,EAJF,EAIEA,mCACAC,EALF,EAKEA,qBACAC,EANF,EAMEA,qBACAC,EAPF,EAOEA,gBACAY,EARF,EAQEA,uBACAC,EATF,EASEA,sBACArB,EAVF,EAUEA,0BACAC,EAXF,EAWEA,kCACAC,EAZF,EAYEA,0BACAQ,EAbF,EAaEA,8BACAD,EAdF,EAcEA,sCACAK,EAfF,EAeEA,iCACAC,EAhBF,EAgBEA,uCACAC,EAjBF,EAiBEA,0CACAC,EAlBF,EAkBEA,wCACAC,EAnBF,EAmBEA,mCACAN,EApBF,EAoBEA,aACAC,EArBF,EAqBEA,eAGIzgB,EAAUjL,KACVsoB,EAAqBpU,GAAgB4W,GACrCvC,EAA+BrU,GAAgBqX,GAE/CY,EACJ,qCACE,iDACA,mBACEpW,MAAO,CAAE7T,WAAY,IAAKF,MAAO,QAASoqB,mBAAoB,QAC9DhW,KAAK,4BAFP,uBAMA,gEACA,mBACEL,MAAO,CAAE7T,WAAY,IAAKF,MAAO,QAASoqB,mBAAoB,QAC9DhW,KAAK,+BAFP,gCAMA,sEAMJ,OACE,mCACE,eAACoS,GAAA,EAAD,CAAM5b,UAAW3B,EAAQqF,SAAzB,UACE,eAACkI,GAAA,EAAD,WACE,eAAC3L,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAOsY,OAAO,aAAa1Y,UAAW3B,EAAQqR,MAA9C,0BAIF,cAACzP,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAM,+JAApB,SACE,qBAAK5O,IAAI,yBAAyBC,IAAI,yBAM9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,YACHqJ,QAAQ,WACRO,YAAY,2DACZa,KAAK,QACLnB,WAAS,EACTgB,SAAUuZ,EACVllB,MAAO6oB,EACP1lB,KAAK,4BACL7C,MAAOknB,EACPrc,SAAUxC,GAAa,CAAEsb,WAAUzX,iBAIzC,cAAChD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC0b,GAAA,EAAD,CACEhkB,GAAG,WACHojB,QAASS,EACT/Z,SAAUxC,GAAa,CACrBsb,WACAzX,QACArJ,KAAM,sCAIZ,cAACqG,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAKqI,GAAI,EAAGpI,GAAI,EAAhB,SACE,cAAClL,EAAA,EAAD,CAAY+X,OAAO,mBAAmBvX,QAAQ,QAA9C,+CAOR,uBACA,cAAClB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,SACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAf,UACE,uBAAOoY,OAAO,kBAAkB1Y,UAAW3B,EAAQqR,MAAnD,6DAGA,cAAC9D,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAACE,GAAA,EAAD,CAAaxZ,KAAK,QAAQnB,WAAS,EAAnC,SACE,eAAC6a,GAAA,EAAD,CACEnkB,GAAG,aACHqJ,QAAQ,WACRvH,KAAK,4BACL7C,MAAOinB,EACPpc,SAAUxC,GAAa,CAAEsb,WAAUzX,UACnCiZ,UAAW,CACT3E,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd0E,mBAAoB,MAXxB,UAcE,cAACnT,GAAA,EAAD,CAAUjS,MAAM,SAAhB,uBACA,cAACiS,GAAA,EAAD,CAAUjS,MAAM,YAAhB,mCAMV,uBAC+B,cAA9BinB,GACC,qCACE,eAACpS,GAAA,EAAD,CAAKqI,GAAI,EAAT,UACE,eAAChU,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAO6I,OAAO,cAAcjJ,UAAW3B,EAAQqR,MAA/C,sCAIF,cAACzP,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAM,iFAApB,SACE,qBAAK5O,IAAI,yBAAyBC,IAAI,yBAK9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,kBACHqJ,QAAQ,WACRoB,KAAK,QACLb,YAAY,yBACZN,WAAS,EACTxH,KAAK,uBACL7C,MAAOwnB,EACP3c,SAAUxC,GAAa,CAAEsb,WAAUzX,iBAIzC,uBACA,eAAC2I,GAAA,EAAD,CAAKqI,GAAI,EAAT,UACE,eAAChU,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAOsY,OAAO,kBAAkB1Y,UAAW3B,EAAQqR,MAAnD,sCAIF,cAACzP,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAM,iFAApB,SACE,qBAAK5O,IAAI,yBAAyBC,IAAI,yBAK9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,kBACHqJ,QAAQ,WACRoB,KAAK,QACLnB,WAAS,EACTxH,KAAK,uBACL8H,YAAY,yBACZ3K,MAAOynB,EACP5c,SAAUxC,GAAa,CAAEsb,WAAUzX,iBAIzC,uBACA,eAAC2I,GAAA,EAAD,CAAKqI,GAAI,EAAT,UACE,eAAChU,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAO6I,OAAO,aAAajJ,UAAW3B,EAAQqR,MAA9C,iCAIF,cAACzP,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAM,iFAApB,SACE,qBAAK5O,IAAI,yBAAyBC,IAAI,yBAK9C,eAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,UACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,aACHqJ,QAAQ,WACRoB,KAAK,QACLnB,WAAS,EACTxH,KAAK,kBACL8H,YAAY,oBACZ3K,MAAO0nB,EACP7c,SAAUxC,GAAa,CAAEsb,WAAUzX,YAErC,cAACtC,EAAA,EAAD,CAAYsI,OAAO,eAAerI,MAAM,QAAQZ,UAAW3B,EAAQye,SAAnE,oCAKJ,uBACA,eAAC7c,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBW,QAAS,EAAjD,UACE,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,GAAIE,GAAI,EAAGiY,GAAI,EAArC,SACE,eAAC5M,GAAA,EAAD,WACE,uBAAO3C,OAAO,mBAAmBjJ,UAAW3B,EAAQqR,MAApD,2DAGA,cAAC9D,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC,GAAD,CACEnc,GAAG,mBACH8B,KAAMokB,EACNjnB,MAAOqnB,EACPxc,SAAUxC,GAAa,CACrBsb,WACAzX,QACArJ,KAAM,0CAMhB,cAACqG,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGiY,GAAI,EAApC,SACE,eAAC5M,GAAA,EAAD,WACE,uBAAO8M,OAAO,cAAc1Y,UAAW3B,EAAQqR,MAA/C,yDAGA,cAAC9D,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC,GAAD,CACEnc,GAAG,cACH8B,KAAMokB,EACNjnB,MAAOsnB,EACPzc,SAAUxC,GAAa,CACrBsb,WACAzX,QACArJ,KAAM,2CAMhB,cAACqG,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGiY,GAAI,EAApC,SACE,eAAC5M,GAAA,EAAD,WACE,uBAAO3C,OAAO,aAAajJ,UAAW3B,EAAQqR,MAA9C,wDAGA,cAAC9D,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC,GAAD,CACEnc,GAAG,aACH8B,KAAMokB,EACNjnB,MAAOunB,EACP1c,SAAUxC,GAAa,CACrBsb,WACAzX,QACArJ,KAAM,gDASS,WAA9BokB,GACC,qCACE,eAACpS,GAAA,EAAD,CAAKqI,GAAI,EAAT,UACE,eAAChU,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAO6I,OAAO,eAAejJ,UAAW3B,EAAQqR,MAAhD,iCAIF,cAACzP,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAOkQ,EAAaE,aAAW,EAA7C,SACE,qBAAKhf,IAAI,yBAAyBC,IAAI,yBAK9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,eACHqJ,QAAQ,WACRoB,KAAK,QACLnB,WAAS,EACTxH,KAAK,eACL7C,MAAO8nB,EACPnd,YAAY,oBACZE,SAAUgd,GAAmB,CAAElE,WAAUzX,iBAI/C,uBACA,cAAChD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,SACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAf,UACE,uBAAO2I,OAAO,OAAOjJ,UAAW3B,EAAQyX,WAAxC,sBAGA,cAAClK,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAACE,GAAA,EAAD,CACE/b,UAAW3B,EAAQ2d,YACnBzZ,KAAK,QACLb,YAAY,WACZN,WAAS,EAJX,SAME,cAAC6a,GAAA,EAAD,CACEnkB,GAAG,OACHqJ,QAAQ,WACR+a,UAAW,CACT3E,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd0E,mBAAoB,MAEtBplB,MAAO+nB,EACPllB,KAAK,iBACLwiB,WAAY,CAAE,aAAc,iBAC5Bxa,SAAUgd,GAAmB,CAAElE,WAAUzX,UAb3C,SA5RG,CAAC,UAAW,UAAW,YAAa,UA2SvBc,KAAI,SAACmC,EAAUzB,GAC3B,OACE,cAACuE,GAAA,EAAD,CAAUjS,MAAOmP,EAAjB,SACGA,GAD6BzB,iBAU9C,uBACA,eAACxE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBW,QAAS,EAAjD,UACE,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,GAAIE,GAAI,EAAGiY,GAAI,EAArC,SACE,eAAC5M,GAAA,EAAD,CAAKC,GAAI,EAAT,UACE,uBAAO5C,OAAO,eAAejJ,UAAW3B,EAAQqR,MAAhD,oDAGA,cAAC9D,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC,GAAD,CACEnc,GAAG,eACHf,MAAOgoB,EACPnlB,KAAMokB,EACNpc,SAAUgd,GAAmB,CAC3BlE,WACAzX,QACArJ,KAAM,2CAMhB,cAACqG,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGiY,GAAI,EAApC,SACE,eAAC5M,GAAA,EAAD,CAAKC,GAAI,EAAT,UACE,uBAAO5C,OAAO,gBAAgBjJ,UAAW3B,EAAQqR,MAAjD,+DAGA,cAAC9D,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC,GAAD,CACEnc,GAAG,gBACHf,MAAOioB,EACPplB,KAAMokB,EACNpc,SAAUgd,GAAmB,CAC3BlE,WACAzX,QACArJ,KAAM,iDAMhB,cAACqG,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,GAAIE,GAAI,EAAGiY,GAAI,EAArC,SACE,eAAC5M,GAAA,EAAD,CAAKC,GAAI,EAAT,UACE,uBAAO5C,OAAO,gBAAgBjJ,UAAW3B,EAAQqR,MAAjD,gDAGA,cAAC9D,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC,GAAD,CACEnc,GAAG,gBACHf,MAAOkoB,EACPrlB,KAAMokB,EACNpc,SAAUgd,GAAmB,CAC3BlE,WACAzX,QACArJ,KAAM,oDAMhB,cAACqG,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,EAAGE,GAAI,EAAGiY,GAAI,EAApC,SACE,eAAC5M,GAAA,EAAD,CAAKC,GAAI,EAAT,UACE,uBAAO5C,OAAO,cAAcjJ,UAAW3B,EAAQqR,MAA/C,8CAGA,cAAC9D,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC,GAAD,CACEnc,GAAG,cACHf,MAAOmoB,EACPtlB,KAAMokB,EACNpc,SAAUgd,GAAmB,CAC3BlE,WACAzX,QACArJ,KAAM,kDAMhB,cAACqG,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,GAAIE,GAAI,EAAGiY,GAAI,EAArC,SACE,eAAC5M,GAAA,EAAD,CAAKC,GAAI,EAAT,UACE,uBAAO5C,OAAO,iBAAiBjJ,UAAW3B,EAAQqR,MAAlD,wCAGA,cAAC9D,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC,GAAD,CACEnc,GAAG,iBACHf,MAAOooB,EACPvlB,KAAMokB,EACNpc,SAAUgd,GAAmB,CAC3BlE,WACAzX,QACArJ,KAAM,mDAUtB,eAACqG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAaW,QAAS,EAA9C,UACE,eAACb,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAtB,UACE,uBAAO0I,OAAO,cAAcjJ,UAAW3B,EAAQqR,MAA/C,wCAGA,cAAC9D,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAACE,GAAA,EAAD,CAAaxZ,KAAK,QAAQnB,WAAS,EAAnC,SACE,eAAC6a,GAAA,EAAD,CACEnkB,GAAG,cACHqJ,QAAQ,WACRpK,MAAOonB,EACPvkB,KAAK,4BACLgI,SAAUxC,GAAa,CAAEsb,WAAUzX,UACnCiZ,UAAW,CACT3E,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd0E,mBAAoB,MAEtBC,WAAY,CAAE,aAAc,iBAb9B,UAeE,cAACpT,GAAA,EAAD,CAAUjS,MAAM,eAAhB,0BACA,cAACiS,GAAA,EAAD,CAAUjS,MAAM,gBAAhB,qCAKR,cAACkJ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAtB,SACiC,iBAA9B4d,GACC,qCACE,eAACle,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAO6I,OAAO,UAAUjJ,UAAW3B,EAAQqR,MAA3C,uCAIF,cAACzP,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAM,gCAApB,SACE,qBAAK5O,IAAI,yBAAyBC,IAAI,yBAK9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC/S,EAAA,EAAD,CACEpJ,GAAG,UACHyK,KAAK,QACLb,YAAY,MACZjL,MAAO4oB,EACPjD,WAAY,CAAEI,UAAW,GACzBxc,UAAW3B,EAAQge,cACnBtlB,MAAO2nB,EACP9kB,KAAK,wCACLgI,SAAUxC,GAAa,CAAEsb,WAAUzX,UACnC7B,WAAS,EACTD,QAAQ,uBAOpB,uBACA,eAAClB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC0b,GAAA,EAAD,CACEhkB,GAAG,UACH8B,KAAK,oCACLgI,SAAUxC,GAAa,CAAEsb,WAAUzX,UACnCiY,QAASQ,MAGb,cAACzb,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAKqI,GAAI,EAAGpI,GAAI,EAAhB,SACE,cAAClL,EAAA,EAAD,CAAYsI,OAAO,aAAa9H,QAAQ,QAAxC,wCAOR,cAAClB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,UACE,eAACzJ,EAAA,EAAD,CAAQnC,UAAW3B,EAAQ2e,WAA3B,UACE,qBAAKvc,IAAI,qBAAqBT,UAAW3B,EAAQ4e,iBAAkBvc,IAAI,YACtE,UAAYud,YAKrB,uBACA,eAAChe,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBW,QAAS,EAAjD,UACE,cAACb,EAAA,EAAD,CAAMG,MAAI,IACV,eAACH,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAAC+B,EAAA,EAAD,CAAQrK,GAAG,SAASkI,UAAW3B,EAAQue,kBAAmBzb,QAAQ,YAAlE,oBAGA,eAACgB,EAAA,EAAD,CACErK,GAAG,OACHsK,SAAUa,EAAMwZ,YAChBzc,UAAW3B,EAAQwe,gBACnB7a,QAASqZ,EACTla,QAAQ,YALV,UAOG8B,EAAMwZ,YACL,cAACna,EAAA,EAAD,CACEC,KAAM,GACNma,UAAW,EACXtnB,MAAM,UACN4K,UAAW3B,EAAQ0e,cAGrB,6BAfJ,sBCriBG2C,GA9BW,SAAC,GAOpB,IANLrE,EAMI,EANJA,WACAC,EAKI,EALJA,aACArY,EAII,EAJJA,MACAyX,EAGI,EAHJA,SACAzU,EAEI,EAFJA,cACA0U,EACI,EADJA,iBAEA,MAAgC,SAA5B1X,EAAM0c,kBAEN,cAAC,GAAD,CACEtE,WAAYA,EACZC,aAAcA,EACdrY,MAAOA,EACPyX,SAAUA,EACVzU,cAAeA,EACf0U,iBAAkBA,IAGgB,SAA7B1X,EAAM2c,mBACR,cAAC,GAAD,CACJ3c,MAAOA,EACPyX,SAAUA,EACVW,WAAYA,IAGR,8B,UC7BLwE,GAAevR,cAAW,SAACC,GAAD,MAAY,CAC1Cta,KAAM,CACJS,MAAO,GACPD,OAAQ,GACRlB,QAAS,EACTuB,WAAW,OACXtB,OAAQ+a,EAAMzN,QAAQ,IAExBgf,WAAY,CACVvsB,QAAS,EACT,YAAa,CACXwsB,UAAW,mBACX3qB,MAAOmZ,EAAME,QAAQC,OAAOC,MAC5B,aAAc,CACZlZ,gBAAiB,UACjB9B,QAAS,EACT2Z,OAAQ,SAGZ,wBAAyB,CACvBlY,MAAO,UACPkY,OAAQ,mBAGZ6P,MAAO,CACLzoB,MAAO,GACPD,OAAQ,IAEV4oB,MAAO,CACL3pB,aAAc,GACd4Z,OAAO,aAAD,OAAeiB,EAAME,QAAQuR,KAAK,MACxCvqB,gBAAiB8Y,EAAME,QAAQuR,KAAK,IACpCrsB,QAAS,EACTqX,WAAYuD,EAAMqH,YAAY9f,OAAO,CAAC,mBAAoB,YAE5DolB,QAAS,GACT+E,aAAc,O,eCjBDJ,GDoBAA,ICrCwB,YAA4B,IAAzBxhB,EAAwB,EAAxBA,QAAYyE,EAAY,mBAChE,OACE,cAACod,GAAA,EAAD,aACEC,sBAAuB9hB,EAAQ4hB,aAC/BG,eAAa,EACb/hB,QAAS,CACPpK,KAAMoK,EAAQpK,KACd6rB,WAAYzhB,EAAQyhB,WACpB3C,MAAO9e,EAAQ8e,MACfE,MAAOhf,EAAQgf,MACfnC,QAAS7c,EAAQ6c,UAEfpY,OC6CKud,GAxDI,SAAC,GAA4B,IAA1Bpd,EAAyB,EAAzBA,MAAO8F,EAAkB,EAAlBA,YACrB1K,EAAUjL,KAChB,OACE,eAAC6M,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAaW,QAAS,EAA9C,UACE,cAACb,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACwL,GAAA,EAAD,CACE5L,UAC8B,SAA5BiD,EAAM0c,kBAA+BthB,EAAQ2X,eAAiB3X,EAAQ0X,kBAExE/T,QAAS+G,EAAY,kBAJvB,UAME,cAAC9I,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACyL,GAAA,EAAD,CAAK0U,EAAG,EAAR,SACE,qBACE5f,IAAI,GACJD,IAC8B,SAA5BwC,EAAM0c,kBACF,gCACA,0CAKZ,cAAChf,EAAA,EAAD,CAAYQ,QAAQ,QAAQP,MAAM,SAAlC,4BAKJ,cAACX,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACwL,GAAA,EAAD,CACE5L,UAC+B,SAA7BiD,EAAM2c,mBAAgCvhB,EAAQ2X,eAAiB3X,EAAQ0X,kBAEzE/T,QAAS+G,EAAY,mBAJvB,UAME,cAAC9I,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACyL,GAAA,EAAD,CAAK0U,EAAG,EAAR,SACE,qBACE5f,IAAI,GACJD,IAC+B,SAA7BwC,EAAM2c,mBACF,0CACA,uCAKZ,cAACjf,EAAA,EAAD,CAAYsI,OAAO,gBAAgB9H,QAAQ,QAAQP,MAAM,SAAzD,0CCjDJ2f,GAAiB,mBAAmBlZ,QAAQ,MAAO,QAElD,SAASmZ,GACdC,GAEC,IACIzF,EAA6BD,EAAgBE,EAClDyF,EAAiBC,EAAeC,EAAgBC,EAAiBC,EAHjEnjB,EACA,uDADO,UAIP,GAAa,YAATA,EAEAqd,EAQEyF,EARFzF,4BACAD,EAOE0F,EAPF1F,gBACAE,EAMEwF,EANFxF,wBACAyF,EAKED,EALFC,iBACAC,EAIEF,EAJFE,eACAC,EAGEH,EAHFG,gBACAC,EAEEJ,EAFFI,iBACAC,EACEL,EADFK,uBAEE,CAAC,IAAD,EAUAL,EAAmB3Z,SARrBkU,EAFE,EAEFA,4BACAD,EAHE,EAGFA,gBACAE,EAJE,EAIFA,wBACAyF,EALE,EAKFA,iBACAC,EANE,EAMFA,eACAC,EAPE,EAOFA,gBACAC,EARE,EAQFA,iBACAC,EATE,EASFA,mBAKJ,IAAMC,EAA+C,cAApBhG,EAC3BiG,EAAmD,kBAApBjG,EAC/BkG,EAAkC3Z,GACtC2T,GAEEhV,EAAgB,GAElBA,EADEwa,EAAmBxa,cACLwa,EAAmBxa,cAEnB,CACdib,QAASR,EAAiB5c,MAAM,KAAKK,KAAK,KAC1Cgd,MAAOR,EAAe7c,MAAM,KAAKK,KAAK,KACtCid,UAAWN,EAAmBhd,MAAM,KAAKK,KAAK,KAC9Ckd,OAAQT,EAAgB9c,MAAM,KAAKK,KAAK,KACxCmd,QAAST,EAAiB/c,MAAM,KAAKK,KAAK,MAK9C,IAAIod,EAAa1a,GAAqBZ,GAAeoB,QACnD,iBACA,IAEEma,EAAQ,eAAQD,EAAR,SAA0Bla,QAAQ,MAAO,QAErD,OAAI0Z,EACEE,EACKQ,GAA4B,CACjCD,QACAxG,8BACArd,SAGG+jB,GAAkB,CAAEF,QAAOxG,8BAA6Brd,SAG7DqjB,EACEC,EACKU,GAA+B,CAAEH,QAAO7jB,SAE1CikB,GAAqB,CAAEJ,QAAO7jB,SAG1B,YAATA,EACI,mEAKF,gCAGR,SAAS+jB,GAAT,GAA0E,IAA7CF,EAA4C,EAA5CA,MAAOxG,EAAqC,EAArCA,4BAClC,MAAa,YAD0D,EAARrd,KAEvD,iEAAN,OAC8B6jB,EAD9B,wDAEmCjB,GAFnC,0SAU+CvF,EAA4B6G,OACrE,GAXN,uKAsBI,8EAAN,OACgCL,EADhC,wMAQ+CxG,EAA4B6G,OACrE,GATN,0IAmBF,SAASJ,GAAT,GAII,IAHFD,EAGC,EAHDA,MACAxG,EAEC,EAFDA,4BAGA,MAAa,YADZ,EADDrd,KAGQ,0GAAN,OAG4B6jB,EAH5B,sDAIiCjB,GAJjC,kTAYgEvF,EAA4B6G,OACxF,GAbJ,waA+BI,8EAAN,OACgCL,EADhC,sNAQ4DxG,EAA4B6G,OAClF,GATN,+KAoBF,SAASD,GAAT,GAAgD,IAAhBJ,EAAe,EAAfA,MAC9B,MAAa,YADgC,EAAR7jB,KAE7B,+DAAN,OAC4B6jB,EAD5B,sDAEiCjB,GAFjC,0OAYI,8EAAN,OACgCiB,EADhC,0OAeF,SAASG,GAAT,GAA0D,IAAhBH,EAAe,EAAfA,MACxC,MAAa,YAD0C,EAAR7jB,KAEvC,sGAAN,OAE4B6jB,EAF5B,sDAGiCjB,GAHjC,ihBAqBI,8EAAN,OACgCiB,EADhC,iTC/OK,IAAMM,GAA2B,SAACvrB,GACvC,GAAuC,WAAnCA,EAAKynB,0BAAwC,CAC/C,IAAM+D,EAAmBC,GAAoBzrB,EAAKuoB,gBAClD,MAAM,mBAAN,OAA0BvoB,EAAKsoB,aAA/B,4TAUctoB,EAAKwoB,iCAVnB,wCAWwBxoB,EAAK0oB,0CAX7B,sCAYsB1oB,EAAK2oB,wCAZ3B,sCAasB3oB,EAAKyoB,uCAb3B,gCAcgBzoB,EAAK4oB,mCAdrB,uVA0BqB4C,EA1BrB,urCAuDF,MAAM,wBAAN,OAA+BxrB,EAAKgoB,qBAApC,sCACuBhoB,EAAKioB,qBAD5B,iCAEkBjoB,EAAKkoB,gBAFvB,8sCA8BiDloB,EAAK6nB,mCA9BtD,2BA+Ba7nB,EAAK+nB,mCA/BlB,4BAgCc/nB,EAAK8nB,oCAhCnB,OAmCI2D,GAAsB,SAAC9b,GAO3B,MANkB,CAChBgb,QAAS,KACTI,QAAS,KACTF,UAAW,KACXC,OAAQ,MAEOnb,ICjGbqa,GAAiB,mBAAmBlZ,QAAQ,MAAO,QAElD,SAAS4a,GACdxB,GAEC,IACGtC,EACFD,EACAQ,EACAwD,EALFvkB,EACA,uDADO,UAOP,GAAa,YAATA,EAEAwgB,EAGEsC,EAHFtC,0BACAD,EAEEuC,EAFFvC,kCACAQ,EACE+B,EADF/B,sCAEFwD,EAAwBJ,GAAyBrB,OAC5C,CAAC,IAAD,EAKDA,EAAmB1C,mBAHrBI,EAFG,EAEHA,0BACAD,EAHG,EAGHA,kCACAQ,EAJG,EAIHA,sCAEFwD,EAAwBJ,GACtBrB,EAAmB1C,oBAIvB,IAAMoE,EAC0B,iBAA9BhE,EACIiE,EAC0B,kBAA9BjE,EACIkE,EAAmC/a,GACvC4W,GAGF,OAAIiE,EACEE,EACKC,GAA+B,CACpCJ,wBACAxD,wCACA/gB,SAGG4kB,GAAqB,CAC1BL,wBACAxD,wCACA/gB,SAIAykB,EACEC,EACKG,GAAgC,CACrCN,wBACAvkB,SAGG8kB,GAAsB,CAC3BP,wBACAvkB,SAIS,YAATA,EACI,+DAKF,gCAGR,SAAS4kB,GAAT,GAII,IAHFL,EAGC,EAHDA,sBACAxD,EAEC,EAFDA,sCAGA,MAAa,YADZ,EADD/gB,KAGQ,8IAAN,OAGiC4iB,GAHjC,iTAYG2B,EAZH,uHAckExD,EAdlE,oVA8BI,kDAAN,OACIwD,EADJ,gHAG6DxD,EAH7D,8QAgBF,SAAS4D,GAAT,GAII,IAHFJ,EAGC,EAHDA,sBACAxD,EAEC,EAFDA,sCAGA,MAAa,YADZ,EADD/gB,KAGQ,2GAAN,OAEmC4iB,GAFnC,0XAaE2B,EAbF,4LAiB0ExD,EAjB1E,qlCAkDI,kDAAN,OACIwD,EADJ,yJAI+DxD,EAJ/D,wbAsBF,SAAS+D,GAAT,GAAiE,IAAhCP,EAA+B,EAA/BA,sBAC/B,MAAa,YADiD,EAARvkB,KAE9C,kEAAN,OACiC4iB,GADjC,iXAWE2B,EAXF,yVA6BI,kDAAN,OACIA,EADJ,sUAgBF,SAASM,GAAT,GAA2E,IAAhCN,EAA+B,EAA/BA,sBACzC,MAAa,YAD2D,EAARvkB,KAExD,yGAAN,OAEiC4iB,GAFjC,sXAYE2B,EAZF,4kCA8CI,kDAAN,OACIA,EADJ,2fCpSa,SAASQ,GAAkBnsB,GACxC,IACEwkB,EAyBExkB,EAzBFwkB,gBACAE,EAwBE1kB,EAxBF0kB,wBACAE,EAuBE5kB,EAvBF4kB,6BACAwD,EAsBEpoB,EAtBFooB,8BACA3D,EAqBEzkB,EArBFykB,4BACAmD,EAoBE5nB,EApBF4nB,0BACAD,EAmBE3nB,EAnBF2nB,kCACAQ,EAkBEnoB,EAlBFmoB,sCACAV,EAiBEznB,EAjBFynB,0BACAI,EAgBE7nB,EAhBF6nB,mCACAC,EAeE9nB,EAfF8nB,oCACAC,EAcE/nB,EAdF+nB,mCACAC,EAaEhoB,EAbFgoB,qBACAC,EAYEjoB,EAZFioB,qBACAC,EAWEloB,EAXFkoB,gBACAkB,EAUEppB,EAVFopB,kBACAC,EASErpB,EATFqpB,mBACA+C,EAQEpsB,EARFosB,qBACA5D,EAOExoB,EAPFwoB,iCACAC,EAMEzoB,EANFyoB,uCACAC,EAKE1oB,EALF0oB,0CACAC,EAIE3oB,EAJF2oB,wCACAC,EAGE5oB,EAHF4oB,mCACAN,EAEEtoB,EAFFsoB,aACAC,EACEvoB,EADFuoB,eAGE8D,EAAUrsB,EAAK0P,cAAL,QACV4c,EAAQtsB,EAAK0P,cAAL,MACR6c,EAAUvsB,EAAK0P,cAAL,QACV8c,EAASxsB,EAAK0P,cAAL,OACT+c,EAAYzsB,EAAK0P,cAAL,UAShB,IAAMgd,EACJ3b,GAAgBqY,IAAsBrY,GAAgBqb,GAElDO,EACJ5b,GAAgBsY,IAChBtY,GAAgBqb,GAalB,MAAM,yCAAN,OATMM,EACKzC,GAA2BjqB,GACzB2sB,EACFjB,GAA4B1rB,GAjB/B,kEAuBR,uDAG2BopB,EAH3B,2CAI4BC,EAJ5B,6CAK8B+C,EAL9B,yEAOuCxH,EAPvC,kDAQmCF,EARnC,0CAS2BF,EAT3B,qDAUsCC,EAVtC,0CAW2B5T,GAAmBwb,GAX9C,yCAY0Bxb,GAAmByb,GAZ7C,0CAa2Bzb,GAAmB2b,GAb9C,2CAc4B3b,GAAmB0b,GAd/C,6CAe8B1b,GAAmB4b,GAfjD,+FAkByCrE,EAlBzC,4DAmB6CT,EAnB7C,oDAoBqCC,EApBrC,+DAqBgDO,EArBhD,mDAsBoCV,EAtBpC,4DAuB6CI,EAvB7C,6DAwB8CC,EAxB9C,4DAyB6CC,EAzB7C,8CA0B+BC,EA1B/B,8CA2B+BC,EA3B/B,yCA4B0BC,EA5B1B,0DA6B2CM,EA7B3C,gEA8BiDC,EA9BjD,mEA+BoDC,EA/BpD,iEAgCkDC,EAhClD,4DAiC6CC,EAjC7C,sCAkCuBN,EAlCvB,wCAmCyBC,EAnCzB,6BC/Da,SAASqE,GAA0B5sB,GAChD,IACE6sB,EASE7sB,EATF6sB,sBACAC,EAQE9sB,EARF8sB,uBACAC,EAOE/sB,EAPF+sB,mBACAC,EAMEhtB,EANFgtB,kBACAC,EAKEjtB,EALFitB,sBACAC,EAIEltB,EAJFktB,+BACAC,EAGEntB,EAHFmtB,gBACAC,EAEEptB,EAFFotB,qBACAlD,EACElqB,EADFkqB,mBAEEF,EAAiB,mBAAmBlZ,QAAQ,MAAO,QAEjDuc,EAAyB,WAC7B,OAAKtc,GAAgBmZ,EAAmBkC,sBAGpCrb,GAAgBmZ,EAAmBd,mBAC9Ba,GAA2BC,EAAoB,SAEpDnZ,GAAgBmZ,EAAmBb,oBAE9BqC,GAA4BxB,EAAoB,SAEnD,gCATE,kCA6MV,MAAM,gDAAN,OAPyB,WACvB,IAAIoD,EAAoB,QAIxB,OAHIvc,GAAgBoc,KAClBG,EAAoB,WApLA,WAAkC,IAAjCA,EAAgC,uDAAZ,QACvCC,EAAa,4BACXC,EAAwBH,IAK9B,MAJ0B,YAAtBC,IACFC,EAAa,kCAGT,mFAAN,OAC+CvD,EAD/C,g5BAuBgBwD,EAvBhB,krBAsCqCR,EAtCrC,oDAuCmCC,EAvCnC,oDAwCmCF,EAxCnC,4yCAoE2BG,EApE3B,2GAsE4BK,EAtE5B,usJA+KOE,CAAgBH,GAGbI,GADZ,iEAGkCb,EAHlC,kDAImCC,EAJnC,8CAK+BC,EAL/B,6CAM8BC,EAN9B,iDAOkCC,EAPlC,0DAQ2CC,EAR3C,2CAS4BC,EAT5B,gDAUiCC,EAVjC,uB,8CC9NF,2DAAAvtB,EAAA,6DACE8tB,EADF,EACEA,QACA3oB,EAFF,EAEEA,MACAjE,EAHF,EAGEA,MACA2L,EAJF,EAIEA,MACAyX,EALF,EAKEA,SACA+F,EANF,EAMEA,mBAGE2C,EASEngB,EATFmgB,sBACAe,EAQElhB,EARFkhB,UACAR,EAOE1gB,EAPF0gB,qBACAN,EAMEpgB,EANFogB,uBACAC,EAKErgB,EALFqgB,mBACAC,EAIEtgB,EAJFsgB,kBACAC,EAGEvgB,EAHFugB,sBACAC,EAEExgB,EAFFwgB,+BACAC,EACEzgB,EADFygB,gBAGIU,EAAS,CACbzmB,KAAM,KACNjC,OAAQH,EACRM,SAAUqoB,EACVjpB,SAAUkpB,EACVE,KAAK,GAAD,OAAKlB,GAA0B,CACjCC,wBACAe,YACAR,uBACAN,yBACAC,qBACAC,oBACAC,wBACAC,iCACAC,kBACAjD,wBAEFvW,MAAO,yBACPoa,UAAW,QACX1qB,KAAK,SAAD,OAAWsqB,EAAX,qBACJK,OAAQ,6BAxCZ,kBA2CUxoB,GAAyBqoB,EAAQ9sB,GA3C3C,WA4CQ8rB,EA5CR,gCA6CYxnB,GAAoB,CAAEF,OAAQH,EAAOM,SAAUqoB,GAAW5sB,GA7CtE,OA+CIojB,GAAS,SAAC8J,GAAD,mBAAC,eACLA,GADI,IAEP/H,aAAa,OAjDnB,kDAoDI/B,GAAS,SAAC+J,GAAD,mBAAC,eACLA,GADI,IAEPC,aAAa,EACbjI,aAAa,EACbkI,SAAU,KAAMrqB,QAChBsqB,WAAY,GACZC,eAAe,OA1DrB,2D,sBA+DeC,O,2FC1Df,+DAAA1uB,EAAA,6DACE2uB,EADF,EACEA,aACAb,EAFF,EAEEA,QACA3oB,EAHF,EAGEA,MACAjE,EAJF,EAIEA,MACAojB,EALF,EAKEA,SACAzX,EANF,EAMEA,MACAwd,EAPF,EAOEA,mBACAuE,EARF,EAQEA,WAGE5B,EASEngB,EATFmgB,sBACAe,EAQElhB,EARFkhB,UACAR,EAOE1gB,EAPF0gB,qBACAN,EAMEpgB,EANFogB,uBACAC,EAKErgB,EALFqgB,mBACAC,EAIEtgB,EAJFsgB,kBACAC,EAGEvgB,EAHFugB,sBACAC,EAEExgB,EAFFwgB,+BACAC,EACEzgB,EADFygB,gBAGIuB,EAAgB,CACpBtnB,KAAM,KACNjC,OAAQH,EACRM,SAAUqoB,EACVpsB,GAAIitB,EAAa,GAAGjtB,GACpBmD,SAAUkpB,EACVE,KAAK,GAAD,OAAKlB,GAA0B,CACjCC,wBACAe,YACAR,uBACAN,yBACAC,qBACAC,oBACAC,wBACAC,iCACAC,kBACAjD,wBAEFvW,MAAO,yBACPoa,UAAW,QACX1qB,KAAK,SAAD,OAAWsqB,EAAX,qBACJK,OAAQ,6BA3CZ,kBA+CUvoB,GAAyBipB,EAAe3tB,GA/ClD,UAgDS8rB,EAhDT,iCAiDYtnB,GAAmB,CAAEJ,OAAQH,EAAOM,SAAUqoB,GAAW5sB,GAjDrE,UAkDyB,mBAAf0tB,EAlDV,2CAmDe,GAnDf,iCAqDatK,GAAS,SAACwK,GAAD,mBAAC,eACZA,GADW,IAEdzI,aAAa,EACboI,eAAe,EACfH,aAAa,EACbC,SAAU,GACVC,WAAY,8BA3DpB,yBA8DUhpB,GAAoB,CAAEF,OAAQH,EAAOM,SAAUqoB,GAAW5sB,GA9DpE,WA+DuB,mBAAf0tB,EA/DR,2CAgEa,GAhEb,QAkEItK,GAAS,SAACyK,GAAD,mBAAC,eACLA,GADI,IAEP1I,aAAa,EACboI,eAAe,EACfH,aAAa,EACbC,SAAU,GACVC,WAAY,6BAxElB,qDA2EuB,mBAAfI,EA3ER,2CA4Ea,GA5Eb,QA8EItK,GAAS,SAAC0K,GAAD,mBAAC,eACLA,GADI,IAEPV,aAAa,EACbjI,aAAa,EACbkI,SAAU,KAAMrqB,QAChBsqB,WAAY,GACZC,eAAe,OApFrB,2D,sBAyFeQ,O,6CCrFFC,GAAqB,SAACvQ,EAAawQ,GAC9C,IAIIrB,EACAsB,EALEC,EAA6BjgB,GACjC+f,EACAxQ,GAIEgQ,EAAe,GACfU,EAA2B3gB,SAC7Bof,EAAUuB,EAA2B,GAAG3tB,GACxC0tB,EAAmBC,EAA2B,GAAGC,eACjDX,EAAerf,GACb8f,EACAC,IAGJ,IAIIE,EAJAlF,EAAqB,GACrBd,GAAoB,EACpBC,GAAqB,EACrB+C,GAAuB,EAE3B,GAAIoC,EAAajgB,OAAQ,OACvB2b,EAAqB5a,GAAuBkf,EAAa,GAAGV,MACzD1E,EAFoB,EAEpBA,kBAAmBC,EAFC,EAEDA,mBAAoB+C,EAFnB,EAEmBA,qBAE1CgD,EAAgBZ,EAAa,GAAG9pB,SAElC,MAAO,CACLwqB,6BACAvB,UACAsB,mBACAT,eACApF,oBACAC,qBACA+C,qBAAsBrb,GAAgBqb,GACtClC,qBACAkF,kBAIEC,GAAqB,SAAC,GASrB,IARLb,EAQI,EARJA,aACAb,EAOI,EAPJA,QACA5sB,EAMI,EANJA,MACA2L,EAKI,EALJA,MACAyX,EAII,EAJJA,SACAnf,EAGI,EAHJA,MACAklB,EAEI,EAFJA,mBACAuE,EACI,EADJA,WAEA,OAA4B,IAAxBD,EAAajgB,OACRggB,GAAmB,CACxBZ,UACA5sB,QACA2L,QACAyX,WACAnf,QACAklB,uBAGK4E,GAAmB,CACxBN,eACAb,UACAjhB,QACAyX,WACAnf,QACAjE,QACAmpB,qBACAuE,gBAKOa,GAAyB,uCAAG,WACvCpR,EACAnd,EAFuC,oDAAAlB,EAAA,6DAGrC6M,EAHqC,EAGrCA,MAAOyX,EAH8B,EAG9BA,SAH8B,IAGpBsK,kBAHoB,MAGP,kBAHO,WAKF1pB,GAAoBmZ,EAAI3c,GAAIR,GAL1B,UAKjCiuB,EALiC,SAMcO,GACnDrR,EACA8Q,GAFMQ,EAN+B,EAM/BA,kBAAmBhB,EANY,EAMZA,aAAcb,EANF,EAMEA,QANF,EAWrCoB,GAAmB7Q,EAAK8Q,GADlB9E,EAV+B,EAU/BA,mBAAoBkF,EAVW,EAUXA,cAAehD,EAVJ,EAUIA,qBAGxB,mBAAfqC,EAbmC,qBAcjCD,EAAajgB,OAdoB,qBAe7BvO,EAAOsP,GAAuBkf,EAAa,GAAGV,OAC1CjB,sBAhByB,2CAiB1B,GAjB0B,eAmBnC7sB,EAAK4tB,UAAYwB,EACjBpvB,EAAKyvB,SAAU,EApBoB,UAqB7BX,GAAmB,CACvBN,eACAb,UACAjhB,MAAO1M,EACPmkB,WACAnf,MAAOkZ,EAAI3c,GACXR,QACAmpB,qBACAuE,eA7BiC,oCAkCnCrC,IACAgD,GACAA,IAAkB1iB,EAAMkhB,UApCW,0CAsC5BzJ,GAAS,SAACwK,GAAD,mBAAC,eACZA,GADW,IAEdzI,aAAa,EACboI,eAAe,EACfH,aAAa,EACbC,SAAU,4CACVC,WAAY,SA5CqB,WA+C/BrpB,EAAQkZ,EAAI3c,IACdiuB,EAAkBjhB,OAhDe,kCAiD7B8gB,GAAmB,CACvBb,eACAb,UACAjhB,QACAyX,WACAnf,QACAjE,QACAmpB,qBACAuE,eAzDiC,uCA4D7BZ,EAAS,CACb1oB,OAAQ+Y,EAAI3c,GACZ8B,KAAK,OAAD,OAAS6a,EAAI3c,GAAb,qBACJ+B,YAAa,6BA/DoB,UAiE7B4B,GAAqB2oB,EAAQ9sB,GAjEA,yBAkENgE,GAAoBmZ,EAAI3c,GAAIR,GAlEtB,eAkE7B2uB,EAlE6B,OAmE7BC,EAAkBtgB,GAAoBqgB,EAAgBxR,GAAK,GAAG3c,GAnEjC,UAoE7BgtB,GAAmB,CACvBoB,kBACA5uB,QACA2L,QACAyX,WACAnf,MAAOkZ,EAAI3c,GACX2oB,uBA1EiC,4CAAH,0DAgFzBqF,GAAsB,SAAC/Q,EAAawQ,GAC/C,IAIIrB,EACAsB,EALEO,EAAoBngB,GACxB2f,EACAxQ,GAIEgQ,EAAe,GAMnB,OALIgB,EAAkBjhB,SACpBof,EAAU6B,EAAkB,GAAGjuB,GAE/BitB,EzCImC,SAACxuB,EAAMoP,GAC5C,GAAIpP,EAAM,OAAOA,EAAK8C,QAAO,SAAC+G,GAAD,OAAUA,EAAKxG,OAAL,gBAAuB+L,EAAM,GAAG7N,GAAhC,wByCLtBquB,CADfX,EAAmBO,EAAkB,GAAGL,eACiBK,IAEpD,CACLA,oBACA7B,UACAsB,mBACAT,iBC2iBWqB,GAtsBQ,WACrB,IAAM/nB,EAAUjL,KAChB,EAA0CsL,mBAAS,CACjDwiB,QAAS,GACTC,MAAO,GACPE,OAAQ,GACRD,UAAW,GACXE,QAAS,KALX,mBAAOrb,EAAP,KAAsB0U,EAAtB,KAOA,EAA0Bjc,mBAAS,CACjCoI,SAAU,CACR+T,gBAAiB,IACjBM,8BAA8B,EAC9BI,uBAAuB,EACvBT,iBAAkB,UAClBC,gBAAiB,YACjBE,yBAAyB,EACzBO,wBAAwB,EACxBC,uBAAuB,EACvBT,4BAA6B,KAE/B+C,mBAAoB,CAClBY,+BAA+B,EAC/BX,0BAA2B,SAC3BI,mCAAoC,EACpCC,oCAAqC,EACrCC,mCAAoC,EACpCC,qBAAsB,GACtBC,qBAAsB,GACtBC,gBAAiB,GACjBM,iCAAkC,EAClCC,uCAAwC,EACxCC,0CAA2C,EAC3CC,wCAAyC,EACzCC,mCAAoC,EACpCN,aAAc,GACdC,eAAgB,UAChBb,0BAA2B,IAC3BqB,uBAAuB,EACvBD,wBAAwB,EACxBnB,mCAAmC,EACnCC,0BAA2B,eAC3BO,sCAAuC,KAEzCiE,sBAAsB,EACtBhD,mBAAmB,EACnBC,oBAAoB,EACpBhF,iBAAiB,EACjB6B,aAAa,EACb4J,gBAAgB,EAChB3B,aAAa,EACbG,eAAe,EACfF,SAAU,GACVC,WAAY,KA5Cd,mBAAO3hB,EAAP,KAAcyX,EAAd,KA+CMuI,EAA4B3b,GAAgBrE,EAAM0c,mBAClD2G,EAA+Bhf,GACnCrE,EAAM0f,sBAEF4D,EAAqBvgB,GACzBC,EACAhD,EAAM6D,SAASgU,kBA9DU,SAoXZgK,EApXY,oFAoX3B,WAAkCrQ,EAAK5Y,EAAUH,EAAQpE,GAAzD,yEAAAlB,EAAA,+DAOM6M,EAAM6D,SALR+T,EAFJ,EAEIA,gBACAM,EAHJ,EAGIA,6BACAH,EAJJ,EAIIA,4BACAD,EALJ,EAKIA,gBACAE,EANJ,EAMIA,wBANJ,EA6BMhY,EAAM8a,mBAnBRI,EAVJ,EAUIA,0BACAF,EAXJ,EAWIA,0BACAU,EAZJ,EAYIA,8BACAT,EAbJ,EAaIA,kCACAQ,EAdJ,EAcIA,sCACAV,EAfJ,EAeIA,0BACAI,EAhBJ,EAgBIA,mCACAC,EAjBJ,EAiBIA,oCACAC,EAlBJ,EAkBIA,mCACAC,EAnBJ,EAmBIA,qBACAC,EApBJ,EAoBIA,qBACAC,EArBJ,EAqBIA,gBACAM,EAtBJ,EAsBIA,iCACAC,EAvBJ,EAuBIA,uCACAC,EAxBJ,EAwBIA,0CACAC,EAzBJ,EAyBIA,wCACAC,EA1BJ,EA0BIA,mCACAN,EA3BJ,EA2BIA,aACAC,EA5BJ,EA4BIA,eAGMa,EACN1c,EADM0c,kBAAmBC,EACzB3c,EADyB2c,mBAAoB+C,EAC7C1f,EAD6C0f,qBAGzCyB,EAAS,CACbzmB,KAAM,KACNjC,OAAQA,EACRG,SAAUA,EACVZ,SAAUgoB,EACNpI,EACAoD,EACJoG,KAAK,GAAD,OAAK3B,GAAkB,CACzB/C,oBACAC,qBACAjB,gCACAxD,+BACAwH,uBACA1c,gBACA8U,kBACAE,0BACAD,8BACAmD,4BACAD,oCACAQ,wCACAV,4BACAI,qCACAC,sCACAC,qCACAC,uBACAC,uBACAC,kBACAM,mCACAC,yCACAC,4CACAC,0CACAC,qCACAN,eACAC,oBAEF5U,MAAO,oBACPoa,UAAW,QACX1qB,KAAK,SAAD,OAAWiC,GACf0oB,OAAQ,6BAxEZ,kBA2EUxoB,GAAyBqoB,EAAQ9sB,GA3E3C,WA4EQgvB,EA5ER,kCA6EY1qB,GACJ,CAAEF,OAAQA,EAAQG,SAAUA,GAC5BvE,GA/ER,yBAkFUuuB,GAA0BpR,EAAKnd,EAAO,CAC1C2L,QACAyX,WACAsK,WAAY,mBArFlB,QAuFItK,EAAS,2BACJzX,GADG,IAENyhB,aAAa,EACbjI,aAAa,EACbkI,SAAU,GACVC,WAAY,uBACZC,eAAe,KA7FrB,kDAgGInK,EAAS,2BACJzX,GADG,IAENyhB,aAAa,EACbjI,aAAa,EACbkI,SAAU,KAAMrqB,QAChBsqB,WAAY,GACZC,eAAe,KAtGrB,2DApX2B,+BA+dZQ,EA/dY,sFA+d3B,WACE5Q,EACAsQ,EACAlpB,EACAH,EACApE,GALF,yEAAAlB,EAAA,+DAaM6M,EAAM6D,SALR+T,EARJ,EAQIA,gBACAM,EATJ,EASIA,6BACAH,EAVJ,EAUIA,4BACAD,EAXJ,EAWIA,gBACAE,EAZJ,EAYIA,wBAZJ,EAmCMhY,EAAM8a,mBAnBRI,EAhBJ,EAgBIA,0BACAF,EAjBJ,EAiBIA,0BACAU,EAlBJ,EAkBIA,8BACAT,EAnBJ,EAmBIA,kCACAQ,EApBJ,EAoBIA,sCACAV,EArBJ,EAqBIA,0BACAI,EAtBJ,EAsBIA,mCACAC,EAvBJ,EAuBIA,oCACAC,EAxBJ,EAwBIA,mCACAC,EAzBJ,EAyBIA,qBACAC,EA1BJ,EA0BIA,qBACAC,EA3BJ,EA2BIA,gBACAM,EA5BJ,EA4BIA,iCACAC,EA7BJ,EA6BIA,uCACAC,EA9BJ,EA8BIA,0CACAC,EA/BJ,EA+BIA,wCACAC,EAhCJ,EAgCIA,mCACAN,EAjCJ,EAiCIA,aACAC,EAlCJ,EAkCIA,eAGMa,EACN1c,EADM0c,kBAAmBC,EACzB3c,EADyB2c,mBAAoB+C,EAC7C1f,EAD6C0f,qBAGzCsC,EAAgB,CACpBtnB,KAAM,KACNjC,OAAQA,EACRG,SAAUA,EACV/D,GAAIitB,EAAa,GAAGjtB,GACpBmD,SAAUgoB,EACNpI,EACAoD,EACJoG,KAAK,GAAD,OAAK3B,GAAkB,CACzB/C,oBACAhB,gCACAxD,+BACAyE,qBACA+C,uBACA3H,8BACA/U,gBACA8U,kBACAE,0BACAkD,4BACAD,oCACAQ,wCACAV,4BACAI,qCACAC,sCACAC,qCACAC,uBACAC,uBACAC,kBACAM,mCACAC,yCACAC,4CACAC,0CACAC,qCACAN,eACAC,oBAEF5U,MAAO,oBACPoa,UAAW,QACX1qB,KAAK,SAAD,OAAWiC,GACf0oB,OAAQ,6BA/EZ,kBAmFUvoB,GAAyBipB,EAAe3tB,GAnFlD,UAoFSgvB,EApFT,kCAqFYxqB,GAAmB,CAAEJ,OAAQA,EAAQG,SAAUA,GAAYvE,GArFvE,yBAsFYuuB,GAA0BpR,EAAKnd,EAAO,CAC1C2L,QACAyX,WACAsK,WAAY,mBAzFpB,iCA2FatK,EAAS,2BACXzX,GADU,IAEbyhB,aAAa,EACbjI,aAAa,EACbkI,SAAU,GACVC,WAAY,uBACZC,eAAe,MAjGvB,yBAoGUjpB,GAAoB,CAAEF,OAAQA,EAAQG,SAAUA,GAAYvE,GApGtE,yBAqGUuuB,GAA0BpR,EAAKnd,EAAO,CAC1C2L,QACAyX,WACAsK,WAAY,mBAxGlB,QA0GItK,EAAS,2BACJzX,GADG,IAENyhB,aAAa,EACbjI,aAAa,EACbkI,SAAU,GACVC,WAAY,uBACZC,eAAe,KAhHrB,kDAmHInK,EAAS,2BACJzX,GADG,IAENyhB,aAAa,EACbjI,aAAa,EACbkI,SAAU,KAAIrqB,QACdsqB,WAAY,GACZC,eAAe,KAzHrB,2DA/d2B,sBAsF3Bva,qBAAU,WACRoQ,GAAS,SAACwK,GAAD,mBAAC,eACLA,GADI,IAEPR,aAAa,EACbC,SAAU,GACVE,eAAe,EACfD,WAAY,UAEb,CAAC3hB,EAAM0c,kBAAmB1c,EAAM2c,qBAEnCtV,qBAAU,WACR,IACMkc,EAD2B,YACyBC,KACxDF,EAAmBG,QAGnBhM,EADE8L,EACO,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPjC,aAAa,EACbC,SAAS,0FAET7d,SAAS,2BACJ6f,EAAY7f,UADT,IAENyU,uBAAuB,OAIlB,SAAC4J,GAAD,mBAAC,eACLA,GADI,IAEPT,aAAa,EACbC,SAAU,GACV7d,SAAS,2BACJqe,EAASre,UADN,IAENyU,uBAAuB,UAI5B,CAACgL,IAEJjc,qBAAU,WACRoQ,GAAS,SAACkM,GAAD,mBAAC,eACLA,GADI,IAEPlC,aAAa,EACbC,SAAU,GACV7d,SAAS,2BACJ8f,EAAO9f,UADJ,IAEN0U,wBAAwB,UAIzBvY,EAAM6D,SAASkU,4BAA4B0L,QAC5CzjB,EAAM0c,mBAC6B,cAAnC1c,EAAM6D,SAASiU,iBAEfL,GAAS,SAAC7hB,GAAD,mBAAC,eACLA,GADI,IAEP6rB,aAAa,EACbC,SAAU,gCACV7d,SAAS,2BACJjO,EAAKiO,UADF,IAEN0U,wBAAwB,WAI7B,CACDvY,EAAM6D,SAASkU,4BACf/X,EAAM0c,kBACN1c,EAAM6D,SAASiU,kBAGjBzQ,qBAAU,WACRoQ,GAAS,SAACmM,GAAD,mBAAC,eACLA,GADI,IAEPnC,aAAa,EACbC,SAAU,gCACV5G,mBAAmB,2BACd8I,EAAe9I,oBADF,IAEhBsB,wBAAwB,UAIzBpc,EAAM8a,mBAAmBW,sCAAsCgI,QAChEzjB,EAAM2c,oBACiD,iBAAvD3c,EAAM8a,mBAAmBI,2BAEzBzD,GAAS,SAACoM,GAAD,mBAAC,eACLA,GADI,IAEPpC,aAAa,EACbC,SAAU,gCACV5G,mBAAmB,2BACd+I,EAAU/I,oBADG,IAEhBsB,wBAAwB,WAI7B,CACDpc,EAAM8a,mBAAmBW,sCACzBzb,EAAM2c,mBACN3c,EAAM8a,mBAAmBI,4BAG3B7T,qBAAU,WACJrH,EAAM2X,mBAENqI,EACKhgB,EAAM6D,SAAS+T,gBAAgB/V,OAC/B7B,EAAM8a,mBAAmBE,0BAA0BnZ,QAmBxD4V,GAAS,SAACqM,GAAD,mBAAC,eACLA,GADI,IAEPrC,aAAa,EACbjI,aAAa,EACbkI,SAAU,GACVC,WAAY,GACZ9d,SAAS,2BACJigB,EAASjgB,UADN,IAEN2U,uBAAuB,IAEzBsC,mBAAmB,2BACdgJ,EAAShJ,oBADI,IAEhBuB,uBAAuB,IAEzBuF,eAAe,OA/BjBnK,GAAS,SAAC0K,GAAD,mBAAC,eACLA,GADI,IAEPV,aAAa,EACbjI,aAAa,EACb3V,SAAS,2BACJse,EAActe,UADX,IAEN2U,wBAAuBwH,IAEzBlF,mBAAmB,2BACdqH,EAAcrH,oBADD,IAEhBuB,uBAAuB2D,IAEzB0B,SAAU,2BACVC,WAAY,GACZC,eAAe,UAqBpB,CACD5hB,EAAM6D,SAAS+T,gBACfoI,EACAhgB,EAAM2X,gBACN3X,EAAM8a,mBAAmBE,4BAG3B3T,qBAAU,WACR,IAAMyK,EAAczQ,KACd0iB,EAActwB,EAAU,SAC9B,sBAAC,kGAAAN,EAAA,0DACK2e,EADL,0CAG0CzZ,GACnCyZ,EAAYjd,GACZkvB,GALP,OAGWzB,EAHX,OAQS/f,GAAe+f,EAAwBxQ,GAAajQ,QAChDmiB,EAAgBzhB,GACpB+f,EACAxQ,GACA,GAAG2Q,gBACCX,EAAerf,GACnBuhB,EACAzhB,GAAe+f,EAAwBxQ,KAExBjQ,OAAS,GAClBvO,EAAOsP,GAAuBkf,EAAa,GAAGV,MAGlD1E,EAGEppB,EAHFopB,kBACAC,EAEErpB,EAFFqpB,mBACA+C,EACEpsB,EADFosB,qBANyB,EAmBvBpsB,EAAKuQ,SATPmU,EAVyB,EAUzBA,wBACAF,EAXyB,EAWzBA,gBACAI,EAZyB,EAYzBA,6BACAH,EAbyB,EAazBA,4BACA0F,EAdyB,EAczBA,iBACAC,EAfyB,EAezBA,eACAC,EAhByB,EAgBzBA,gBACAC,EAjByB,EAiBzBA,iBACAC,EAlByB,EAkBzBA,mBAlByB,EAwCvBvqB,EAAKwnB,mBAlBPG,EAtByB,EAsBzBA,kCACAC,EAvByB,EAuBzBA,0BACAQ,EAxByB,EAwBzBA,8BACAD,EAzByB,EAyBzBA,sCACAV,EA1ByB,EA0BzBA,0BACAI,EA3ByB,EA2BzBA,mCACAC,EA5ByB,EA4BzBA,oCACAC,EA7ByB,EA6BzBA,mCACAC,EA9ByB,EA8BzBA,qBACAC,EA/ByB,EA+BzBA,qBACAC,EAhCyB,EAgCzBA,gBACAM,EAjCyB,EAiCzBA,iCACAC,EAlCyB,EAkCzBA,uCACAC,EAnCyB,EAmCzBA,0CACAC,EApCyB,EAoCzBA,wCACAC,EArCyB,EAqCzBA,mCACAN,EAtCyB,EAsCzBA,aACAC,EAvCyB,EAuCzBA,eAGFpE,GAAS,SAAC7hB,GAAD,mBAAC,eACLA,GADI,IAEPiO,SAAS,2BACJjO,EAAKiO,UADF,IAEN+T,gBAAiBkK,EAAa,GAAG9pB,SACjC8f,kBACAI,+BACAH,8BACAC,4BAEF8C,mBAAoB,CAClBE,0BAA2B8G,EAAa,GAAG9pB,SAC3CijB,oCACAC,4BACAQ,gCACAD,wCACAV,4BACAI,qCACAC,sCACAC,qCACAC,uBACAC,uBACAC,kBACAM,mCACAC,yCACAC,4CACAC,0CACAC,qCACAN,eACAC,kBAEFuH,gBAAgB,EAChB1D,qBAAsBA,EACtBhD,kBAAmBA,EACnBC,mBAAoBA,OAEtBjF,GAAiB,SAAC9hB,GAAD,mBAAC,eACbA,GADY,IAEfqoB,QAASR,EAAiB5c,MAAM,KAAKK,KAAK,KAC1Cgd,MAAOR,EAAe7c,MAAM,KAAKK,KAAK,KACtCid,UAAWN,EAAmBhd,MAAM,KAAKK,KAAK,KAC9Ckd,OAAQT,EAAgB9c,MAAM,KAAKK,KAAK,KACxCmd,QAAST,EAAiB/c,MAAM,KAAKK,KAAK,WAG5CuW,GAAS,SAAC8J,GAAD,mBAAC,eACLA,GADI,IAEP1d,SAAS,eAAM0d,EAAU1d,UACzBuf,gBAAgB,QAIpB3L,GAAS,SAACyK,GAAD,mBAAC,eACLA,GADI,IAEPre,SAAS,eAAMqe,EAASre,UACxBuf,gBAAgB,OAlHzB,gDAsHK3L,EAAS,2BACJzX,GADG,IAENyhB,aAAa,EACbjI,aAAa,EACbkI,SAAU,KAAMrqB,QAChBsqB,WAAY,GACZC,eAAe,EACfwB,gBAAgB,KA7HvB,wDAAD,KAmIC,IA2OH,IAAM/K,EAAY,uCAAG,WAAOpV,GAAP,eAAA9P,EAAA,sE1C/eI8wB,E0CgfS,UAAD,OAAWhhB,EAAX,Q1C/e1BihB,MAAMD,GACVE,MAAK,SAACC,GAAD,OAAOA,EAAExe,UACdue,MAAK,SAACve,GACL,OAAOA,K0C2eU,OACflN,EADe,OAEnBgf,EAAiB,2BAAK1U,GAAN,mBAAsBC,EAAWvK,KAF9B,iC1C/eG,IAACurB,I0C+eJ,OAAH,sDAKZ7L,EAAU,uCAAG,WAAOhc,GAAP,iCAAAjJ,EAAA,yDACjBiJ,EAAEG,kBAEEyD,EAAMyhB,YAHO,oDAOjBhK,EAAS,2BAAKzX,GAAN,IAAawZ,aAAa,KAC5BnlB,EAAQZ,EAAU,WAClB+d,EAAMnQ,MATK,2CAakBhJ,GAAoBmZ,EAAI3c,GAAIR,GAb9C,WAaPkE,EAbO,OAcPE,EAAS+Y,EAAI3c,IAEf0N,GAAehK,EAAkBiZ,GAAK3P,OAhB7B,oBAiBLof,EAAU1e,GAAehK,EAAkBiZ,GAAK,GAAG3c,GACnD0tB,EAAmBhgB,GAAehK,EAAkBiZ,GAAK,GAC5DiR,eAKyB,KAJtBX,EAAerf,GACnB8f,EACAhgB,GAAehK,EAAkBiZ,KAElB3P,OAxBN,kCAyBHggB,EAAmBrQ,EAAKyP,EAASxoB,EAAQpE,GAzBtC,iDA2BH+tB,EAAmB5Q,EAAKsQ,EAAcb,EAASxoB,EAAQpE,GA3BpD,uCA8BL8sB,EAAS,CACb1oB,OAAQ+Y,EAAI3c,GACZ8B,KAAK,OAAD,OAAS6a,EAAI3c,IACjB+B,YAAa,gCAjCJ,UAmCL4B,GAAqB2oB,EAAQ9sB,GAnCxB,yBAoCkBgE,GAAoBmZ,EAAI3c,GAAIR,GApC9C,eAoCL2uB,EApCK,OAqCLpqB,EAAW2J,GAAeygB,EAAgBxR,GAAK,GAAG3c,GArC7C,UAsCLgtB,EAAmBrQ,EAAK5Y,EAAUH,EAAQpE,GAtCrC,QAuCXojB,GAAS,SAACyK,GAAD,mBAAC,eACLA,GADI,IAEPkB,gBAAgB,OAzCP,0DA6Cb3L,EAAS,2BACJzX,GADG,IAENyhB,aAAa,EACbjI,aAAa,EACbkI,SAAU,KAAMrqB,QAChBsqB,WAAY,GACZC,eAAe,KAnDJ,0DAAH,sDAyDhB,OACE,qCACG5hB,EAAM4hB,eACL,cAAC,GAAD,CAAU5uB,OAAO,UAAU2I,IAAKqE,EAAM2hB,aAEvC3hB,EAAMyhB,aAAe,cAAC,GAAD,CAAUzuB,OAAO,QAAQ2I,IAAKqE,EAAM0hB,WAC1D,eAAChkB,EAAA,EAAD,CAAYsI,OAAO,QAAQ9H,QAAQ,KAAKnB,UAAW3B,EAAQgR,MAA3D,4BAEE,cAAC,GAAD,CACE6L,QAAS5T,GAAgBrE,EAAM0f,sBAC/B/gB,SApmBa,SAACvC,GACpBqb,EAAS,2BAAKzX,GAAN,IAAa0f,qBAAsBtjB,EAAEC,OAAO4b,iBAsmBlD,uBACA,cAACva,EAAA,EAAD,CAAYsI,OAAO,YAAYjJ,UAAW3B,EAAQsY,SAAlD,wCAIA,cAAC,GAAD,CAAY1T,MAAOA,EAAO8F,YAxmBV,SAACnP,GAAD,OAAU,SAACyF,GAC7BA,EAAEG,iBACW,mBAAT5F,EACF8gB,EAAS,2BACJzX,GADG,IAEN0c,kBAAmB,OACnBC,mBAAoB,WAEJ,oBAAThmB,GACT8gB,EAAS,2BACJzX,GADG,IAEN0c,kBAAmB,QACnBC,mBAAoB,cA6lBtB,uBACC3c,EAAMojB,gBACL,cAACpmB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACmC,EAAA,EAAD,CACEC,KAAM,GACNma,UAAW,EACXtnB,MAAM,UACN4K,UAAW3B,EAAQzI,WAIzB,uBACA,cAAC,GAAD,CACEylB,WAAYA,EACZpY,MAAOA,EACPgD,cAAeA,EACfqV,aAAcA,EACdZ,SAAUA,EACVC,iBAAkBA,QC/sBX2M,GAXY,WAEzB,OACE,mCACE,cAAC,GAAD,UACE,cAAC,GAAD,SCCOC,GAPC,WACd,OACE,mCACE,cAAC,GAAD,O,wCCJOn0B,GAAYC,YAAW,CAClCm0B,cAAe,CACb/zB,WAAY,sCACZC,aAAc,MACdC,QAAS,EACTsB,KAAM,+KACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACP,UAAW,CACTK,gBAAiB,WAEnBf,MAAO,QACPD,OAAQ,OACRc,cAAe,QAEjB2gB,aAAc,CACZziB,WAAY,uCACZ6Z,OAAQ,oBACR5Z,aAAc,MACdC,QAAS,EACT,UAAW,CACT8B,gBAAiB,WAEnBf,MAAO,QACPD,OAAQ,QAEVgzB,cAAe,CACbtb,UAAW,wBACXzY,aAAc,OACdC,QAAS,KCiBE+zB,GAxCO,SAAC5kB,GACrB,IAAQuM,EAA8CvM,EAA9CuM,MAAOnc,EAAuC4P,EAAvC5P,SAAU0W,EAA6B9G,EAA7B8G,KAAMC,EAAuB/G,EAAvB+G,QAAS8d,EAAc7kB,EAAd6kB,UAClCtpB,EAAUjL,KAEhB,OACE,eAACw0B,GAAA,EAAD,CACE9vB,GAAG,SACH8R,KAAMA,EACN+N,QAAS,kBAAM9N,GAAQ,IACvB,kBAAgB,iBAChBzI,WAAS,EACTymB,SAAS,KACT7nB,UAAW3B,EAAQopB,cAPrB,UASE,cAACK,GAAA,EAAD,CAAahwB,GAAG,iBAAhB,SAAkCuX,IAClC,cAAC0Y,GAAA,EAAD,CAAejwB,GAAG,UAAlB,SAA6B5E,IAC7B,eAAC80B,GAAA,EAAD,WACE,cAAC7lB,EAAA,EAAD,CACErK,GAAG,UACHkK,QAAS,WACP6H,GAAQ,GACR8d,KAEF3nB,UAAW3B,EAAQmpB,cANrB,SAQE,cAAC7mB,EAAA,EAAD,UAAamC,EAAMmlB,kBAGrB,cAAC9lB,EAAA,EAAD,CACErK,GAAG,SACHqJ,QAAQ,YACRa,QAAS,kBAAM6H,GAAQ,IACvB7J,UAAW3B,EAAQ6X,aAJrB,2B,oBCnCK9iB,GAAYC,aAAW,SAACkb,GAAD,MAAY,CAC9Cta,KAAM,CACJT,OAAQ,EACRD,QAASgb,EAAMzN,QAAQ,IAEzBzL,OAAO,cACLI,gBAAiB,UACjB3B,SAAU,OACVP,QAAS,qBACRgb,EAAM4G,YAAY+S,KAAK,MAAQ,CAC9Bp0B,SAAU,SAGdq0B,YAAa,CACX7zB,SAAU,WACV8zB,MAAO7Z,EAAMzN,QAAQ,GACrBvM,IAAKga,EAAMzN,QAAQ,GACnB1L,MAAOmZ,EAAME,QAAQuR,KAAK,MAE5BqI,kBAAmB,CACjBrd,WAAYuD,EAAMqH,YAAY9f,OAAO,SACrCrC,WAAY,UACZC,aAAc,MACd,UAAW,CACT+B,gBAAiB,WAEnBlC,QAAS,sBACTkB,OAAQ,QAEV6zB,WAAY,CACVrzB,KAAM,8HACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPG,cAAe,aAEjBgzB,SAAU,CACR90B,WAAY,sCACZC,aAAc,OACdC,QAAS,EACTe,MAAO,QAETkB,OAAQ,CACNR,MAAO,SAETozB,YAAa,CACXlb,OAAQ,oBACR5Z,aAAc,OACdC,QAAS,GAEXuiB,aAAc,CACZ5I,OAAQ,oBACR5Z,aAAc,MACdC,QAAS,EACTe,MAAO,QACPD,OAAQ,QAEV4O,OAAQ,CACN3O,MAAO,OACPD,OAAQ,QAEVg0B,WAAY,CACVC,OAAQ,OACRN,MAAO,SAETO,eAAgB,CACd1zB,KAAM,qHACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,EACTi1B,WAAY,IACZjT,YAAa,QAEfkT,YAAa,CACX5zB,KAAM,8CACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,GAEXyiB,UAAW,CACTpL,WAAYuD,EAAMqH,YAAY9f,OAAO,SACrCrC,WAAY,UACZC,aAAc,MACd,UAAW,CACT+B,gBAAiB,WAEnBf,MAAO,QACPD,OAAQ,QAEV+Z,QAAS,CACP/Y,gBAAiB8Y,EAAME,QAAQC,OAAOC,MACtCvZ,MAAO,sBACP+W,UAAWoC,EAAMK,QAAQ,GACzB9a,SAAU,IAEZg1B,iBAAkB,CAChBr1B,WAAY,sCACZ6Z,OAAQ,sBACR5Z,aAAc,MACdC,QAAS,EACT,UAAW,CACT8B,gBAAiB,WAEnBlC,QAAS,sBACTkB,OAAQ,QAEVs0B,qBAAsB,CACpB9zB,KAAM,8HACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPG,cAAe,YACf5B,QAAS,O,SCxGE,SAASq1B,GAAelmB,GACrC,IAAMzE,EAAUjL,KAChB,OACE,uBAAMyN,SAAUiC,EAAMmmB,OAAO1pB,aAA7B,UACE,eAACwoB,GAAA,EAAD,WACE,cAACpnB,EAAA,EAAD,CAAYsI,OAAO,aAAajJ,UAAW3B,EAAQsqB,eAAnD,wBAGA,cAACznB,EAAA,EAAD,CACEtH,KAAK,KACL9B,GAAG,KACHsK,SAAUU,EAAMV,SAChBV,YAAY,mBACZP,QAAQ,WACRnB,UAAW3B,EAAQkqB,SACnBlnB,aAAa,MACbO,SAAUkB,EAAMmmB,OAAO7pB,aACvBrI,MAAO+L,EAAMmmB,OAAOhiB,OAAOnP,GAC3BrB,MAAOqM,EAAMmmB,OAAOC,QAAQpxB,IAAMqxB,QAAQrmB,EAAMmmB,OAAOG,OAAOtxB,IAC9DuxB,WAAYvmB,EAAMmmB,OAAOC,QAAQpxB,IAAMgL,EAAMmmB,OAAOG,OAAOtxB,KAE7D,eAAC8T,GAAA,EAAD,CAAKqI,GAAI,EAAT,UACE,cAACtT,EAAA,EAAD,CAAYsI,OAAO,eAAejJ,UAAW3B,EAAQsqB,eAArD,0BAGA,cAACznB,EAAA,EAAD,CACEpJ,GAAG,OACH8B,KAAK,OACL8H,YAAY,qBACZP,QAAQ,WACRnB,UAAW3B,EAAQkqB,SACnBlnB,aAAa,MACbO,SAAUkB,EAAMmmB,OAAO7pB,aACvBrI,MAAO+L,EAAMmmB,OAAOhiB,OAAOrN,KAC3BnD,MACEqM,EAAMmmB,OAAOC,QAAQtvB,MAAQuvB,QAAQrmB,EAAMmmB,OAAOG,OAAOxvB,MAE3DyvB,WAAYvmB,EAAMmmB,OAAOC,QAAQtvB,MAAQkJ,EAAMmmB,OAAOG,OAAOxvB,UAGjE,eAACgS,GAAA,EAAD,CAAKqI,GAAI,EAAT,UACE,cAACtT,EAAA,EAAD,CAAYsI,OAAO,cAAcjJ,UAAW3B,EAAQsqB,eAApD,yBAGA,cAACznB,EAAA,EAAD,CACEpJ,GAAG,cACH8B,KAAK,cACL8H,YAAY,4BACZP,QAAQ,WACRnB,UAAW3B,EAAQkqB,SACnBjM,WAAS,EACTgN,KAAM,EACNjoB,aAAa,MACbO,SAAUkB,EAAMmmB,OAAO7pB,aACvBrI,MAAO+L,EAAMmmB,OAAOhiB,OAAOpN,YAC3BpD,MACEqM,EAAMmmB,OAAOC,QAAQrvB,aACrBsvB,QAAQrmB,EAAMmmB,OAAOG,OAAOvvB,aAE9BwvB,WACEvmB,EAAMmmB,OAAOC,QAAQrvB,aACrBiJ,EAAMmmB,OAAOG,OAAOvvB,oBAK5B,eAACmuB,GAAA,EAAD,WACE,cAAC7lB,EAAA,EAAD,CACEN,WAAS,EACT7B,UAAW3B,EAAQ6X,aACnBlU,QAASc,EAAMmH,YAHjB,oBAOA,cAAC9H,EAAA,EAAD,CACEN,WAAS,EACT7B,UAAW3B,EAAQ+X,UACnBzY,KAAK,SACLvI,MAAM,UACNgN,SAAUU,EAAMymB,aAAa1qB,QAC7BwD,UACES,EAAMymB,aAAa1qB,QACjB,cAACyD,EAAA,EAAD,CAAkBtC,UAAW3B,EAAQzI,OAAQ2M,KAAM,KACjD,KATR,SAYE,cAAC5B,EAAA,EAAD,CAAYX,UAAW3B,EAAQiqB,WAA/B,SACGxlB,EAAM0mB,sB,aC/ENC,GAA0BC,KAAW,CAChD5xB,GAAI4xB,KACM,sBACPC,QAAO,GACPC,QAAQ,QAAS,sCACjBnD,KACC,uBACA,wBACA,SAAC1vB,GAAD,OjDoI+B,SAAC6C,GAGpC,IADA,IAAMiwB,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,MAC/BplB,EAAQ,EAAGA,GAASolB,EAAW/kB,OAAQL,IAC9C,GAAI7K,GAAQA,EAAKgO,SAASiiB,EAAWplB,IACnC,OAAO,EAGX,OAAO,EiD5ISqlB,CAAsB/yB,MAEnC4K,SAAS,yBACZ/H,KAAM8vB,KAAW,sBAAsB/nB,SAAS,8BAGnC,SAASooB,GAAT,GAA6D,IAA1BC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,QAC9D,EAAwBvrB,oBAAS,GAAjC,mBAAOkL,EAAP,KAAaC,EAAb,KACA,EAA8CnL,mBAAS,CACrDC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,IAHX,mBAAOqrB,EAAP,KAAwBC,EAAxB,KAMM9rB,EAAUjL,KAMV6W,EAAc,WAClBJ,GAAQ,GACRof,EAAOmB,aAGHnB,EAASoB,aAAU,CACvBC,cAAe,CACbzwB,YAAa,GACbD,KAAM,GACN9B,GAAI,IAENyyB,iBAAkBd,GAClB5oB,SAAU,SAACoG,GACTujB,EAAsBvjB,MAIpBujB,EAAwB,SAACvjB,GAC7BkjB,EAAmB,2BACdD,GADa,IAEhBvrB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEX,sBAAC,8BAAAzI,EAAA,+EAEyBgH,GAAsB4sB,EAAc/iB,EAAOnP,IAFpE,YAES4B,EAFT,UAGkBA,EAAQoL,OAH1B,gBAIKqlB,EAAmB,2BACdD,GADa,IAEhBvrB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,2BAC5BC,SAAS,KARhB,iDAYqCtF,EAC5BywB,EACA/iB,EAAOrN,KACPqN,EAAOpN,YACPoN,EAAOnP,IAhBhB,QAYa2yB,EAZb,OAkBOxgB,IACAkgB,EAAmB,2BACdD,GADa,IAEhBvrB,QAAS,CAAE1I,QAAQ,EAAM2I,IAAK,+BAC9BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEXorB,EAAQQ,GAzBf,kDA2BOxgB,IACAkgB,EAAmB,2BACdD,GADa,IAEhBvrB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK0G,GAAU,KAAErP,OAAOsP,YAC/C1G,SAAS,KAhClB,0DAqCGsrB,EAAmB,2BACdD,GADa,IAEhBvrB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,KAAEtE,SAC9BuE,SAAS,KAzCd,gEAAD,IA+CF,OACE,gCACE,cAACsD,EAAA,EAAD,CACErK,GAAG,aACHuK,UAAW,qBAAK5B,IAAI,yBAAyBC,IAAI,QACjDsB,QAhFkB,WACtB6H,GAAQ,IAgFJ7J,UAAW3B,EAAQyqB,iBAJrB,SAME,cAACnoB,EAAA,EAAD,CAAYX,UAAW3B,EAAQ0qB,qBAA/B,2BAIF,eAACnB,GAAA,EAAD,CACE9vB,GAAG,SACHsJ,WAAW,EACXuW,QAAS1N,EACT,kBAAgB,0BAChBL,KAAMA,EACN5J,UAAW3B,EAAQmqB,YANrB,UAQE,eAACV,GAAA,EAAD,CACEhwB,GAAG,0BACH6f,QAAS1N,EACTygB,mBAAiB,EAHnB,UAKE,cAAC/pB,EAAA,EAAD,CAAYQ,QAAQ,KAAKnB,UAAW3B,EAAQwqB,YAA5C,yBAGCjf,EACC,cAACsD,GAAA,EAAD,CACEpV,GAAG,cACH,aAAW,QACXkK,QAASiI,EACTjK,UAAW3B,EAAQ8pB,YAJrB,SAME,cAAC,KAAD,MAEA,QAEN,cAACa,GAAD,CACElxB,GAAG,MACHmxB,OAAQA,EACRM,aAAcW,EACdjgB,YAAaA,EACbuf,YAAa,MACbpnB,UAAU,OAGb8nB,EAAgBzzB,MAAMR,QACrB,cAAC,GAAD,CAAU2I,IAAKsrB,EAAgBzzB,MAAMmI,IAAK3I,OAAQ,SAEnDi0B,EAAgBvrB,QAAQ1I,QACvB,cAAC,GAAD,CAAU2I,IAAKsrB,EAAgBvrB,QAAQC,IAAK3I,OAAQ,eChK7C,SAAS00B,GAA2B7nB,GACjD,IAAQknB,EAAsDlnB,EAAtDknB,aAAcpgB,EAAwC9G,EAAxC8G,KAAMC,EAAkC/G,EAAlC+G,QAAStT,EAAyBuM,EAAzBvM,KAAMq0B,EAAmB9nB,EAAnB8nB,eAC3C,EAAwBlsB,mBAAS,IAAjC,mBAAO9E,EAAP,KAAaixB,EAAb,KACA,EAAsCnsB,mBAAS,MAA/C,mBAAO7E,EAAP,KAAoBixB,EAApB,KACA,EAAkCpsB,mBAAS,IAA3C,mBAAO3D,EAAP,KAAkBgwB,EAAlB,KACA,EAAoDrsB,mBAAS,CAC3DC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,IAHX,mBAAOmsB,EAAP,KAA2BC,EAA3B,KAMM5sB,EAAUjL,KAEhBkX,qBAAU,WACRugB,EAAQt0B,EAAKqD,MACbkxB,EAAev0B,EAAKsD,aACpBkxB,EAAax0B,EAAKuB,MACjB,CAACvB,IAEJ,IAAM0T,EAAc,WAClBJ,GAAQ,IAGJof,EAASoB,aAAU,CACvBC,cAAe,CACbzwB,YAAcA,GAAc,GAC5BD,KAAMA,EACN9B,GAAIiD,GAENmwB,oBAAoB,EACpBX,iBAAkBd,GAClB5oB,SAAU,SAACoG,GACTkkB,EAAsBlkB,MAIpBkkB,EAAwB,SAAClkB,GAC7BgkB,EAAsB,2BACjBD,GADgB,IAEnBrsB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEX,sBAAC,4BAAAzI,EAAA,+EAEiC0E,GAC5BkvB,EACA/iB,EAAOrN,KACPqN,EAAOpN,YACPkB,GANL,OAES0vB,EAFT,OAQGxgB,IACAghB,EAAsB,2BACjBD,GADgB,IAEnBrsB,QAAS,CAAE1I,QAAQ,EAAM2I,IAAK,iCAC9BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEX+rB,EAAeH,GAflB,gDAiBGxgB,IACAghB,EAAsB,2BACjBD,GADgB,IAEnBrsB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK0G,GAAU,KAAErP,OAAOsP,YAC/C1G,SAAS,KAtBd,wDAAD,IA4BF,OACE,gCACE,eAAC+oB,GAAA,EAAD,CACExmB,WAAW,EACXuW,QAAS1N,EACT,kBAAgB,0BAChBL,KAAMA,EACN5J,UAAW3B,EAAQmqB,YALrB,UAOE,eAACV,GAAA,EAAD,CACEhwB,GAAG,0BACH6f,QAAS1N,EACTygB,mBAAiB,EAHnB,UAKE,cAAC/pB,EAAA,EAAD,CACEsI,OAAO,gBACP9H,QAAQ,KACRnB,UAAW3B,EAAQwqB,YAHrB,qCAOCjf,EACC,cAACsD,GAAA,EAAD,CACEwL,OAAO,YACP,aAAW,QACX1W,QAASiI,EACTjK,UAAW3B,EAAQ8pB,YAJrB,SAME,cAAC,KAAD,MAEA,QAEN,cAACa,GAAD,CACEC,OAAQA,EACRM,aAAcyB,EACd/gB,YAAaA,EACbuf,YAAa,SACbpnB,UAAU,OAGb4oB,EAAmBv0B,MAAMR,QACxB,cAAC,GAAD,CAAU2I,IAAKosB,EAAmBv0B,MAAMmI,IAAK3I,OAAQ,SAEtD+0B,EAAmBrsB,QAAQ1I,QAC1B,cAAC,GAAD,CAAU2I,IAAKosB,EAAmBrsB,QAAQC,IAAK3I,OAAQ,eCjHhD,SAASm1B,GAAT,GAMX,IALFjX,EAKC,EALDA,aACAkX,EAIC,EAJDA,kBACAC,EAGC,EAHDA,cACA/0B,EAEC,EAFDA,KACA6B,EACC,EADDA,OAEA,EAAgCsG,mBAAS,IAAzC,mBAAOzD,EAAP,KAAiBswB,EAAjB,KACA,EAA8B7sB,mBAAS,IAAvC,mBAAOpE,EAAP,KAAgBkxB,EAAhB,KACA,EAA8B9sB,oBAAS,GAAvC,mBAAOG,EAAP,KAAgB4sB,EAAhB,KACA,EAAsC/sB,oBAAS,GAA/C,mBAAOgtB,EAAP,KAAoBC,EAApB,KACA,EAAkCjtB,oBAAS,GAA3C,mBAAOktB,EAAP,KAAkBC,EAAlB,KACA,EAAsCntB,mBAAS,IAA/C,mBAAOotB,EAAP,KAAoBC,EAApB,KACA,EAAkCrtB,mBAAS,IAA3C,mBAAO3D,EAAP,KAAkBgwB,EAAlB,KACA,EAA4CrsB,mBAAS,IAArD,mBAAOstB,EAAP,KAAuBC,EAAvB,KACA,EAAoCvtB,mBAAS,GAA7C,mBAAOwR,EAAP,KAAmBgc,EAAnB,KACA,EAAgCxtB,mBAAS,IAAzC,mBAAOytB,GAAP,KAAiBC,GAAjB,KACA,GAAwC1tB,mBAAS,IAAjD,qBAAO2tB,GAAP,MAAqBC,GAArB,MACA,GAAoC5tB,mBAAS,GAA7C,qBAAO6tB,GAAP,MAAmBC,GAAnB,MACMluB,GAAUC,cAYhB+L,qBAAU,WACRkiB,GAAc,GACdC,GAAcr0B,EAAQ,GAAI,MAEzB,CAAC7B,EAAMy1B,IAEV1hB,qBAAU,WACJ6J,EAAarP,QACfymB,EAAYpX,KAEb,CAACA,IAEJ7J,qBAAU,WACR+gB,EAAkBpwB,KAEjB,CAACA,IAKJ,IAAMwxB,GAAgB,SAACzC,EAAc3yB,EAAMwB,GACzC4yB,GAAW,GACXF,EAAY,IACZ,sBAAC,oCAAAn1B,EAAA,+EAEqC+B,EAAY6xB,EAAc3yB,EAAMwB,GAFrE,cAES6zB,EAFT,QAG4Bn2B,KAAKuO,SAC5B2mB,GAAW,GACXD,EAAW,8BAEbU,EAAcQ,EAAoBh0B,YAClC4zB,GAAgBI,EAAoB7zB,MACpCuzB,GAAYM,EAAoBr1B,MAC1Bs1B,EAAe,GACfC,EAAc,GAChBC,EAAkB,GACtBH,EAAoBn2B,KAAKwN,KAAI,SAACrK,EAAS+K,GAKrC,OAJAooB,EAAkBnzB,GACFX,QAAUgM,GAAWrL,EAAQX,SAC7C4zB,EAAa7sB,KAAK+sB,GAClBD,EAAY9sB,KAAK+sB,EAAgB/0B,KAC1B,KAlBZ,UAoBmCkF,GAC9B5E,EACAw0B,GAtBL,QAoBSE,EApBT,OAwBGF,EAAYG,SAAQ,SAACj1B,EAAIk1B,GACvBL,EAAaK,GAAb,UACEF,EAAkBh1B,IAAOg1B,EAAkBh1B,GAAIm1B,aAEnD1B,EAAYoB,GACZ71B,EAAgB,iBAAkB61B,GAClClB,GAAW,GA9Bd,kDAgCGA,GAAW,GACXD,EAAW,6BACX10B,EAAgB,iBAAkB,IAlCrC,yDAAD,IAyDI6Y,GAAU,SAACzF,EAAO1Q,GACtB8E,GAAQwB,KAAK,CACXkD,SAAU,qBACVC,MAAO,CAAEvJ,QAASF,MAuCtB,OACE,qCACE,cAACiY,GAAD,CACElb,KAAM0E,EACNyW,UArIY,CAChB,CAAE5Z,GAAI,KAAM8a,UAAW,OAAQlD,MAAO,UAAWrM,QAAQ,GACzD,CAAEvL,GAAI,cAAe8a,UAAW,OAAQlD,MAAO,eAC/C,CAAE5X,GAAI,YAAa8a,UAAW,OAAQlD,MAAO,aAC7C,CAAE5X,GAAI,QAAS8a,UAAW,OAAQ/E,OAAO,EAAMpW,MAAM,IAkIjDkc,eA9DiB,SAACzJ,EAAO6E,EAAKme,GAC7BA,GAAYvd,GAAQzF,EAAO6E,EAAIjX,KA8DhCwC,QAASA,EACTyV,QAzDU,SAAC7F,EAAO6E,GACtB8c,GAAa,GACbE,EAAehd,IAwDXiB,UAxCY,SAAC9F,EAAOijB,GACxBxB,GAAe,GACfZ,EAAaoC,IAuCTxd,QAASA,GACTyD,WApBa,SAAC1J,GACd6iB,GAAa7iB,GACf8iB,GAAc9iB,GACd+iB,GAAcr0B,EAAQ+zB,GAAU,MAEhCK,GAAcD,GAAa,GAC3BE,GAAcr0B,EAAQ,GAAIi0B,MAexBnc,WAAYA,EACZ8B,OAAQua,KAET1tB,EACC,cAACoB,EAAA,EAAD,CAAME,QAAQ,SAASD,WAAS,EAAhC,SACE,cAACoC,EAAA,EAAD,MAEA,KACJ,cAAC,GAAD,CACExK,GAAG,SACHuX,MAAM,gBACNzF,KAAM8hB,EACN7hB,QAAS8hB,EACThE,UAhDgB,WACpB2D,EAAcvwB,IAgDVktB,cAAe,iBANjB,8CAUA,cAAC0C,GAAD,CACE/gB,KAAMgiB,EACN/hB,QAASgiB,EACT7B,aAAc5xB,EACd7B,KAAMu1B,EACNlB,eAnDiB,SAACwC,GACtBnB,EAAkBmB,SCtIf,SAASC,KACd,MAAwB3uB,oBAAS,GAAjC,mBAAOkL,EAAP,KAAaC,EAAb,KACA,EAAsCnL,mBAAS,IAA/C,mBAAOlF,EAAP,KAAoB8zB,EAApB,KACA,EAA0B5uB,oBAAS,GAAnC,mBAAOjI,EAAP,KAAc82B,EAAd,KAEMjvB,EAAUC,cAEVF,EAAUjL,KAIV6W,EAAc,WAClBsjB,GAAS,GACT1jB,GAAQ,IAcV,OACE,gCACE,cAACwE,GAAD,CAAcgB,MAAM,iHAApB,SACE,cAAClN,EAAA,EAAD,CACErK,GAAG,oBACHkK,QAxBgB,WACtB6H,GAAQ,IAwBF7J,UAAW3B,EAAQgqB,kBACnBhmB,UAAW,qBAAK5B,IAAI,kBAAkBC,IAAI,KAJ5C,SAME,cAACC,EAAA,EAAD,CAAYX,UAAW3B,EAAQiqB,WAA/B,8BAGJ,eAACV,GAAA,EAAD,CACE9vB,GAAG,SACHsJ,WAAW,EACXuW,QAAS1N,EACT,kBAAgB,0BAChBL,KAAMA,EALR,UAOE,eAACke,GAAA,EAAD,CACEhwB,GAAG,0BACH6f,QAAS1N,EACTygB,mBAAiB,EAHnB,UAKE,cAAC/pB,EAAA,EAAD,CAAYQ,QAAQ,KAAKnB,UAAW3B,EAAQwqB,YAA5C,0BAGCjf,EACC,cAACsD,GAAA,EAAD,CACE,aAAW,QACXlL,QAASiI,EACTjK,UAAW3B,EAAQ8pB,YAHrB,SAKE,cAAC,KAAD,MAEA,QAEN,eAACJ,GAAA,EAAD,WACE,cAACpnB,EAAA,EAAD,CAAYsI,OAAO,YAAYjJ,UAAW3B,EAAQsqB,eAAlD,wBAGA,cAACznB,EAAA,EAAD,CACEpJ,GAAG,YACH4J,YAAY,mBACZP,QAAQ,WACRnB,UAAW3B,EAAQkqB,SACnB3mB,SAAU,SAACvC,GAAD,OAAOiuB,EAAejuB,EAAEC,OAAOvI,QACzCN,MAAOA,EACP4yB,WAAY5yB,EAAQ,sBAAwB,QAGhD,eAACuxB,GAAA,EAAD,WACE,cAAC7lB,EAAA,EAAD,CACErK,GAAG,eACHkK,QAASiI,EACTjK,UAAW3B,EAAQ6X,aAHrB,oBAOA,cAAC/T,EAAA,EAAD,CACErK,GAAG,aACHkI,UAAW3B,EAAQ+X,UACnBpU,QAzEU,WAClB,IAAKxI,EAEH,OADA+zB,GAAS,IACF,EAETjvB,EAAQwB,KAAK,CACXkD,SAAU,qBACVC,MAAO,CAAEvJ,QAASF,MAmEZpE,MAAM,UAJR,SAME,cAACuL,EAAA,EAAD,CAAYX,UAAW3B,EAAQiqB,WAA/B,qCCzGZ,IAgBekF,GAhBG,WAChB,IAAMzY,EAAczQ,KACdpK,IrD0OFlD,aAAaW,QAAQ,SAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,SqDzOzC,OAAIod,GAAe7a,EAOV,CAAE9B,OANM,IAAIq1B,KAAO,CACxBC,aAAc3Y,EAAYC,cAC1B2Y,UAAW5Y,EAAY6Y,WACvBC,WAAY9Y,EAAYqD,YACxBle,KAAMA,KAIH,ICkIM4zB,OAtIf,WACE,MAAwCpvB,mBAAS,IAAjD,mBAAOyV,EAAP,KAAqB0D,EAArB,KACA,EAAsCnZ,mBAAS,IAA/C,mBAAOqvB,EAAP,KAAoBC,EAApB,KACA,EAAmBtvB,mBAAS,IAArBqY,EAAP,oBACA,EAAwCrY,mBAAS,CAC/CC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,MAF/B,mBAAO2qB,EAAP,KAAqB0E,EAArB,KAIQ71B,EAAWo1B,KAAXp1B,OAsER,OACE,qCACE,cAACmgB,GAAA,EAAD,CAAQlJ,MAAM,aACd,eAACpP,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAAvC,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAf,SACE,cAACsL,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAClL,EAAA,EAAD,CAAYsI,OAAO,gBAAgB9H,QAAQ,KAA3C,0BAKJ,cAAClB,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAf,SACE,eAACsL,GAAA,EAAD,CAAK1X,QAAQ,OAAOshB,eAAe,WAAnC,UACE,cAAC5J,GAAA,EAAD,CAAKoI,GAAI,EAAT,SACE,cAAC8C,GAAD,CACEhf,GAAG,SACHif,SAAUA,EACVG,cArFe,SAACgB,GAC5B+V,EAAgB,2BACX1E,GADU,IAEb5qB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAE/B,sBAAC,gCAAAxI,EAAA,+EAE8B+F,GAAiB/D,EAAQ8f,GAFvD,OAESC,EAFT,OAGSwU,EAAe,GACjBE,EAAkB,GACjB1U,EAAarT,QAChBmpB,EAAgB,2BACX1E,GADU,IAEb5qB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,wBAGhCuZ,EAAapU,KAAI,SAACtM,EAAMgN,GAItB,OAHAooB,EAAkBp1B,GACFsB,QAAUgM,GAAWtN,EAAKsB,SAC1C4zB,EAAa7sB,KAAK+sB,IACX,KAEThV,EAAgB8U,GAlBnB,kDAoBGsB,EAAgB,2BACX1E,GADU,IAEb5qB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,+BAvBjC,yDAAD,IAgFYuY,aApDc,WAC1BU,ItDmCE7gB,aAAaW,QAAQ,mBAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,qBsDgB3B+J,YAAa,8BAGjB,cAACkK,GAAA,EAAD,CAAKoI,GAAI,EAAT,SACE,cAAC+V,GAAD,CACEC,aAAc5xB,EACd6xB,QAnDS,SAACiE,GACtBF,EAAeE,QAqDP,cAACtiB,GAAA,EAAD,CAAKoI,GAAI,EAAT,SACE,cAACqZ,GAAD,cAKR,uBACA,cAACptB,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAzB,SACE,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAAC+qB,GAAD,CACEjX,aAAcA,EACdkX,kBArEgB,SAAC8C,GACzBtW,EAAgBsW,IAqER7C,cA9DY,SAACvwB,GACjBA,GACF,sBAAC,sBAAA3E,EAAA,+EAESmE,GAAsBnC,EAAQ2C,GAFvC,OAGGizB,EAAe,IACfC,EAAgB,2BACX1E,GADU,IAEb5qB,QAAS,CAAE1I,QAAQ,EAAM2I,IAAK,gCAC9BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAPlC,gDAUGqvB,EAAgB,2BACX1E,GADU,IAEb5qB,QAAS,CAAE1I,QAAQ,EAAM2I,IAAK0G,GAAU,KAAErP,OAAOsP,YACjD9O,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAblC,wDAAD,IA6DMrI,KAAMw3B,EACN31B,OAAQA,QAIbmxB,EAAa9yB,MAAMR,QAClB,cAAC,GAAD,CAAU2I,IAAK2qB,EAAa9yB,MAAMmI,IAAK3I,OAAQ,SAEhDszB,EAAa5qB,QAAQ1I,QACpB,cAAC,GAAD,CAAU2I,IAAK2qB,EAAa5qB,QAAQC,IAAK3I,OAAQ,gBC/H1Cm4B,GATE,WACf,OACE,mCACE,cAAC,GAAD,UACE,cAAC,GAAD,SCNKh7B,GAAYC,aAAW,SAACkb,GAAD,MAAY,CAC9Cta,KAAM,CACJiY,SAAU,GAEZmiB,QAAS,CACP96B,QAASgb,EAAMzN,QAAQ,GACvBnN,QAAS,EACTD,aAAc,OACd4Z,OAAQ,oBACR7Z,WAAY,sCACZ0Y,UAAW,wBACX1X,OAAQ,QAEV65B,QAAS,CACP/6B,QAASgb,EAAMzN,QAAQ,GACvBnN,QAAS,EACTD,aAAc,OACd4Z,OAAQ,oBACR7Z,WAAY,sCACZ0Y,UAAW,wBACX1X,OAAQ,QAEV85B,SAAU,CACRr5B,UAAW,OACXvB,QAAS,EACTyB,MAAO,UACPG,cAAe,YACfN,KAAM,iJACNE,cAAe,sCAEjB8R,OAAQ,CACN7R,MAAO,UACPF,UAAW,OACXvB,QAAS,EACTsB,KAAM,gLAERoO,OAAQ,CACN5P,WAAY,UACZ2B,MAAO,UACP1B,aAAc,OAEhB+yB,KAAM,CACJ5d,KAAM,YAER+E,QAAS,CACP3Y,KAAM,+KACNE,cAAe,qCACfD,UAAW,OACXpB,SAAU,OACVsB,MAAO,UACPzB,QAAS,OC6GE66B,GA/IM,WACnB,IAAMnwB,EAAUjL,KAChB,EAAsCsL,mBAAS,IAA/C,mBAAO+vB,EAAP,KAAoBC,EAApB,KACA,EAAkDhwB,oBAAS,GAA3D,mBAAOiwB,EAAP,KAA0BC,EAA1B,KAEAtkB,qBAAU,WACRokB,EAAepqB,QACd,IASH,OACE,qCACE,cAACiU,GAAA,EAAD,CAAQlJ,MAAM,aACd,cAACpP,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAAvC,SACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAClL,EAAA,EAAD,CAAYsI,OAAO,kBAAkB9H,QAAQ,KAA7C,4BAMN,uBACA,qBAAKnB,UAAW3B,EAAQpK,KAAxB,SACE,eAACgM,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAzB,UACE,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,eAACiL,GAAA,EAAD,CAAOtL,UAAW3B,EAAQgwB,QAA1B,UACE,eAACpuB,EAAA,EAAD,CAAME,QAAQ,aAAaD,WAAS,EAApC,UACE,cAAC0L,GAAA,EAAD,CAAKmI,GAAI,EAAT,SACE,cAAC7K,GAAA,EAAD,CAAQlJ,UAAW3B,EAAQgF,OAAQlC,QAAQ,SAA3C,SACIstB,EAAY70B,KAEV+K,GAAuB8pB,EAAY70B,MADnC,OAIR,eAACqG,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,GAAIE,GAAI,EAA9B,UACE,uBAAOP,UAAW3B,EAAQ4I,OAA1B,SACIwnB,EAAY70B,KAAY60B,EAAY70B,KAAjB,KAEvB,uBACA,uBAAOoG,UAAW3B,EAAQuP,QAA1B,SACI6gB,EAAY7gB,QAAe6gB,EAAY7gB,QAAjB,WAI9B,uBACA,cAAC7B,GAAA,EAAD,IACA,uBACA,eAAC9L,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAAvC,UACE,eAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACK,EAAA,EAAD,CACEsI,OAAO,gBACPjJ,UAAW3B,EAAQkwB,SAFrB,2BAMA,cAAC5tB,EAAA,EAAD,CAAYX,UAAW3B,EAAQ4I,OAA/B,SACIwnB,EAAY5Z,SAAgB4Z,EAAY5Z,SAAjB,QAG7B,eAAC5U,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACK,EAAA,EAAD,CAAYsI,OAAO,aAAajJ,UAAW3B,EAAQkwB,SAAnD,wBAGA,cAAC5tB,EAAA,EAAD,CAAYX,UAAW3B,EAAQ4I,OAA/B,SACIwnB,EAAY7Z,QAAe6Z,EAAY7Z,QAAjB,gBAMlC,cAAC3U,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,eAACiL,GAAA,EAAD,CAAOtL,UAAW3B,EAAQiwB,QAA1B,UACE,cAAC3tB,EAAA,EAAD,CAAYsI,OAAO,cAAc9H,QAAQ,KAAzC,yBAGA,uBACA,cAAC4K,GAAA,EAAD,IACA,uBACA,eAAC9L,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAAvC,UACE,eAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACK,EAAA,EAAD,CACEsI,OAAO,cACP9H,QAAQ,KACRnB,UAAW3B,EAAQkwB,SAHrB,yBAOA,cAAC5tB,EAAA,EAAD,CAAYX,UAAW3B,EAAQ4I,OAA/B,SACIwnB,EAAYrW,YAAmBqW,EAAYrW,YAAjB,KAE9B,uBACA,eAACzX,EAAA,EAAD,CAAYsI,OAAO,aAAajJ,UAAW3B,EAAQkwB,SAAnD,uBAEE,cAACrhB,GAAA,EAAD,CACEpV,GAAG,eACHkI,UAAW3B,EAAQkwB,SACnBvsB,QA3FQ,WAC1B4sB,GAAqB,SAAC/1B,GAAD,OAAWA,MAuFhB,SAKG81B,EACC,cAAC1sB,EAAA,EAAD,IAEA,cAACF,EAAA,EAAD,SAKN,cAACpB,EAAA,EAAD,CAAY7I,GAAG,eAAekI,UAAW3B,EAAQ4I,OAAjD,SACG0nB,EACGF,EAAYb,WACZa,EAAYb,YACZ,IAAI/L,OAAO4M,EAAYb,WAAW9oB,aAG1C,eAAC7E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACK,EAAA,EAAD,CACEQ,QAAQ,KACR8H,OAAO,gBACPjJ,UAAW3B,EAAQkwB,SAHrB,2BAOA,cAAC5tB,EAAA,EAAD,CAAYX,UAAW3B,EAAQ4I,OAA/B,SACIwnB,EAAYzZ,cAEVyZ,EAAYzZ,cADZ,yBCvIT6Z,GATE,WACf,OACE,mCACE,cAAC,GAAD,UACE,cAAC,GAAD,SCGO,SAASC,GAAYhsB,GAClC,IAAMzE,EAAUjL,KAChB,OACE,uBAAMyN,SAAUiC,EAAMmmB,OAAO1pB,aAA7B,UACE,eAACwoB,GAAA,EAAD,WACE,cAACpnB,EAAA,EAAD,CAAYsI,OAAO,UAAUjJ,UAAW3B,EAAQsqB,eAAhD,qBAGA,cAACznB,EAAA,EAAD,CACEpJ,GAAG,UACH8B,KAAK,UACL8H,YAAY,gBACZP,QAAQ,WACRiB,SAAUU,EAAMV,SAChBpC,UAAW3B,EAAQkqB,SACnBlnB,aAAa,MACbO,SAAUkB,EAAMmmB,OAAO7pB,aACvBrI,MAAO+L,EAAMmmB,OAAOhiB,OAAO8nB,QAC3Bt4B,MACEqM,EAAMmmB,OAAOC,QAAQ6F,SAAW5F,QAAQrmB,EAAMmmB,OAAOG,OAAO2F,SAE9D1F,WACEvmB,EAAMmmB,OAAOC,QAAQ6F,SAAWjsB,EAAMmmB,OAAOG,OAAO2F,UAGxD,cAACpuB,EAAA,EAAD,CAAYsI,OAAO,YAAYjJ,UAAW3B,EAAQsqB,eAAlD,uBAGA,cAACznB,EAAA,EAAD,CACEpJ,GAAG,OACH8B,KAAK,OACL8H,YAAY,kBACZP,QAAQ,WACRnB,UAAW3B,EAAQkqB,SACnBlnB,aAAa,MACbO,SAAUkB,EAAMmmB,OAAO7pB,aACvBrI,MAAO+L,EAAMmmB,OAAOhiB,OAAOrN,KAC3BnD,MAAOqM,EAAMmmB,OAAOC,QAAQtvB,MAAQuvB,QAAQrmB,EAAMmmB,OAAOG,OAAOxvB,MAChEyvB,WAAYvmB,EAAMmmB,OAAOC,QAAQtvB,MAAQkJ,EAAMmmB,OAAOG,OAAOxvB,OAE/D,cAAC+G,EAAA,EAAD,CAAYsI,OAAO,QAAQjJ,UAAW3B,EAAQsqB,eAA9C,2BAGA,cAACznB,EAAA,EAAD,CACEpJ,GAAG,QACH8B,KAAK,QACL8H,YAAY,sBACZP,QAAQ,WACRnB,UAAW3B,EAAQkqB,SACnBlnB,aAAa,MACbO,SAAUkB,EAAMmmB,OAAO7pB,aACvBrI,MAAO+L,EAAMmmB,OAAOhiB,OAAOhN,MAC3BxD,MACEqM,EAAMmmB,OAAOC,QAAQjvB,OAASkvB,QAAQrmB,EAAMmmB,OAAOG,OAAOnvB,OAE5DovB,WAAYvmB,EAAMmmB,OAAOC,QAAQjvB,OAAS6I,EAAMmmB,OAAOG,OAAOnvB,QAEhE,cAAC0G,EAAA,EAAD,CAAYsI,OAAO,cAAcjJ,UAAW3B,EAAQsqB,eAApD,yBAGA,cAACznB,EAAA,EAAD,CACEpJ,GAAG,cACH8B,KAAK,cACL8H,YAAY,oBACZP,QAAQ,WACRnB,UAAW3B,EAAQkqB,SACnBlnB,aAAa,MACbO,SAAUkB,EAAMmmB,OAAO7pB,aACvBrI,MAAO+L,EAAMmmB,OAAOhiB,OAAO+nB,YAC3Bv4B,MACEqM,EAAMmmB,OAAOC,QAAQ8F,aACrB7F,QAAQrmB,EAAMmmB,OAAOG,OAAO4F,aAE9B3F,WACEvmB,EAAMmmB,OAAOC,QAAQ8F,aAAelsB,EAAMmmB,OAAOG,OAAO4F,cAG5D,0BAEF,eAAChH,GAAA,EAAD,WACE,cAAC7lB,EAAA,EAAD,CACEN,WAAS,EACT7B,UAAW3B,EAAQ6X,aACnBlU,QAASc,EAAMmH,YAHjB,oBAQA,cAAC9H,EAAA,EAAD,CACEN,WAAS,EACT7B,UAAW3B,EAAQ+X,UACnBzY,KAAK,SACLvI,MAAM,UACNgN,SAAUU,EAAMmsB,UAAUpwB,QAC1BwD,UACES,EAAMmsB,UAAUpwB,QACd,cAACyD,EAAA,EAAD,CAAkBtC,UAAW3B,EAAQzI,OAAQ2M,KAAM,KACjD,KATR,SAYE,cAAC5B,EAAA,EAAD,CAAYX,UAAW3B,EAAQiqB,WAA/B,SACGxlB,EAAM0mB,sBC/FZ,IAAM0F,GAAuBxF,KAAW,CAC7CzvB,MAAOyvB,KAAW,oBAAoBzvB,MAAM,uBAC5CL,KAAM8vB,KAAW,mBAAmB/nB,SAAS,yBAC7CotB,QAASrF,KACC,sBACP/nB,SAAS,uBACTgc,IAAI,EAAG,4BACPG,IAAI,GAAI,6BACXkR,YAAatF,MAAS,SAAC3yB,GAAD,MACpB,QAAQ0vB,KAAK1vB,GACT2yB,OAEGE,QACC,qGACA,4BAEJF,OAAahjB,IAAI,0BAIV,SAASyoB,GAAT,GAA0D,IAA1BnF,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,QAC3D,EAAwBvrB,oBAAS,GAAjC,mBAAOkL,EAAP,KAAaC,EAAb,KACA,EAAwCnL,mBAAS,CAC/CC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,IAHX,mBAAOuwB,EAAP,KAAqBC,EAArB,KAKMhxB,EAAUjL,KAMV61B,EAASoB,aAAU,CACvBC,cAAe,CACbrwB,MAAO,GACPL,KAAM,GACNm1B,QAAS,GACTC,YAAa,IAEfzE,iBAAkB2E,GAClBhE,oBAAoB,EACpBrqB,SAAU,SAACoG,GACTqoB,EAAmBroB,MAIjBgD,EAAc,WAClBJ,GAAQ,GACRof,EAAOmB,aAGHkF,EAAqB,SAACroB,GAC1BooB,EAAgB,2BACXD,GADU,IAEbzwB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEX,sBAAC,8BAAAzI,EAAA,+EAEsBiH,GAAqB2sB,EAAc/iB,EAAO8nB,SAFhE,YAESt3B,EAFT,UAGeA,EAAKqN,OAHpB,gBAIKuqB,EAAgB,2BACXD,GADU,IAEbzwB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,2BAC5BC,SAAS,KARhB,iDAY8B9E,EACrBiwB,EACA/iB,EAAOrN,KACPqN,EAAOhN,MACPgN,EAAO8nB,QACP9nB,EAAO+nB,aAjBhB,QAYaO,EAZb,OAmBOtlB,IACAolB,EAAgB,2BACXD,GADU,IAEbzwB,QAAS,CAAE1I,QAAQ,EAAM2I,IAAK,2BAC9BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEXorB,EAAQsF,GA1Bf,kDA4BOtlB,IACAolB,EAAgB,2BACXD,GADU,IAEbzwB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK0G,GAAU,KAAErP,OAAOsP,YAC/C1G,SAAS,KAjClB,0DAsCGwwB,EAAgB,2BACXD,GADU,IAEbzwB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,KAAEtE,SAC9BuE,SAAS,KA1Cd,gEAAD,IAgDF,OACE,gCACE,cAACsD,EAAA,EAAD,CAAQ8G,OAAO,YACbjJ,UAAW3B,EAAQgqB,kBACnBhmB,UAAW,qBAAK5B,IAAI,kBAAkBC,IAAI,QAC1CsB,QAnFkB,WACtB6H,GAAQ,IA+EN,SAKE,cAAClJ,EAAA,EAAD,CAAYsI,OAAO,WAAWjJ,UAAW3B,EAAQiqB,WAAjD,wBAEF,eAACV,GAAA,EAAD,CACExmB,WAAW,EACXuW,QAAS1N,EACT,kBAAgB,0BAChBL,KAAMA,EACN5J,UAAW3B,EAAQmqB,YALrB,UAOE,eAACV,GAAA,EAAD,CACEhwB,GAAG,0BACH6f,QAAS1N,EACTygB,mBAAiB,EAHnB,UAKE,cAAC/pB,EAAA,EAAD,CAAYQ,QAAQ,KAAKnB,UAAW3B,EAAQwqB,YAA5C,sBAGCjf,EACC,cAACsD,GAAA,EAAD,CACE,aAAW,QACXlL,QAASiI,EACTjK,UAAW3B,EAAQ8pB,YAHrB,SAKE,cAAC,KAAD,MAEA,QAEN,cAAC2G,GAAD,CACE7F,OAAQA,EACRgG,UAAWG,EACXnlB,YAAaA,EACbuf,YAAa,MACbpnB,UAAU,OAGbgtB,EAAa34B,MAAMR,QAClB,cAAC,GAAD,CAAU2I,IAAKwwB,EAAa34B,MAAMmI,IAAK3I,OAAQ,SAEhDm5B,EAAazwB,QAAQ1I,QACpB,cAAC,GAAD,CAAU2I,IAAKwwB,EAAazwB,QAAQC,IAAK3I,OAAQ,eC/J1C,SAASu5B,GAAwB1sB,GAC9C,IAAQknB,EAAiDlnB,EAAjDknB,aAAcpgB,EAAmC9G,EAAnC8G,KAAMC,EAA6B/G,EAA7B+G,QAAStT,EAAoBuM,EAApBvM,KAAMk5B,EAAc3sB,EAAd2sB,UAC3C,EAAgC/wB,mBAAS,IAAzC,mBAAO1E,EAAP,KAAiB01B,EAAjB,KACA,EAA0BhxB,mBAAS,MAAnC,mBAAOzE,EAAP,KAAc01B,EAAd,KACA,EAAwBjxB,mBAAS,IAAjC,mBAAOkxB,EAAP,KAAaC,EAAb,KACA,EAAoCnxB,mBAAS,MAA7C,mBAAOvE,EAAP,KAAmB21B,EAAnB,KACA,EAA8CpxB,mBAAS,CACrDC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,IAHX,mBAAOkxB,EAAP,KAAwBC,EAAxB,KAKM3xB,EAAUjL,KAEhBkX,qBAAU,WACRolB,EAAYn5B,EAAKqD,MACjB+1B,EAASp5B,EAAK0D,OACd41B,EAAQt5B,EAAKuB,IACbg4B,EAAcv5B,EAAK4D,cAClB,CAAC5D,IAEJ,IAAM0T,EAAc,WAClBJ,GAAQ,IAGJof,EAASoB,aAAU,CACvBC,cAAe,CACbrwB,MAAQA,GAAQ,GAChBL,KAAMI,EACN+0B,QAASa,EACTZ,YAAc70B,GAAa,IAE7B+wB,oBAAoB,EACpBX,iBAAkB2E,GAClBruB,SAAU,SAACoG,GACTgpB,EAAmBhpB,MAIjBgpB,EAAqB,SAAChpB,GAC1B+oB,EAAmB,2BACdD,GADa,IAEhBpxB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEX,sBAAC,4BAAAzI,EAAA,+EAE8ByE,GACzBmvB,EACA/iB,EAAOrN,KACPqN,EAAOhN,MACPgN,EAAO8nB,QACP9nB,EAAO+nB,aAPZ,OAES7wB,EAFT,OASG8L,IACA+lB,EAAmB,2BACdD,GADa,IAEhBpxB,QAAS,CAAE1I,QAAQ,EAAM2I,IAAK,6BAC9BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEX4wB,EAAUtxB,GAhBb,gDAkBG8L,IACA+lB,EAAmB,2BACdD,GADa,IAEhBpxB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK0G,GAAU,KAAErP,OAAOsP,YAC/C1G,SAAS,KAvBd,wDAAD,IA6BF,OACE,gCACE,eAAC+oB,GAAA,EAAD,CACExmB,WAAW,EACXuW,QAAS1N,EACT,kBAAgB,0BAChBL,KAAMA,EACN5J,UAAW3B,EAAQmqB,YALrB,UAOE,eAACV,GAAA,EAAD,CACEhwB,GAAG,0BACH6f,QAAS1N,EACTygB,mBAAiB,EAHnB,UAKE,cAAC/pB,EAAA,EAAD,CAAYQ,QAAQ,KAAKnB,UAAW3B,EAAQwqB,YAA5C,kCAGCjf,EACC,cAACsD,GAAA,EAAD,CACE,aAAW,QACXlL,QAASiI,EACTjK,UAAW3B,EAAQ8pB,YAHrB,SAKE,cAAC,KAAD,MAEA,QAEN,cAAC2G,GAAD,CACE7F,OAAQA,EACRgG,UAAWc,EACX9lB,YAAaA,EACbuf,YAAa,SACbpnB,UAAU,OAGb2tB,EAAgBt5B,MAAMR,QACrB,cAAC,GAAD,CAAU2I,IAAKmxB,EAAgBt5B,MAAMmI,IAAK3I,OAAQ,SAEnD85B,EAAgBpxB,QAAQ1I,QACvB,cAAC,GAAD,CAAU2I,IAAKmxB,EAAgBpxB,QAAQC,IAAK3I,OAAQ,eCpG5D,IAAMs0B,GAAmBb,KAAW,CAClCphB,OAAQohB,OAAa/nB,SAAS,wBAGjB,SAASuuB,GAASptB,GAC/B,IAAQ1K,EAAmD0K,EAAnD1K,OAAQwR,EAA2C9G,EAA3C8G,KAAMC,EAAqC/G,EAArC+G,QAAS3P,EAA4B4I,EAA5B5I,KAAMu1B,EAAsB3sB,EAAtB2sB,UAAW/xB,EAAWoF,EAAXpF,OAChD,EAA4BgB,mBAAS,IAArC,mBAAOpB,EAAP,KAAe6yB,EAAf,KACA,EAAkCzxB,mBAAS,CACzCC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,IAHX,mBAAOuxB,EAAP,KAAkBC,EAAlB,KAKMhyB,EAAUjL,KACVk9B,EAAiBlsB,KACjBmsB,EAAY,IAAIrrB,KAChBsrB,EAAiBt2B,EAAKgE,QAAU,GAEtCoM,qBAAU,WACR6lB,EAAUj2B,EAAKpC,MACd,CAACoC,IAEJ,IAAM+P,EAAc,WAClBgf,EAAOmB,YACPvgB,GAAQ,IAGJof,EAASoB,aAAU,CACvBC,cAAe,CACbhiB,OAAQ,IAEV4iB,oBAAoB,EACpBX,iBAAkBA,GAClB1pB,SAAU,SAACoG,GACTsI,EAAStI,MAIPsI,EAAW,SAACtI,GAChBopB,EAAa,2BACRD,GADO,IAEVzxB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEX2xB,EAAeloB,OAASrB,EAAOqB,OAC/BkoB,EAAe3f,UAAYyf,GAAkBA,EAAer2B,MAC5Du2B,EAAe1f,UAAYyf,EAC3BC,EAAevhB,KAAkB,SAAXvR,EACtB,sBAAC,4BAAAtH,EAAA,+EAE8B4H,GACzB5F,EACAkF,EACAkzB,GALL,OAESryB,EAFT,OAOG8L,IACAomB,EAAa,2BACRD,GADO,IAEVzxB,QAAS,CACP1I,QAAQ,EACR2I,IAAI,QAAD,OAAU0H,GAAsB5I,GAAhC,sBAELjH,MAAO,CAAER,QAAQ,EAAO2I,IAAK,IAC7BC,SAAS,KAEX4wB,EAAUtxB,GAjBb,gDAmBG8L,IACAomB,EAAa,2BACRD,GADO,IAEVzxB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK0G,GAAU,KAAErP,OAAOsP,YAC/C1G,SAAS,KAxBd,wDAAD,IA8BF,OACE,qCACE,eAAC+oB,GAAA,EAAD,CACExmB,WAAW,EACXuW,QAAS1N,EACT,kBAAgB,0BAChBL,KAAMA,EACN5J,UAAW3B,EAAQmqB,YALrB,UAOE,eAACV,GAAA,EAAD,CACEhwB,GAAG,0BACH6f,QAAS1N,EACTygB,mBAAiB,EAHnB,UAKE,eAAC/pB,EAAA,EAAD,CAAYQ,QAAQ,KAAKnB,UAAW3B,EAAQwqB,YAA5C,UACGviB,GAAsB5I,GADzB,WAGA,cAACwP,GAAA,EAAD,CACE,aAAW,QACXlL,QAASiI,EACTjK,UAAW3B,EAAQ8pB,YAHrB,SAKE,cAAC,KAAD,SAGJ,uBAAMtnB,SAAUooB,EAAO1pB,aAAvB,UACE,eAACwoB,GAAA,EAAD,WACE,cAACpnB,EAAA,EAAD,CAAYsI,OAAO,SAASjJ,UAAW3B,EAAQsqB,eAA/C,oBAGA,cAACznB,EAAA,EAAD,CACEpJ,GAAG,SACH8B,KAAK,SACL8H,YAAY,aACZP,QAAQ,WACRnB,UAAW3B,EAAQkqB,SACnBlnB,aAAa,MACbO,SAAUqnB,EAAO7pB,aACjBrI,MAAOkyB,EAAOhiB,OAAOqB,OACrB7R,MAAOwyB,EAAOC,QAAQ5gB,QAAU6gB,QAAQF,EAAOG,OAAO9gB,QACtD+gB,WAAYJ,EAAOC,QAAQ5gB,QAAU2gB,EAAOG,OAAO9gB,SAGrD,0BAEF,eAAC0f,GAAA,EAAD,WACE,cAAC7lB,EAAA,EAAD,CACErK,GAAG,SACH+J,WAAS,EACT7B,UAAW3B,EAAQ6X,aACnBlU,QAASiI,EAJX,oBASA,cAAC9H,EAAA,EAAD,CACErK,GAAG,SACH+J,WAAS,EACT7B,UAAW3B,EAAQ+X,UACnBzY,KAAK,SACLvI,MAAM,UACNgN,SAAUguB,EAAUvxB,QACpBwD,UACE+tB,EAAUvxB,QACR,cAACyD,EAAA,EAAD,CAAkBtC,UAAW3B,EAAQzI,OAAQ2M,KAAM,KACjD,KAVR,SAaE,cAAC5B,EAAA,EAAD,CAAYX,UAAW3B,EAAQiqB,WAA/B,+BAKP8H,EAAU35B,MAAMR,QACf,cAAC,GAAD,CAAU2I,IAAKwxB,EAAU35B,MAAMmI,IAAK3I,OAAQ,SAE7Cm6B,EAAUzxB,QAAQ1I,QACjB,cAAC,GAAD,CAAU2I,IAAKwxB,EAAUzxB,QAAQC,IAAK3I,OAAQ,eCtKvC,SAASw6B,GAAQ3tB,GAC9B,IAAQknB,EAA8ClnB,EAA9CknB,aAAcpgB,EAAgC9G,EAAhC8G,KAAMC,EAA0B/G,EAA1B+G,QAAS3P,EAAiB4I,EAAjB5I,KAAMwD,EAAWoF,EAAXpF,OAC3C,EAAwBgB,mBAAS,IAAjC,mBAAOkxB,EAAP,KAAaC,EAAb,KACA,EAAgCnxB,mBAAS,CACvCC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,MAF/B,mBAAO8xB,EAAP,KAAiBC,EAAjB,KAIMtyB,EAAUjL,KACVo9B,EAAiBt2B,EAAKgE,QAAU,GAEtCoM,qBAAU,WACRulB,EAAQ31B,EAAKpC,MACZ,CAACoC,IAEJ,IAAM+P,EAAc,WAClBJ,GAAQ,IAGV2mB,EAAerhB,IAAiB,QAAXzR,SACd8yB,EAAevhB,YACfuhB,EAAe3f,iBACf2f,EAAe1f,iBACf0f,EAAeloB,OA+BtB,OACE,qCACE,eAACsf,GAAA,EAAD,CACE3e,OAAO,WACPW,KAAMA,EACN+N,QAAS,kBAAM9N,GAAQ,IACvB,kBAAgB,iBAChBzI,WAAS,EACTymB,SAAS,KACT7nB,UAAW3B,EAAQopB,cAPrB,UASE,cAACK,GAAA,EAAD,CAAahwB,GAAG,iBAAhB,SAAkCgL,EAAMuM,QACxC,cAAC0Y,GAAA,EAAD,UAAgBjlB,EAAM5P,WACtB,eAAC80B,GAAA,EAAD,WACE,cAAC7lB,EAAA,EAAD,CACEH,QAAS,WACP6H,GAAQ,GA5ClB8mB,EAAY,2BACPD,GADM,IAET/xB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAE/B,sBAAC,sBAAAxI,EAAA,+EAES4H,GAAgBgsB,EAAc4F,EAAMY,GAF7C,OAGGvmB,IACA0mB,EAAY,2BACPD,GADM,IAET/xB,QAAS,CACP1I,QAAQ,EACR2I,IAAI,QAAD,OAAU0H,GAAsB5I,GAAhC,qBAELjH,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAVlC,gDAaGqL,IACA0mB,EAAY,2BACPD,GADM,IAET/xB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK0G,GAAU,KAAErP,OAAOsP,eAjBpD,wDAAD,IA0CQvF,UAAW3B,EAAQmpB,cALrB,SAOE,cAAC7mB,EAAA,EAAD,qBAGF,cAACwB,EAAA,EAAD,CACEhB,QAAQ,YACRa,QAAS,kBAAMc,EAAM+G,SAAQ,IAC7B7J,UAAW3B,EAAQ6X,aAHrB,0BASHwa,EAASj6B,MAAMR,QACd,cAAC,GAAD,CAAU2I,IAAK8xB,EAASj6B,MAAMmI,IAAK3I,OAAQ,SAE5Cy6B,EAAS/xB,QAAQ1I,QAChB,cAAC,GAAD,CAAU2I,IAAK8xB,EAAS/xB,QAAQC,IAAK3I,OAAQ,eC5FtC,SAAS26B,GAAT,GAOX,IANFzc,EAMC,EANDA,aACAkX,EAKC,EALDA,kBACAwF,EAIC,EAJDA,WACAt6B,EAGC,EAHDA,KACA6B,EAEC,EAFDA,OACAc,EACC,EADDA,SAEA,EAA0BwF,mBAAS,IAAnC,mBAAOoyB,EAAP,KAAcC,EAAd,KACA,EAA8BryB,mBAAS,IAAvC,mBAAOpE,EAAP,KAAgBkxB,EAAhB,KACA,EAA8B9sB,oBAAS,GAAvC,mBAAOG,EAAP,KAAgB4sB,EAAhB,KACA,EAAsC/sB,oBAAS,GAA/C,mBAAOgtB,EAAP,KAAoBC,EAApB,KACA,EAAkCjtB,oBAAS,GAA3C,mBAAOktB,EAAP,KAAkBC,EAAlB,KACA,EAAgCntB,mBAAS,IAAzC,mBAAO6wB,EAAP,KAAiByB,EAAjB,KACA,EAAsCtyB,mBAAS,IAA/C,mBAAOqvB,EAAP,KAAoBkD,EAApB,KACA,EAAwBvyB,mBAAS,IAAjC,mBAAOkxB,EAAP,KAAaC,EAAb,KACA,EAAoCnxB,mBAAS,GAA7C,mBAAOwR,EAAP,KAAmBgc,EAAnB,KACA,EAAgCxtB,mBAAS,IAAzC,mBAAOytB,GAAP,KAAiB+E,GAAjB,KACA,GAAwCxyB,mBAAS,IAAjD,qBAAO2tB,GAAP,MAAqBC,GAArB,MACA,GAAoC5tB,mBAAS,GAA7C,qBAAO6tB,GAAP,MAAmBC,GAAnB,MACA,GAA8C9tB,oBAAS,GAAvD,qBAAOyyB,GAAP,MAAwBC,GAAxB,MACA,GAA4B1yB,mBAAS,IAArC,qBAAOhB,GAAP,MAAe2zB,GAAf,MACA,GAAwC3yB,oBAAS,GAAjD,qBAAO4yB,GAAP,MAAqBC,GAArB,MAeAjnB,qBAAU,WACRkiB,GAAc,GACdgF,GAAWp5B,EAAQ,GAAI,GAAIc,KAE1B,CAAC3C,EAAMw3B,EAAa70B,IAEvBoR,qBAAU,WACJ6J,EAAarP,QACfisB,EAAS5c,KAEV,CAACA,IAEJ7J,qBAAU,WACR+gB,EAAkByF,KAEjB,CAACA,IAEJ,IAAMU,GAAa,SAACxH,EAAc3yB,EAAMwB,EAAMQ,GAC5C03B,EAAS,IACTtF,GAAW,GACX,sBAAC,gCAAAr1B,EAAA,+EAEkC6C,EAC7B+wB,EACA3yB,EACAwB,EACAQ,GANL,QAESo4B,EAFT,QAQyBl7B,KAAKuO,SACzB2mB,GAAW,GACXD,EAAW,2BAEbU,EAAcuF,EAAiB/4B,YAC/B4zB,GAAgBmF,EAAiB54B,MACjCq4B,GAAYO,EAAiBp6B,MACvBq6B,EAAY,GACdC,EAAe,GACnBF,EAAiBl7B,KAAKwN,KAAI,SAACtM,EAAMgN,GAK/B,OAJAktB,EAAel6B,GACFsB,QAAUgM,GAAWtN,EAAKsB,SACvC44B,EAAaz3B,KAAOzC,EAAKK,GACzB45B,EAAU5xB,KAAK6xB,IACR,KAETZ,EAASW,GACT56B,EAAgB,cAAe46B,GAC/BjG,GAAW,GA1Bd,kDA4BGA,GAAW,GACXD,EAAW,0BACX10B,EAAgB,cAAe,IA9BlC,yDAAD,IAqDI24B,GAAY,SAACmC,GACjBX,EAAeW,IAqCjB,OACE,qCACE,cAACngB,GAAD,CACElb,KAAMu6B,EACNpf,UAhIY,CAChB,CACE5Z,GAAI,OACJ8a,UAAW,OACXlD,MAAO,YACPrM,QAAQ,EACR5L,MAAM,GAER,CAAEK,GAAI,QAAS8a,UAAW,OAAQlD,MAAO,YACzC,CAAE5X,GAAI,UAAW8a,UAAW,OAAQlD,MAAO,cAC3C,CAAE5X,GAAI,QAAS8a,UAAW,OAAQ/E,OAAO,EAAMpW,MAAM,IAuHjDkc,eA7DiB,aA8DjBrZ,QAASA,EACTyV,QA3DU,SAAC7F,EAAO6E,GACtB8c,GAAa,GACbmF,EAAYjiB,IA0DRiB,UAvDY,SAAC9F,EAAOijB,GACxBxB,GAAe,GACfkE,EAAQ1C,IAsDJ5d,SAjCW,SAACrF,EAAOijB,GACvBiE,IAAmB,GACnBC,GAAU,QACVxB,EAAQ1C,IA+BJ3d,QA5BU,SAACtF,EAAOijB,GACtBoE,IAAgB,GAChBF,GAAU,OACVxB,EAAQ1C,IA0BJ1d,UAjBY,SAACvF,EAAOijB,GACxBoE,IAAgB,GAChBF,GAAU,SACVxB,EAAQ1C,IAeJ7d,WAxBa,SAACpF,EAAOijB,GACzBiE,IAAmB,GACnBC,GAAU,UACVxB,EAAQ1C,IAsBJ/Z,WA/Ca,SAAC1J,GACd6iB,GAAa7iB,GACf8iB,GAAc9iB,GACd8nB,GAAWp5B,EAAQ+zB,GAAU,GAAI,MAEjCK,GAAcD,GAAa,GAC3BiF,GAAWp5B,EAAQ,GAAIi0B,GAAc,MA0CnCnc,WAAYA,EACZ8B,OAAQua,KAET1tB,EACC,cAACoB,EAAA,EAAD,CAAME,QAAQ,SAASD,WAAS,EAAhC,SACE,cAACoC,EAAA,EAAD,MAEA,KACJ,cAAC,GAAD,CACE+M,MAAM,gBACNzF,KAAM8hB,EACN7hB,QAAS8hB,EACThE,UApEgB,WACpBkJ,EAAWjB,IAoEP3H,cAAe,iBALjB,2CASA,cAACuH,GAAD,CACE5lB,KAAMgiB,EACN/hB,QAASgiB,EACT7B,aAAc5xB,EACd7B,KAAMg5B,EACNE,UAAWA,KAEb,eAACgB,GAAD,CACEphB,MAAM,gBACNzF,KAAM0nB,GACNznB,QAAS0nB,GACTvH,aAAc5xB,EACd8B,KAAM01B,EACNH,UAAWA,GACX/xB,OAAQA,GAPV,yBASeA,GATf,iBAWA,eAACwyB,GAAD,CACEtmB,KAAMunB,GACNtnB,QAASunB,GACTl3B,KAAM01B,EACNH,UAAWA,GACXr3B,OAAQA,EACRsF,OAAQA,GANV,yBAQeA,GARf,oBC9MC,IAAMtK,GAAYC,YAAW,CAClCw+B,KAAM,CACJn9B,MAAO,KAET2a,MAAO,CACLpa,KAAM,8CACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,GAEX0P,OAAQ,CACN5P,WAAY,sCACZ6Z,OAAQ,sBACR5Z,aAAc,MACdC,QAAS,EACTc,OAAQ,QAEVq9B,SAAU,CACR78B,KAAM,oJACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,GAEXo+B,SAAU,CACR98B,KAAM,iJACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,K,UCfE,SAASq+B,GAAYlvB,GAClC,IAAMzE,EAAUjL,KAChB,EAAwBue,IAAMjT,UAAS,GAAvC,mBAAOkL,EAAP,KAAaC,EAAb,KACA,EAAwC8H,IAAMjT,UAAS,GAAvD,mBAAOuzB,EAAP,KAAqBC,EAArB,KACA,EAA0CvgB,IAAMjT,UAAS,GAAzD,mBAAOyzB,EAAP,KAAsBC,EAAtB,KAMMnoB,EAAc,WAClBJ,GAAQ,IAGJzK,EAAe,SAACC,GAChBA,EAAEC,OAAO4b,SAA8B,QAAnB7b,EAAEC,OAAOvI,OAC/Bq7B,GAAiB,GACjBF,GAAgB,GAChBpvB,EAAMuvB,WAAWhzB,EAAEC,OAAOvI,QACjBsI,EAAEC,OAAO4b,SAA8B,SAAnB7b,EAAEC,OAAOvI,OACtCm7B,GAAgB,GAChBE,GAAiB,GACjBtvB,EAAMuvB,WAAWhzB,EAAEC,OAAOvI,SAE1B+L,EAAMuvB,WAAW,OACjBH,GAAgB,GAChBE,GAAiB,KAIrB,OACE,qCACE,cAAClpB,GAAA,EAAD,CACEpR,GAAG,aACHqJ,QAAQ,SACRa,QA7BkB,WACtB6H,GAAQ,IA6BJ7J,UAAW3B,EAAQgF,OAJrB,SAME,cAAC6J,GAAA,EAAD,UACE,qBAAKzM,IAAI,oBAAoBC,IAAI,eAGrC,cAAC4xB,GAAA,EAAD,CAAQC,OAAO,QAAQ3oB,KAAMA,EAAM+N,QAAS1N,EAA5C,SACE,sBAAKjK,UAAW3B,EAAQwzB,KAAxB,UACE,cAACjmB,GAAA,EAAD,CAAKC,GAAI,EAAGoI,GAAI,EAAGnI,GAAI,EAAvB,SACE,eAAC7L,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAAvC,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYX,UAAW3B,EAAQgR,MAA/B,uBAEF,cAACpP,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC+B,EAAA,EAAD,CAAQrK,GAAG,SAASkK,QAASiI,EAA7B,SACE,qBAAKxJ,IAAI,mBAAmBC,IAAI,oBAKxC,cAACkL,GAAA,EAAD,CAAKC,GAAI,EAAGoI,GAAI,EAAhB,SACE,cAACtT,EAAA,EAAD,CAAYsI,OAAO,WAAWjJ,UAAW3B,EAAQ0zB,SAAjD,yBAIF,eAACvY,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,WACE,cAACE,GAAA,EAAD,UACE,cAACmC,GAAA,EAAD,CACEhkB,GAAG,WACH8J,SAAUxC,EACVxF,KAAK,eACL7C,MAAM,MACN3B,MAAM,UACN8lB,QAAS+W,MAGb,cAACpY,GAAA,EAAD,UACE,cAAClZ,EAAA,EAAD,CAAYsI,OAAO,cAAcjJ,UAAW3B,EAAQyzB,SAApD,+BAKJ,eAACrY,GAAA,EAAD,WACE,cAACE,GAAA,EAAD,UACE,cAACmC,GAAA,EAAD,CACEhkB,GAAG,YACH8J,SAAUxC,EACVxF,KAAK,gBACL7C,MAAM,OACN3B,MAAM,UACN8lB,QAASiX,MAGb,cAACtY,GAAA,EAAD,UACE,cAAClZ,EAAA,EAAD,CAAYsI,OAAO,eAAejJ,UAAW3B,EAAQyzB,SAArD,2CCiDDU,OAjJf,WACE,MAAwC9zB,mBAAS,IAAjD,mBAAOyV,EAAP,KAAqB0D,EAArB,KACA,EAAkCnZ,mBAAS,IAA3C,mBAAO+zB,EAAP,KAAkBC,EAAlB,KACQt6B,EAAWo1B,KAAXp1B,OACR,EAAmBsG,mBAAS,IAArBqY,EAAP,oBACA,EAAgCrY,mBAAS,IAAzC,mBAAOxF,EAAP,KAAiBy5B,EAAjB,KACA,EAAkCj0B,mBAAS,CACzCC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,MAF/B,mBAAOqwB,EAAP,KAAkB2D,EAAlB,KAsFA,OACE,qCACE,cAACra,GAAA,EAAD,CAAQlJ,MAAM,UACd,eAACpP,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAAvC,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAf,SACE,cAACsL,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAClL,EAAA,EAAD,CAAYsI,OAAO,QAAQ9H,QAAQ,KAAnC,uBAKJ,cAAClB,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAf,SACE,eAACsL,GAAA,EAAD,CAAK1X,QAAQ,OAAOshB,eAAe,WAAnC,UACE,cAAC5J,GAAA,EAAD,CAAKoI,GAAI,EAAT,SACE,cAAC8C,GAAD,CACEC,SAAUA,EACVG,cAjGY,SAACgB,GACzB0a,EAAa,2BACR3D,GADO,IAEVtwB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAE/B,sBAAC,gCAAAxI,EAAA,6DACCw8B,EAAa,2BACR3D,GADO,IAEVtwB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAJhC,kBAO8B1C,GAAc9D,EAAQ8f,GAPpD,OAOSC,EAPT,OAQSuZ,EAAY,GACdC,EAAe,GACdxZ,EAAarT,QAChB8tB,EAAa,2BACR3D,GADO,IAEVtwB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,qBAGhCuZ,EAAapU,KAAI,SAACtM,EAAMgN,GAItB,OAHAktB,EAAel6B,GACFsB,QAAUgM,GAAWtN,EAAKsB,SACvC24B,EAAU5xB,KAAK6xB,IACR,KAET9Z,EAAgB6Z,GAvBnB,kDAyBGkB,EAAa,2BACR3D,GADO,IAEVtwB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,4BA5BjC,yDAAD,IA4FYuY,aA3DW,WACvBU,InEkDE7gB,aAAaW,QAAQ,gBAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,kBmEQ3B+J,YAAa,2BAGjB,cAACkK,GAAA,EAAD,CAAKoI,GAAI,EAAT,SACE,cAACge,GAAD,CAAaK,WA9BE,SAACt7B,GAC1B,IAAIsC,EAAS,GACC,QAAVtC,IACFsC,EAAM,iBAAatC,EAAb,aAER47B,EAAYt5B,QA2BJ,cAACuS,GAAA,EAAD,CAAKoI,GAAI,EAAT,SACE,cAACmb,GAAD,CAAsBnF,aAAc5xB,EAAQ6xB,QArCtC,SAAC1zB,GACjBm8B,EAAan8B,gBAyCX,uBACA,cAAC0J,EAAA,EAAD,CAAMC,WAAS,EAACY,QAAS,EAAzB,SACE,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACuwB,GAAD,CACEzc,aAAcA,EACdkX,kBAzEgB,SAACwH,GACzBhb,EAAgBgb,IAyERhC,WAtES,SAACjB,GACdA,GACF,sBAAC,sBAAAx5B,EAAA,+EAESsE,GAAmBtC,EAAQw3B,GAFpC,OAGG8C,EAAa,IACbE,EAAa,2BACR3D,GADO,IAEVtwB,QAAS,CAAE1I,QAAQ,EAAM2I,IAAK,6BAC9BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAPlC,gDAUGg0B,EAAa,2BACR3D,GADO,IAEVtwB,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK0G,GAAU,KAAErP,OAAOsP,eAbpD,wDAAD,IAqEMhP,KAAMk8B,EACNr6B,OAAQA,EACRc,SAAUA,QAIf+1B,EAAUx4B,MAAMR,QACf,cAAC,GAAD,CAAU2I,IAAKqwB,EAAUx4B,MAAMmI,IAAK3I,OAAQ,SAE7Cg5B,EAAUtwB,QAAQ1I,QACjB,cAAC,GAAD,CAAU2I,IAAKqwB,EAAUtwB,QAAQC,IAAK3I,OAAQ,gBC1IvC68B,GATD,WACZ,OACE,mCACE,cAAC,GAAD,UACE,cAAC,GAAD,S,SCNK1/B,GAAYC,aAAW,SAACkb,GAAD,MAAY,CAC9Cta,KAAM,CACJiY,SAAU,GAEZ6mB,OAAQ,CACNp/B,QAAS,EACTF,WAAY,sCACZgB,OAAQ,QAEVu+B,SAAU,CACRz/B,QAASgb,EAAMzN,QAAQ,GACvBnN,QAAS,EACT2Z,OAAQ,oBACR7Z,WAAY,sCACZ0Y,UAAW,wBACX1X,OAAQ,OACRuZ,SAAU,QAEZilB,KAAM,CACJx/B,WAAY,sCACZC,aAAc,qBACdC,QAAS,EACTc,OAAQ,OACRC,MAAO,OACP4Y,OAAQ,oBACR4lB,aAAc,MACdp+B,WAAY,KACZ+yB,SAAU,OAEZ5gB,OAAQ,CACN7R,MAAO,UACPF,UAAW,OACXvB,QAAS,EACTsB,KAAM,gLAERoO,OAAQ,CACN5P,WAAY,UACZ2B,MAAO,UACP1B,aAAc,OAEhBka,QAAS,CACP3Y,KAAM,+KACNE,cAAe,qCACfD,UAAW,OACXpB,SAAU,OACVsB,MAAO,UACPzB,QAAS,GAEXw/B,UAAW,CACTl+B,KAAM,8HACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,EACTu/B,aAAc,OACdp+B,WAAY,MAEds+B,cAAe,CACb3/B,WAAY,sCACZC,aAAc,OACdC,QAAS,EACTc,OAAQ,OACRC,MAAO,OACPw+B,aAAc,QAEhBz7B,KAAM,CACJxC,KAAM,iJACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,EACTu/B,aAAc,OACdp+B,WAAY,MAEdu+B,SAAU,CACRp+B,KAAM,oJACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACP89B,aAAc,OACd5c,UAAW,OACXxhB,WAAY,OACZC,YAAa,OACbu+B,UAAW,aACXC,WAAY,YAEdC,QAAS,CACPv+B,KAAM,iJACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,EACTH,OAAQ,sBAEVigC,eAAgB,CACdlgC,QAASgb,EAAMzN,QAAQ,GACvBnN,QAAS,EACT2Z,OAAQ,oBACR7Z,WAAY,sCACZ0Y,UAAW,wBACXunB,UAAW,OACX1lB,SAAU,QAEZtV,WAAY,CACVzD,KAAM,+KACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPzB,QAAS,EACTu/B,aAAc,QAEhBS,YAAa,CACXjgC,aAAc,OAEhBkgC,WAAY,CACVngC,WAAY,sCACZC,aAAc,MACdC,QAAS,EACTsB,KAAM,gGACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPX,OAAQ,OACRC,MAAO,QAETm/B,YAAa,CACXpgC,WAAY,sCACZC,aAAc,MACdC,QAAS,EACTsB,KAAM,gGACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACPX,OAAQ,OACRC,MAAO,QAETwZ,aAAc,CACZza,WAAY,eAEdqgC,cAAe,CACbrgC,WAAY,sCACZC,aAAc,kBACdC,QAAS,EACT4B,cAAe,QAEjBw+B,kBAAmB,CACjB9+B,KAAM,qJACNE,cAAe,qCACfD,UAAW,SACXE,MAAO,UACPzB,QAAS,EACT4B,cAAe,aAEjBy+B,YAAa,CACX/+B,KAAM,oJACNE,cAAe,qCACfD,UAAW,OACXE,MAAO,UACP89B,aAAc,OACd5c,UAAW,OACXxhB,WAAY,OACZC,YAAa,OACbyhB,eAAgB,gBAElByd,iBAAkB,CAChB,WAAY,CACV//B,QAAS,QAEX,UAAW,CACT,WAAY,CACVA,QAAS,kBAIfggC,cAAe,CACbzgC,WAAY,sCACZC,aAAc,MACdC,QAAS,EACTsB,KAAM,qHACNE,cAAe,qCACfD,UAAW,SACXE,MAAO,UACPG,cAAe,OACf,UAAW,CACTE,gBAAiB,YAGrB0+B,eAAgB,CACd1gC,WAAY,sCACZC,aAAc,MACdC,QAAS,EACTwB,cAAe,qCACfD,UAAW,SACXD,KAAM,qHACNG,MAAO,UACPG,cAAe,OACf,UAAW,CACTE,gBAAiB,YAGrB2+B,WAAY,CACV3gC,WAAY,sCACZ6Z,OAAQ,oBACR5Z,aAAc,kBACdC,QAAS,EACTc,OAAQ,OACR4/B,YAAa,WAEfC,kBAAmB,CACjBr/B,KAAM,iJACNE,cAAe,qCACfC,MAAO,UACPzB,QAAS,EACT2iB,UAAW,OACXxhB,WAAY,QAEdy/B,gBAAiB,CACft/B,KAAM,iJACNE,cAAe,qCACfC,MAAO,UACPzB,QAAS,EACT2iB,UAAW,OACXxhB,WAAY,OACZo+B,aAAc,OACdI,UAAW,aACXC,WAAY,YAEdlrB,MAAO,CACLwf,SAAU,QACV6L,UAAW,QACXh/B,MAAO,OACPD,OAAQ,OACR+/B,UAAW,QACXlnB,OAAQ,oBACR5Z,aAAc,sBAEhB+gC,UAAW,CACTngC,SAAU,WACVC,IAAK,OACL6zB,MAAO,QAETsM,eAAgB,CACdnhC,QAAS,MACTS,OAAQ,e,UCnPC2gC,GAAcrmB,cAAW,SAACC,GAAD,MAAY,CAChDqmB,MAAO,CACLn/B,gBAAiB,UACjBL,MAAO,UACP+W,UAAU,aAAD,OAAeoC,EAAME,QAAQhb,WAAWohC,OACjD,WAAY,CACVvgC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNE,MAAO,OACPD,OAAQ,OACRf,aAAc,MACd4Z,OAAQ,yBACR+L,QAAS,UAbY/K,CAgBvBwmB,MAESC,GAAezmB,cAAW,SAACC,GAAD,MAAY,CACjDqmB,MAAO,CACLn/B,gBAAiB,UACjBL,MAAO,UACP+W,UAAU,aAAD,OAAeoC,EAAME,QAAQhb,WAAWohC,OACjD,WAAY,CACVvgC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNE,MAAO,OACPD,OAAQ,OACRf,aAAc,MACd4Z,OAAQ,yBACR+L,QAAS,UAba/K,CAgBxBwmB,MCiGWE,GAtHI,SAAClyB,GAClB,IAAMzE,EAAUjL,KAChB,EAAkCsL,mBAAS,CACzCC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,MAF/B,mBAAOq2B,EAAP,KAAkBC,EAAlB,KAIMrI,EAAkBjmB,KAClB4pB,EAAiB1tB,EAAMrL,KAAKyG,QAAU,GACxCyJ,EAAgB7E,EAAMrL,KAAKyG,QAAU4E,EAAMrL,KAAKyG,OAAOyJ,cACvDG,EAAkBhF,EAAMrL,KAAKyG,QAAU4E,EAAMrL,KAAKyG,OAAO4J,gBA0BvDqtB,EAAkB,WAMtB,GALAD,EAAa,2BACRD,GADO,IAEVt2B,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAEV,SAAjBkE,EAAMpF,QAAsC,WAAjBoF,EAAMpF,OAAqB,CACxD,IAAIzC,EA/BiB,WACvB,GAAK0M,EAEE,CACL,IAAI1M,EAAW0M,EAAc7D,MAAM,KACd,SAAjBhB,EAAMpF,OAAmBzC,EAAS6E,KAAK+sB,GACtC5xB,EAAWA,EAAS5B,QAAO,SAAC+G,GAAD,OAAUA,IAASysB,KACnDllB,EAAgB1M,EAASkJ,KAAK,UAL9BwD,EAAgBklB,EAOlB,OAAOllB,EAsBUytB,GACf5E,EAAe7oB,cAAgB1M,EAEjC,GAAqB,UAAjB6H,EAAMpF,QAAuC,YAAjBoF,EAAMpF,OAAsB,CAC1D,IAAIzC,EAvBmB,WACzB,GAAK6M,EAEE,CACL,IAAI7M,EAAW6M,EAAgBhE,MAAM,KAChB,UAAjBhB,EAAMpF,OAAoBzC,EAAS6E,KAAK+sB,GACvC5xB,EAAWA,EAAS5B,QAAO,SAAC+G,GAAD,OAAUA,IAASysB,KACnD/kB,EAAkB7M,EAASkJ,KAAK,UALhC2D,EAAkB+kB,EAOpB,OAAO/kB,EAcUutB,GACf7E,EAAe1oB,gBAAkB7M,EAEnC,sBAAC,4BAAA7E,EAAA,+EAE0B4H,GACrB8E,EAAM1K,OACN0K,EAAMrL,KAAKK,GACX04B,GALL,OAES70B,EAFT,OAOGmH,EAAM/J,QAAQ4C,EAAUmH,EAAMpF,QAC9Bw3B,EAAa,2BACRD,GADO,IAEVt2B,QAAS,CACP1I,QAAQ,EACR2I,IAAK,wBAEPnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAdlC,gDAiBGs2B,EAAa,2BACRD,GADO,IAEVt2B,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,6BApBjC,wDAAD,IA0BF,OACE,qCACE,eAACgpB,GAAA,EAAD,CAAQ3e,OAAO,WACbW,KAAM9G,EAAM8G,KACZ+N,QAAS,kBAAM7U,EAAM+G,SAAQ,IAC7B,kBAAgB,iBAChBzI,WAAS,EACTymB,SAAS,KACT7nB,UAAW3B,EAAQopB,cANrB,UAQE,cAACK,GAAA,EAAD,CAAahwB,GAAG,iBAAhB,SAAkCgL,EAAMuM,QACxC,cAAC0Y,GAAA,EAAD,UAAgBjlB,EAAM5P,WACtB,eAAC80B,GAAA,EAAD,WACE,cAAC7lB,EAAA,EAAD,CACEH,QAAS,WACPc,EAAM+G,SAAQ,GACdsrB,KAEFn1B,UAAW3B,EAAQmpB,cALrB,SAOE,eAAC7mB,EAAA,EAAD,mBACQ2F,GAAsBxD,EAAMpF,QADpC,aAKF,cAACyE,EAAA,EAAD,CACEhB,QAAQ,YACRa,QAAS,kBAAMc,EAAM+G,SAAQ,IAC7B7J,UAAW3B,EAAQ6X,aAHrB,0BASH+e,EAAUx+B,MAAMR,QACf,cAAC,GAAD,CAAU2I,IAAKq2B,EAAUx+B,MAAMmI,IAAK3I,OAAQ,SAE7Cg/B,EAAUt2B,QAAQ1I,QACjB,cAAC,GAAD,CAAU2I,IAAKq2B,EAAUt2B,QAAQC,IAAK3I,OAAQ,gB,UC5HvC,SAASq/B,GAAcxyB,GACpC,OACE,qCACGA,EAAMyyB,cAAgB,IAAMzyB,EAAMyyB,cAAgBzyB,EAAMpK,WACvD,cAAC,KAAD,CAAU88B,QAAS1yB,EAAM2yB,+BACvB,KACH3yB,EAAMjE,QACL,cAACoB,EAAA,EAAD,CAAME,QAAQ,SAASD,WAAS,EAAhC,SACE,cAACoC,EAAA,EAAD,MAEA,QCCK,SAASozB,GAAQ5yB,GAC9B,IAAMzE,EAAUjL,KAChB,EAA8BsL,mBAAS,IAAvC,mBAAO80B,EAAP,KAAgBmC,EAAhB,KACA,EAAsCj3B,mBAAS,GAA/C,mBAAOm1B,EAAP,KAAoB+B,EAApB,KACA,EAAsCl3B,oBAAS,GAA/C,mBAAOgtB,EAAP,KAAoBC,EAApB,KACA,EAAwBjtB,oBAAS,GAAjC,mBAAOqT,EAAP,KAAalC,EAAb,KACA,EAAwCnR,mBAAS,IAAjD,mBAAOizB,EAAP,KAAqBkE,EAArB,KACA,EAA4Bn3B,mBAAS,IAArC,mBAAOhB,EAAP,KAAe2zB,EAAf,KACA,EAAgC3yB,mBAAS,IAAzC,mBAAOrG,EAAP,KAAiB+zB,EAAjB,KACA,EAA8B1tB,oBAAS,GAAvC,mBAAOG,EAAP,KAAgB4sB,EAAhB,KAEAnhB,qBAAU,WACRwrB,MAEC,CAAChzB,EAAM2wB,iBAEVnpB,qBAAU,WACR8hB,EAAYtpB,EAAMlK,QACjB,CAACkK,EAAMlK,OAKV,IAAMk9B,EAAqB,WACzB,sBAAC,kCAAA1/B,EAAA,+EAEuCoG,GAAiBsG,EAAM1K,OAAQ0K,EAAMtJ,aAF5E,OAESu8B,EAFT,OAGGH,EAAeG,EAAsBjxB,QACrChC,EAAM2wB,eAAe1vB,KAAI,SAAC2D,EAAQgC,GAehC,OAdA5G,EAAM2wB,eAAe/pB,GAArB,MAAkC,EAClC5G,EAAM2wB,eAAe/pB,GAArB,OAAmC,EAC/BjC,GAAgBC,EAAQ5E,EAAMtJ,eAChCsJ,EAAM2wB,eAAe/pB,GAArB,MAAkC,GAEhC7B,GAAiBH,EAAQ5E,EAAMtJ,eACjCsJ,EAAM2wB,eAAe/pB,GAArB,OAAmC,GAErCqsB,EAAsBhyB,KAAI,SAACiyB,EAAcC,GAIvC,OAHIvuB,EAAOxN,KAAKpC,KAAOk+B,EAAa97B,OAClC4I,EAAM2wB,eAAe/pB,GAArB,OAAoC,WAE/B,MAEF,KAELwsB,EAAmB,GACvBH,EAAsBhyB,KAAI,SAACiyB,EAAcC,GACvC,IAAIE,EAAU,CACZj8B,KAAM,CACJN,KAAM,KACNO,WAAY,KACZrC,GAAI,MAEN7B,OAAQ,SACRmgC,gBAAgB,EAChBC,aAAc,gCAShB,OAPmBvzB,EAAM2wB,eAAep6B,QACtC,SAACqO,GAAD,OAAYA,EAAOxN,KAAKpC,KAAOk+B,EAAa97B,QAE5B4K,SAChBqxB,EAAQj8B,KAAKpC,GAAKk+B,EAAa97B,KAC/Bg8B,EAAiBp2B,KAAKq2B,KAEjB,KAGHG,EA3CT,aA2CmC,IAAIC,IAAIL,IAClCpF,EA5CT,uBA4CqBwF,GA5CrB,aA4C6CxzB,EAAM2wB,iBAChDkC,EAAW7E,GA7Cd,2GAAD,IA0IF,OACE,qCACE,eAAC7wB,EAAA,EAAD,WACE,cAACU,EAAA,EAAD,CAAYX,UAAW3B,EAAQm1B,QAA/B,qBACA,eAACvzB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,UACE,cAAC2L,GAAA,EAAD,CAAKmI,GAAI,EAAGC,GAAI,EAAG6H,GAAI,EAAvB,SACE,cAAC3S,GAAA,EAAD,CAAQ/H,QAAQ,SAASnB,UAAW3B,EAAQw1B,YAA5C,SACGA,QAIP,cAACjoB,GAAA,EAAD,UACE,uBAAO5L,UAAW3B,EAAQ3F,WAA1B,4BAEF,cAACuH,EAAA,EAAD,UACE,cAAC2L,GAAA,EAAD,CAAKmI,GAAI,EAAG8H,GAAI,EAAG7H,GAAI,EAAvB,SACE,cAAC9K,GAAA,EAAD,CAAQ/H,QAAQ,SAASnB,UAAW3B,EAAQu1B,WAA5C,SACGJ,EAAQ1uB,aAIf,cAAC8G,GAAA,EAAD,UACE,uBAAO5L,UAAW3B,EAAQ3F,WAA1B,8BArBN,OAwBG86B,QAxBH,IAwBGA,OAxBH,EAwBGA,EAASzvB,KAAI,SAAC2D,EAAQgC,GACrB,OACE,eAACzJ,EAAA,EAAD,CACEE,QAAQ,aACRD,WAAS,EACTF,UAAW3B,EAAQ+0B,cAEnBpxB,QAAS,kBAtHAw0B,EAsHkB9uB,OArHhCqK,GAAMjP,EAAM2zB,qBAAqBD,IADpB,IAACA,GAiHX,UAOE,cAAC5qB,GAAA,EAAD,CAAKmI,GAAI,EAAT,SACGrM,EAAOzR,OACN,cAAC0+B,GAAD,CACExzB,QAAQ,MACRoW,aAAc,CACZC,SAAU,SACVC,WAAY,SAJhB,SAOE,cAACvO,GAAA,EAAD,CACE/H,QAAQ,SACRnB,UAAW3B,EAAQs1B,YACnBlzB,IAAKgG,GAAsBiB,EAAOxN,KAAKC,gBAI3C,cAAC46B,GAAD,CACE5zB,QAAQ,MACRoW,aAAc,CACZC,SAAU,SACVC,WAAY,SAJhB,SAOE,cAACvO,GAAA,EAAD,CACE/H,QAAQ,SACRnB,UAAW3B,EAAQs1B,YACnBlzB,IAAKgG,GAAsBiB,EAAOxN,KAAKC,kBAK/C,eAAC8F,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,GAAIE,GAAI,EAA9B,UACE,uBAAOP,UAAW3B,EAAQ4I,OAA1B,SACIS,EAAOxN,KAAKN,KAEV0M,GAAsBoB,EAAOxN,KAAKN,MADlC8N,EAAOxN,KAAKpC,GAAGoM,UAAU,EAAG,IAAM,OAAQ,IAGhD,uBACA,uBAAOlE,UAAW3B,EAAQuP,QAA1B,SACIlG,EAAOzR,OAAqByR,EAAOzR,OAAnB,eAGtB,eAAC2V,GAAA,EAAD,CAAKoI,GAAI,EAAT,UACItM,EAAOgvB,KAqBP,mCACE,cAACroB,GAAD,CAAcgB,MAAM,SAApB,SACE,+BACE,cAACnC,GAAA,EAAD,CACEC,KAAK,QACLnL,QAAS,SAACkI,GAAD,OA7KHzS,EA6KmCiQ,EAAOxN,KA5KtEm3B,EAAU,UACV1F,GAAe,QACfkK,EAAgBp+B,GAHI,IAAQA,GA8KNmY,YAAa,kBAAMC,GAAQ,IAC3BC,WAAY,kBAAMD,GAAQ,IAC1BzN,SAAUsF,EAAO0uB,eALnB,SAOE,qBAAK31B,IAAI,kBAAkBC,IAAI,mBA9BvC,mCACE,cAAC2N,GAAD,CAAcgB,MAAO3H,EAAO2uB,cAAgB,OAA5C,SACE,+BACE,cAACnpB,GAAA,EAAD,CACEC,KAAK,QACLnL,QAAS,SAACkI,GAAD,OAlKLzS,EAkKmCiQ,EAAOxN,KAjKpEm3B,EAAU,QACV1F,GAAe,QACfkK,EAAgBp+B,GAHE,IAAQA,GAmKJmY,YAAa,kBAAMC,GAAQ,IAC3BC,WAAY,kBAAMD,GAAQ,IAC1BzN,SAAUsF,EAAO0uB,eALnB,SAOE,qBACE31B,IAAI,oBACJC,IAAI,OACJyI,MAAO,CAAEzU,MAAO,OAAQD,OAAQ,kBAuB1CiT,EAAO/B,MAiBP,mCACE,cAAC0I,GAAD,CAAcgB,MAAM,UAApB,SACE,+BACE,cAACnC,GAAA,EAAD,CACEC,KAAK,QACLnL,QAAS,SAACkI,GAAD,OA5LFzS,EA4LmCiQ,EAAOxN,KA3LvEm3B,EAAU,WACV1F,GAAe,QACfkK,EAAgBp+B,GAHK,IAAQA,GA6LPmY,YAAa,kBAAMC,GAAQ,IAC3BC,WAAY,kBAAMD,GAAQ,IAC1BzN,SAAUsF,EAAO0uB,eALnB,SAOE,qBAAK31B,IAAI,mBAAmBC,IAAI,oBA1BxC,mCACE,cAAC2N,GAAD,CAAcgB,MAAO3H,EAAO2uB,cAAgB,QAA5C,SACE,+BACE,cAACnpB,GAAA,EAAD,CACEC,KAAK,QACLnL,QAAS,SAACkI,GAAD,OArLJzS,EAqLmCiQ,EAAOxN,KApLrEm3B,EAAU,SACV1F,GAAe,QACfkK,EAAgBp+B,GAHG,IAAQA,GAsLLmY,YAAa,kBAAMC,GAAQ,IAC3BC,WAAY,kBAAMD,GAAQ,IAC1BzN,SAAUsF,EAAO0uB,eALnB,SAOE,qBAAK31B,IAAI,qBAAqBC,IAAI,uBA9FzCgJ,SAyHb,eAAC,GAAD,CACEE,KAAM8hB,EACNj0B,KAAMk6B,EACNtiB,MAAM,gBACNxF,QAAS8hB,EACTvzB,OAAQ0K,EAAM1K,OACdsF,OAAQA,EACR3E,QA7MkB,SAAC49B,EAAYh7B,GACnC,IAAIi7B,EAAgBpD,EAAQn6B,QAAO,SAAC+G,GAAD,OAAUA,EAAKlG,KAAKpC,KAAO6+B,EAAW7+B,MACrE++B,EAAiBrD,EAAQn6B,QAAO,SAAC0V,GACnC,OAAOA,EAAI7U,KAAKpC,GAAG8P,SAAS+uB,EAAW7+B,OAEzC,OAAQ6D,GACN,IAAK,OACHk7B,EAAe,GAAGH,MAAO,EACzB,MACF,IAAK,SACHG,EAAe,GAAGH,MAAO,EACzB,MACF,IAAK,QACHG,EAAe,GAAGlxB,OAAQ,EAC1B,MACF,IAAK,UACHkxB,EAAe,GAAGlxB,OAAQ,EAK9B,IAAMmxB,EAActD,EAAQuD,WAAU,SAAChoB,GACrC,OAAOA,EAAI7U,KAAKpC,GAAG8P,SAAS+uB,EAAW7+B,OAEzC8+B,EAAcI,OAAOF,EAAa,EAAGD,EAAe,IACpDlB,EAAWiB,IA6KT,yBASel5B,EATf,iBAWA,cAAC43B,GAAD,CACEz2B,QAASA,EACT02B,cAAe/B,EAAQ1uB,OACvB2wB,6BArL+B,WACnChK,GAAW,GACX,sBAAC,4BAAAr1B,EAAA,+EAEgCgG,GAAkB0G,EAAM1K,OAAQ0K,EAAMtJ,YAAanB,GAFnF,OAESo7B,EAFT,OAGGkC,GAAW,SAACsB,GAAD,6BAAkBA,GAAlB,aAA+BxD,EAAel9B,UACzD61B,EAAYqH,EAAep8B,MAC3Bo0B,GAAW,GALd,gDAOGA,GAAW,GAPd,wDAAD,IAoLI/yB,WAAYoK,EAAMpK,gBCvVnB,IAAMtF,GAAYC,aAAW,SAACkb,GAAD,MAAY,CAC9C2oB,eAAgB,CACdjiC,KAAM,uJACNG,MAAO,UACPzB,QAAS,EACTwB,cAAe,qCACfG,WAAY,KAEd6hC,eAAgB,CACdziC,MAAO,QAETkF,KAAM,CACJ9F,SAAU,OACVwiB,UAAW,OACX4c,aAAc,OACd59B,WAAY,IACZL,KAAM,uJACNE,cAAe,MACfC,MAAO,UACPzB,QAAS,GAEX+b,MAAO,CACLta,MAAO,UACPtB,SAAU,OACVmB,KAAM,+KACNE,cAAe,QAEjBiiC,UAAW,CACTtjC,SAAU,QAEZujC,cAAe,CACb9jC,QAAS,QAEX+jC,UAAW,CACT7jC,WAAY,mEACZF,QAAS,sBACTG,aAAc,OAEhB6jC,UAAW,CACT9jC,WAAY,kEACZF,QAAS,sBACTG,aAAc,OAEhB8jC,OAAQ,CACN/iC,OAAQ,OACRC,MAAO,OACPI,WAAY,MACZW,gBAAiB,UACjB/B,aAAc,MACdQ,QAAS,qBCmKEujC,GA9MM,SAAC,GAA6C,IAA3C/vB,EAA0C,EAA1CA,OAAQgwB,EAAkC,EAAlCA,oBAAqBt/B,EAAa,EAAbA,OAC7CiG,EAAUjL,KAChB,EAAoCsL,oBAAS,GAA7C,mBAAOi5B,EAAP,KAAmBC,EAAnB,KACA,EAAwCl5B,mBAAS,IAAjD,mBAAOizB,EAAP,KAAqBkE,EAArB,KACA,EAA4Bn3B,mBAAS,IAArC,mBAAOhB,EAAP,KAAe2zB,EAAf,KACA,EAAwB3yB,oBAAS,GAAjC,mBAAOg4B,EAAP,KAAamB,EAAb,KACA,EAA0Bn5B,oBAAS,GAAnC,mBAAOiH,EAAP,KAAcmyB,EAAd,KAEAxtB,qBAAU,WACJ5C,EAAO/B,OAAOmyB,EAASpwB,EAAO/B,OAC9B+B,EAAOgvB,MAAMmB,EAAQnwB,EAAOgvB,QAC/B,CAAChvB,IA6CJ,OAAIA,EAEA,qCACE,cAACzH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC8M,GAAA,EAAD,CAAYlL,QAAS,kBAAM01B,GAAoB,IAA/C,SACE,qBAAKj3B,IAAI,0BAA0BC,IAAI,eAG3C,cAACT,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAKqI,GAAI,EAAGpI,GAAI,EAAhB,SACE,cAAClL,EAAA,EAAD,CAAYQ,QAAQ,QAAQnB,UAAW3B,EAAQ64B,eAA/C,qCAQV,uBACA,eAACj3B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACF,EAAA,EAAD,CAAMK,GAAI,EAAGC,GAAI,EAAGH,MAAI,EAAxB,SACE,qBACEK,IAAKgG,GAAsBiB,EAAOxN,KAAKC,YACvC6F,UAAW3B,EAAQ84B,eACnBz2B,IAAI,cAGR,cAACT,EAAA,EAAD,CAAMK,GAAI,GAAIC,GAAI,GAAIH,MAAI,EAA1B,SACE,eAACO,EAAA,EAAD,CAAYQ,QAAQ,KAAKP,MAAM,SAASZ,UAAW3B,EAAQzE,KAA3D,UACG8N,EAAOxN,KAAKN,MAAQ8N,EAAOxN,KAAKpC,GAAI,IACpC4P,EAAOzR,QAAU,sBAAM+J,UAAW3B,EAAQm5B,cAG/C,eAACv3B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,UACE,cAACF,EAAA,EAAD,CAAMK,GAAI,EAAGC,GAAI,EAAGiY,GAAI,EAAGpY,MAAI,EAA/B,SACIs2B,EAoBA,cAACroB,GAAD,CAAcgB,MAAM,SAApB,SACE,+BACE,cAACnC,GAAA,EAAD,CACE,aAAW,eACX3K,KAAK,QACLP,QAAS,SAACkI,GAAD,OApGAzS,EAoG+BiQ,EAAOxN,KAnGjEm3B,EAAU,UACVuG,GAAc,QACd/B,EAAgBp+B,GAHG,IAAQA,GAqGT2K,SAAUsF,EAAO0uB,eAJnB,SAME,qBAAKp2B,UAAW3B,EAAQi5B,UAAxB,SACE,qBAAK72B,IAAI,kBAAkBC,IAAI,mBA5BvC,cAAC2N,GAAD,CAAcgB,MAAM,OAApB,SACE,+BACE,cAACnC,GAAA,EAAD,CACE,aAAW,eACX3K,KAAK,QACLP,QAAS,SAACkI,GAAD,OAvFFzS,EAuF+BiQ,EAAOxN,KAtF/Dm3B,EAAU,QACVuG,GAAc,QACd/B,EAAgBp+B,GAHC,IAAQA,GAwFP2K,SAAUsF,EAAO0uB,eAJnB,SAME,qBAAKp2B,UAAW3B,EAAQk5B,UAAxB,SACE,qBACE92B,IAAI,oBACJC,IAAI,OACJyI,MAAO,CAAEzU,MAAO,OAAQD,OAAQ,oBAuB9C,cAACwL,EAAA,EAAD,CAAMK,GAAI,EAAGC,GAAI,EAAGiY,GAAI,EAAGpY,MAAI,EAA/B,SACIuF,EAgBA,cAAC0I,GAAD,CAAcgB,MAAM,UAApB,SACE,+BACE,cAACnC,GAAA,EAAD,CACE,aAAW,QACX3K,KAAK,QACLP,QAAS,SAACkI,GAAD,OAzHDzS,EAyH+BiQ,EAAOxN,KAxHhEm3B,EAAU,WACVuG,GAAc,QACd/B,EAAgBp+B,GAHE,IAAQA,GA0HR2K,SAAUsF,EAAO0uB,eAJnB,SAME,qBAAKp2B,UAAW3B,EAAQi5B,UAAxB,SACE,qBAAK72B,IAAI,0BAA0BC,IAAI,kBAxB/C,cAAC2N,GAAD,CAAcgB,MAAM,QAApB,SACE,+BACE,cAACnC,GAAA,EAAD,CACE,aAAW,QACX3K,KAAK,QACLP,QAAS,SAACkI,GAAD,OAhHHzS,EAgH+BiQ,EAAOxN,KA/G9Dm3B,EAAU,SACVuG,GAAc,QACd/B,EAAgBp+B,GAHA,IAAQA,GAiHN2K,SAAUsF,EAAO0uB,eAJnB,SAME,qBAAKp2B,UAAW3B,EAAQk5B,UAAxB,SACE,qBAAK92B,IAAI,qBAAqBC,IAAI,oBAsB9C,cAACT,EAAA,EAAD,OAEF,eAACA,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAaW,QAAS,EAAGd,UAAW3B,EAAQg5B,cAApE,UACE,eAACp3B,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAIC,GAAI,GAAvB,UACE,cAACI,EAAA,EAAD,CAAYsI,OAAO,YAAYjJ,UAAW3B,EAAQqR,MAAlD,uBAGA,cAAC/O,EAAA,EAAD,CAAYX,UAAW3B,EAAQ+4B,UAA/B,SAA2C1vB,EAAOxN,KAAKN,UAEzD,eAACqG,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAIC,GAAI,GAAvB,UACE,cAACI,EAAA,EAAD,CAAYsI,OAAO,aAAajJ,UAAW3B,EAAQqR,MAAnD,0BAGA,cAAC/O,EAAA,EAAD,CAAYX,UAAW3B,EAAQ+4B,UAA/B,SACGnyB,KAAOyC,EAAO3O,SAASoM,OAAO,8BAGnC,eAAClF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAIC,GAAI,GAAvB,UACE,cAACI,EAAA,EAAD,CAAYsI,OAAO,QAAQjJ,UAAW3B,EAAQqR,MAA9C,2BAGA,cAAC/O,EAAA,EAAD,CAAYX,UAAW3B,EAAQ+4B,UAA/B,SAA2C1vB,EAAOxN,KAAKD,iBAI7D,eAAC,GAAD,CACE2P,KAAM+tB,EACNlgC,KAAMk6B,EACNtiB,MAAM,gBACNxF,QAAS+tB,EACTx/B,OAAQA,EACRsF,OAAQA,EACR3E,QA9JgB,SAAC49B,EAAYh7B,GACnC,OAAQA,GACN,IAAK,OACHk8B,GAAQ,GACR,MACF,IAAK,SACHA,GAAQ,GACR,MACF,IAAK,QACHC,GAAS,GACT,MACF,IAAK,UACHA,GAAS,KA2IT,yBASep6B,EATf,oBAcG,8BClJIq6B,GAtDI,SAACj1B,GAClB,IAAQuM,EAA6DvM,EAA7DuM,MAAOnc,EAAsD4P,EAAtD5P,SAAU0W,EAA4C9G,EAA5C8G,KAAMC,EAAsC/G,EAAtC+G,QAASzR,EAA6B0K,EAA7B1K,OAAQsB,EAAqBoJ,EAArBpJ,QAASY,EAAYwI,EAAZxI,QACnD+D,EAAUjL,KAgBhB,OACE,eAACw0B,GAAA,EAAD,CACE9vB,GAAG,SACH8R,KAAMA,EACN+N,QAAS,kBAAM9N,GAAQ,IACvB,kBAAgB,iBAChBzI,WAAS,EACTymB,SAAS,KACT7nB,UAAW3B,EAAQopB,cAPrB,UASE,cAACK,GAAA,EAAD,CAAahwB,GAAG,iBAAhB,SAAkCuX,IAClC,cAAC0Y,GAAA,EAAD,UAAgB70B,IAChB,eAAC80B,GAAA,EAAD,WACE,cAAC7lB,EAAA,EAAD,CACErK,GAAG,OACHkK,QAAS,WACP6H,GAAQ,GA7BhB,sBAAC,sBAAAzT,EAAA,+EAESwH,GACJxF,EACAsB,EACAY,EAAQ09B,UACR19B,EAAQ29B,aANb,OAQGn1B,EAAM/J,QAAQuB,EAAQ09B,UAAW19B,EAAQ29B,YAAa,QARzD,sGAAD,IAgCMj4B,UAAW3B,EAAQmpB,cANrB,SAQE,cAAC7mB,EAAA,EAAD,qBAGF,cAACwB,EAAA,EAAD,CACErK,GAAG,QACHqJ,QAAQ,YACRa,QAAS,kBAAM6H,GAAQ,IACvB7J,UAAW3B,EAAQ6X,aAJrB,2BCkEOgiB,GAxGK,SAACp1B,GACnB,IAAQ1K,EAA6B0K,EAA7B1K,OAAQsB,EAAqBoJ,EAArBpJ,QAASY,EAAYwI,EAAZxI,QACzB,EAAwBoE,mBAAS,IAAjC,mBAAOmK,EAAP,KAAasvB,EAAb,KACA,EAAgCz5B,oBAAS,GAAzC,mBAAO0D,EAAP,KAAiBg2B,EAAjB,KACA,EAAoC15B,oBAAS,GAA7C,mBAAO25B,EAAP,KAAmBC,EAAnB,KACA,EAAsC55B,mBAAS,IAA/C,mBAAOu5B,EAAP,KAAoBM,EAApB,KACMl6B,EAAUjL,KAChB,EAAwCsL,mBAAS,CAC/CC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,MAF/B,mBAAOsP,EAAP,KAAqBsqB,EAArB,KAKAluB,qBAAU,WACR,GAAIhQ,EAAQuO,KAAM,CAChB,IAAIvR,EACFgD,EAAQqO,SACRrO,EAAQqO,QAAQ5P,SAChBuB,EAAQqO,QAAQ5P,QAAQiO,OAAO4B,KAAKtO,EAAQqO,QAAQ5P,SAAS,IAC3DzB,GAAOihC,EAAejhC,EAAM,GAAGuG,iBACnCs6B,EAAQ79B,EAAQuO,MAChBuvB,GAAY,GACZE,GAAc,MAEf,CAACh+B,IAsCJ,OACE,qCACG+9B,EACC,cAACzsB,GAAA,EAAD,CAAK5L,UAAW3B,EAAQ+1B,WAAxB,SACE,eAACn0B,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAAvC,UACE,eAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAACO,EAAA,EAAD,CAAYX,UAAW3B,EAAQi2B,kBAA/B,0BACA,cAAC3zB,EAAA,EAAD,CAAYX,UAAW3B,EAAQk2B,gBAA/B,SAAiDj6B,EAAQuO,UAE3D,cAAC5I,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC8M,GAAA,EAAD,CAAYpV,GAAG,QAAQkK,QAhBd,WACnBs2B,GAAc,GACdF,GAAY,GACZD,EAAQ,IACRr1B,EAAM/J,QAAQuB,EAAQ09B,UAAW19B,EAAQ29B,YAAa,UAAW,KAYvD,SACE,qBAAKx3B,IAAI,mBAAmBC,IAAI,mBAKtC,KACHoC,EAAM21B,eACL,cAACv3B,EAAA,EAAD,CACEI,WAAY,CACVQ,aACE,cAACN,EAAA,EAAD,CAAgBlN,SAAS,MAAzB,SACE,cAAC6N,EAAA,EAAD,CAAQH,QA1DA,WACpBw2B,EAAgB,2BACXtqB,GADU,IAEbvP,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAE/B,sBAAC,4BAAAxI,EAAA,mEAEO6hC,EAFP,gCAGWr6B,GAAoBxF,EAAQsB,EAASY,EAAQ09B,UAAWC,GAHnE,uBAK0Bl6B,GAAqB3F,EAAQsB,EAASY,EAAQ09B,UAAWnvB,GALnF,OAKSlN,EALT,OAMGw8B,EAAQ,IACRC,GAAY,GACZE,GAAc,GACdx1B,EAAM/J,QAAQuB,EAAQ09B,UAAW19B,EAAQ29B,YAAa,UAAWt8B,GATpE,kDAWG68B,EAAgB,2BACXtqB,GADU,IAEbvP,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,6BAdjC,yDAAD,IAoDY,SACE,qBAAK6B,IAAI,yBAAyBC,IAAI,cAK9C5I,GAAG,UACH8B,KAAK,UACL8H,YAAY,0BACZP,QAAQ,WACRC,WAAS,EACTrK,MAAO8R,EACPjH,SA5CkB,SAACvC,GACzB84B,EAAQ94B,EAAEC,OAAOvI,QA4CXsK,aAAa,MACbe,SAAUA,IAEV,KACH8L,EAAazX,MAAMR,QAAU,cAAC,GAAD,CAAU2I,IAAKsP,EAAazX,MAAMmI,IAAK3I,OAAQ,aCuBpEyiC,GAhIQ,SAAC51B,GACtB,I9E6RwCwF,E8E7RhChO,EAA0EwI,EAA1ExI,QAASq+B,EAAiE71B,EAAjE61B,cAAeC,EAAkD91B,EAAlD81B,cAAeC,EAAmC/1B,EAAnC+1B,YAAap0B,EAAsB3B,EAAtB2B,MAAOq0B,EAAeh2B,EAAfg2B,WAC7Dz6B,EAAUjL,KAChB,OACE,qCACkB,SAAf0lC,GACC,cAAC74B,EAAA,EAAD,CAAMC,WAAS,EAACF,UAAW3B,EAAQ41B,iBAAnC,SACG35B,EAAQqO,UAAgC,YAApBrO,EAAQqO,SAAyBrO,EAAQqO,QAAQowB,SACpE,qCACE,sBACE/4B,UAAW3B,EAAQ40B,KACnB9pB,MAAO,CACL1T,gBAAiBgP,EAAQ,IAAM,EAAI,UAAY,WAHnD,SAME,cAAC9D,EAAA,EAAD,CAAYX,UAAW3B,EAAQ21B,YAA/B,SAA6C15B,EAAQuO,SAEvD,cAAC+C,GAAA,EAAD,CAAKoI,GAAI,EAAT,SACE,cAAC3F,GAAD,CAAcgB,MAAM,OAApB,SACE,cAACnC,GAAA,EAAD,CACEpV,GAAG,WACHqV,KAAK,QACLnL,QAAS,SAACkI,GAAD,OAAW2uB,EAAY3uB,EAAO5P,IAHzC,SAKE,qBAAKmG,IAAI,kBAAkBC,IAAI,oBAMvC,qCACE,uBACEV,UAAW3B,EAAQ40B,KACnB9pB,MAAO,CACL1T,gBAAiBgP,EAAQ,IAAM,EAAI,UAAY,WAHnD,UAME,cAAC9D,EAAA,EAAD,CAAYX,UAAW3B,EAAQg1B,SAA/B,SAA0C/4B,EAAQuO,OACjDvO,EAAQ4N,MAAQ5N,EAAQ4N,KAAKxB,KAC5B,mCACE,cAACwC,GAAA,EAAD,CAAQzI,IAAKnG,EAAQ4N,KAAKxB,IAAK1G,UAAW3B,EAAQgK,aAKxD,eAACuD,GAAA,EAAD,CAAKoI,GAAI,EAAT,UACE,cAAC3F,GAAD,CAAcgB,MAAM,OAApB,SACE,cAACnC,GAAA,EAAD,CACEpV,GAAG,aACHqV,KAAK,QACLuC,MAAM,OACN1N,QAAS,SAACkI,GAAD,OAAW0uB,EAAc1uB,EAAO5P,IAJ3C,SAME,qBAAKmG,IAAI,0BAA0BC,IAAI,aAG3C,cAAC2N,GAAD,CAAcgB,MAAM,SAApB,SACE,cAACnC,GAAA,EAAD,CACEpV,GAAG,aACHqV,KAAK,QACLuC,MAAM,SACN1N,QAAS,SAACkI,GAAD,OAAWyuB,EAAczuB,EAAO5P,IAJ3C,SAME,qBAAKmG,IAAI,4BAA4BC,IAAI,uBAQvC,WAAfo4B,GACC,cAAC74B,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,mCACE,uBACEF,UAAW3B,EAAQ40B,KACnB9pB,MAAO,CACL1T,gBAAiBgP,EAAQ,IAAM,EAAI,UAAY,WAHnD,UAME,cAAC9D,EAAA,EAAD,CAAYX,UAAW3B,EAAQg1B,SAA/B,SACE,cAAChlB,GAAD,CACEgB,MACE,qCACE,cAAC1O,EAAA,EAAD,W9E0MoB2H,E8E1MmBhO,EAAQgO,O9E2M/DA,EAAe,WAAaA,EACzB,Q8E3Ma,uBACA,cAAC3H,EAAA,EAAD,UACG6G,GAA2BlN,EAAQmO,uBAN5C,SAWE,cAAC9H,EAAA,EAAD,CAAYX,UAAW3B,EAAQg1B,SAA/B,SAA0C/4B,EAAQkO,sBAGrDlO,EAAQ+N,OACP,mCACE,eAAC6E,GAAA,EAAD,CAAYlN,UAAW3B,EAAQq2B,eAA/B,UACE,qBAAK10B,UAAW3B,EAAQgK,MAAO5H,IAAKnG,EAAQ+N,MAAO3H,IAAI,cACtDpG,EAAQiO,aACP,cAAC8F,GAAD,CACEgB,MACE,mCACE,cAAC1O,EAAA,EAAD,4BACErG,EAAQiO,YAAY,IAAMjO,EAAQiO,YAAY,GAAGM,UAIvDsC,UAAU,cARZ,SAUE,qBACE1K,IAAI,kBACJC,IAAI,iBACJV,UAAW3B,EAAQo2B,8BCtG9B,SAASuE,GAAKl2B,GAC3B,IAAMzE,EAAUjL,KAChB,EAAsCsL,oBAAS,GAA/C,mBAAOgtB,EAAP,KAAoBC,EAApB,KACA,EAA8CjtB,mBAAS,IAAvD,mBAAOu6B,EAAP,KAAwBC,EAAxB,KACA,EAAgCx6B,mBAAS,IAAzC,mBAAOs0B,EAAP,KAAiBmG,EAAjB,KACA,EAA8Cz6B,oBAAS,GAAvD,mBAAO06B,EAAP,KAAwBC,EAAxB,KAKMV,EAAgB,SAACzuB,EAAO5P,GAC5BqxB,GAAe,GACfuN,EAAmB5+B,IAsBfu+B,EAAc,SAAC3uB,EAAO5P,GAC1B++B,GAAmB,GACnBH,EAAmB5+B,IAMfs+B,EAAgB,SAAC1uB,EAAO5P,GAC5BwI,EAAMw2B,iBAAiBh/B,IAGnBi/B,EAAiBxvB,iBAAO,MAQ9B,OAPAO,qBAAU,WACR6uB,EAAYr2B,EAAMkwB,UAClBwG,YAAW,WAAO,IAAD,EACf,UAAAD,EAAepvB,eAAf,SAAwBsvB,mBACvB,OACF,CAAC32B,EAAMkwB,WAGR,qCACGA,EAASluB,QAAUhC,EAAM42B,UACxB,eAACz5B,EAAA,EAAD,CAAMG,MAAI,EAACJ,UAAW3B,EAAQ20B,SAA9B,UACGA,EAASjvB,KAAI,SAACzJ,EAASuZ,GACtB,OACE,gCACwB,SAArB/Q,EAAMg2B,YACL,qCACE,eAAC74B,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAAC0L,GAAA,EAAD,UACE,cAAC1C,GAAA,EAAD,CACE/H,QAAQ,SACRV,IAAKgG,GAAsBnM,EAAQH,gBAGvC,cAACwG,EAAA,EAAD,CAAYX,UAAW3B,EAAQ5G,KAA/B,SACGkP,GAAerM,EAAQV,WAG5B,cAAC,GAAD,CACE9B,GAAG,iBACHwC,QAASA,EACTq+B,cAAeA,EACfC,cAAeA,EACfC,YAAaA,EACbp0B,MAAOoP,EACPilB,WAAYh2B,EAAMg2B,aAEpB,cAACn4B,EAAA,EAAD,CAAYX,UAAW3B,EAAQ80B,UAA/B,SACG74B,EAAQq/B,UAIO,WAArB72B,EAAMg2B,YACL,qCACE,eAAC74B,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAAC0L,GAAA,EAAD,UACE,cAAC1C,GAAA,EAAD,CACE/H,QAAQ,SACRV,IAAKgG,GAAsBnM,EAAQH,gBAGvC,cAACwG,EAAA,EAAD,CAAYX,UAAW3B,EAAQ5G,KAA/B,SACGkP,GAAerM,EAAQV,WAG5B,cAAC,GAAD,CACEU,QAASA,EACTw+B,WAAYh2B,EAAMg2B,WAClBr0B,MAAOoP,IAET,cAAClT,EAAA,EAAD,CAAYX,UAAW3B,EAAQ80B,UAA/B,SACG74B,EAAQq/B,YA/CP9lB,MAsDd,qBAAKrJ,IAAK+uB,OAGZ,cAACv4B,GAAA,EAAD,CAAOC,SAAU,OAAQjB,UAAW3B,EAAQ6P,aAA5C,sCAKF,cAAC,GAAD,CACEpW,GAAG,SACHuX,MAAM,gBACNzF,KAAM8hB,EACN7hB,QAAS8hB,EACThE,UA7GgB,WACpB,sBAAC,4BAAAvxB,EAAA,+EAE0BmH,GACrBuF,EAAM1K,OACN0K,EAAMpJ,QACNu/B,EAAgBjB,WALrB,OAESr8B,EAFT,OAOGmH,EAAM/J,QAAQkgC,EAAgBjB,UAAWr8B,EAASkC,iBAPrD,sGAAD,IA6GIoqB,cAAe,iBANjB,6CAUA,cAAC,GAAD,CACE5Y,MAAM,gBACNzF,KAAMwvB,EACNvvB,QAASwvB,EACT3/B,QAASoJ,EAAMpJ,QACftB,OAAQ0K,EAAM1K,OACdkC,QAAS2+B,EACTlgC,QAAS+J,EAAM/J,QAPjB,6CAWC+J,EAAM42B,UACL,cAACz5B,EAAA,EAAD,CAAME,QAAQ,SAASD,WAAS,EAAhC,SACE,cAAC0L,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC3R,EAAA,EAAD,QAGF,KACJ,cAAC,GAAD,CACEhI,QAASwI,EAAM82B,cACflgC,QAASoJ,EAAMpJ,QACftB,OAAQ0K,EAAM1K,OACdW,QAAS+J,EAAM/J,QACf0/B,eAAgBzF,EAASluB,YCxKlB,SAAS+0B,GAAc/2B,GACpC,IAAMzE,EAAUjL,KAChB,EAA0BsL,mBAAS,GAAnC,mBAAOtD,EAAP,KAAc0+B,EAAd,KACA,EAA0Bp7B,mBAAS,CACjCC,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,MAF/B,mBAAOE,EAAP,KAAcC,EAAd,KAIMlC,EhFoQa,KAFN,IAAIqI,MACM60B,SAAS,EAAG,EAAG,EAAG,GgFxOzC,OAzBAzvB,qBAAU,WACRvL,EAAS,2BACJD,GADG,IAENH,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAO2I,IAAK,OAE/B,sBAAC,4BAAAxI,EAAA,+EAE+BwG,GAC1BkG,EAAM1K,OACN0K,EAAMtJ,YACNqD,GALL,OAESi3B,EAFT,OAOGgG,EAAShG,GAPZ,gDASG/0B,EAAS,2BACJD,GADG,IAENH,QAAS,CAAE1I,QAAQ,EAAO2I,IAAK,IAC/BnI,MAAO,CAAER,QAAQ,EAAM2I,IAAK,KAAEtE,YAZnC,wDAAD,KAiBC,CAACwI,EAAMtJ,cAGR,qCACE,eAACmH,EAAA,EAAD,CAAYX,UAAW3B,EAAQ01B,kBAA/B,mBACS34B,EADT,OAGC0D,EAAMrI,MAAMR,QAAU,cAAC,GAAD,CAAU2I,IAAKE,EAAMrI,MAAMmI,IAAK3I,OAAQ,YC1CtD,SAAS+jC,GAAWl3B,GACjC,IAAMzE,EAAUjL,KAChB,OACE,qCACE,cAAC+O,EAAA,EAAD,CACErK,GAAG,OACHkK,QAAS,WACPc,EAAMm3B,cAAc,SAEtBj6B,UACuB,SAArB8C,EAAMg2B,WACFz6B,EAAQ61B,cACR71B,EAAQ81B,eARhB,kBAaA,cAAChyB,EAAA,EAAD,CACErK,GAAG,MACHkK,QAAS,WACPc,EAAMm3B,cAAc,WAEtBj6B,UACuB,WAArB8C,EAAMg2B,WACFz6B,EAAQ61B,cACR71B,EAAQ81B,eARhB,uBCWN,IAqTe+F,GArTE,WACf,IAAMC,EAAcpwB,kBAAO,GACrB1L,EAAUjL,KACV+P,EAAWi3B,cACThiC,EAAWo1B,KAAXp1B,OACR,EAAgCsG,mBAAS,IAAzC,mBAAOs0B,EAAP,KAAiBmG,EAAjB,KACA,EAA8Bz6B,qBlFqP1B1H,aAAaW,QAAQ,yBAChBT,KAAKU,MAAMZ,aAAaW,QAAQ,0BkFtPzC,mBAAO67B,EAAP,KAAgBmC,EAAhB,KACA,EAA8Bj3B,mBAAS,IAAvC,mBAAOhF,EAAP,KAAgB2gC,EAAhB,KACA,EAA8B37B,oBAAS,GAAvC,mBAAOG,EAAP,KAAgB4sB,EAAhB,KACA,EAA0C/sB,qBAA1C,mBAAO47B,EAAP,KAAsBC,EAAtB,KACA,EAAsD77B,oBAAS,GAA/D,mBAAOg5B,EAAP,KAA4B8C,EAA5B,KACA,EAA0C97B,mBAAS,IAAnD,mBAAOk7B,EAAP,KAAsBN,EAAtB,KACA,EAAoC56B,mBAAS,QAA7C,mBAAOo6B,EAAP,KAAmBmB,EAAnB,KACA,EAAkCv7B,mBAAS,IAA3C,mBAAO3D,EAAP,KAAkBgwB,EAAlB,KACA,EAAoCrsB,mBAAS,GAA7C,mBAAOhG,EAAP,KAAmB+hC,EAAnB,KACA,EAAwB/7B,mBAAS,IAAjC,oBAAO9F,GAAP,MAAakZ,GAAb,MAEAxH,qBAAU,WACRowB,KACA5jC,EAAgB,wBAAyBqM,EAASF,MAAMvJ,SACxDqxB,EAAa5nB,EAASF,MAAMvJ,SAC5B,sBAAC,4BAAAtD,EAAA,+EAEiCsG,GAC5BtE,EACA+K,EAASF,MAAMvJ,SAJpB,OAES+wB,EAFT,OAMG4P,EAAW5P,GANd,sGAAD,KAUC,IAEHngB,qBAAU,WACW,SAAfwuB,EACF/N,EAAa5nB,EAASF,MAAMvJ,SACJ,WAAfo/B,GACT/N,EAAa,UAAY5nB,EAASF,MAAMvJ,WAIzC,CAACo/B,IAEJxuB,qBAAU,WACJ6vB,EAAYhwB,QACdgwB,EAAYhwB,SAAU,EAElBpP,GAAW4/B,OAGhB,CAACnH,IAEJlpB,qBAAU,WACJvP,IAAc8D,GAAS87B,OAG1B,CAAC5/B,IAKJ,IAAM2/B,GAAsB,WAC1BjP,GAAW,GACX,sBAAC,4BAAAr1B,EAAA,+EAEgCgG,GAC3BhE,EACA+K,EAASF,MAAMvJ,SAJpB,OAES+5B,EAFT,OAMG38B,EAAgB,uBAAwB28B,EAAel9B,MACvDo/B,EAAWlC,EAAel9B,MAC1BkkC,EAAchH,EAAe/6B,YAC7BoZ,GAAQ2hB,EAAep8B,MAT1B,2GAAD,IAiBIsjC,GAAuB,WAC3BxB,EAAY,IACZ,sBAAC,sBAAA/iC,EAAA,wFAAAA,EAAA,0CAAAA,EAAA,sEAEiC4E,GAAc5C,EAAQ2C,GAFvD,OAOG,GALM6/B,EAFT,OAGSC,EAAe,GACjB7yB,EAAgB,GAChBvD,EAAQ,EACRq2B,EAAc,GACdF,EACF,KAAOn2B,GAAS+uB,EAAQ1uB,QACtBL,IAEAm2B,EAAgB72B,KAAI,SAACkE,EAAgBguB,GAanC,IlF2IqBvuB,EkF5HrB,OA3BAM,EAAgBC,EAAe3N,SACjBq/B,KAAOxzB,GAAgB8B,EAAe+vB,WACpDhwB,EAAcgwB,UAAY/vB,EAAe+vB,UACzChwB,EAAcW,QAAUV,EAAeU,QACvCX,EAAciwB,YACZhwB,EAAeU,SACfV,EAAeU,QAAQowB,SACvB9wB,EAAeU,QAAQowB,QAAQ,KAAK,GAAGl7B,gBACzCmK,EAAca,KAAOH,GACnBT,EACAD,OlF6ImBN,EkF3IkB8rB,EAAQ/uB,KlF4IxCiD,EAAOxN,KAAKpC,MkF3IGmQ,EAAe/N,OACnC8N,EAAcpO,KAAO0M,GACnBktB,EAAQ/uB,GAAOvK,KAAKN,MAEtBoO,EAAc7N,WAAaq5B,EAAQ/uB,GAAOvK,KAAKC,YAEjDiO,GAAoBJ,GACpB8yB,EAAc/yB,GACZC,EACAC,EACA7P,EACA2C,GAEF8/B,EAAa/6B,KAAKg7B,IACX,KAKb3B,EAAY,aAAI,IAAI5C,IAAIsE,KACxBpP,GAAW,GA7Cd,2GA+CGA,GAAW,GA/Cd,uDAAD,IAsFFnhB,qBAAU,WACJvP,IACF3C,EAAO2iC,iBACP3iC,EAAO4iC,YAAY,CACjB1gC,QAAS,YAA6B,IAAvB2gC,EAAsB,oBAC/BjzB,EAAgB,GAChBkzB,EACF1H,GACAA,EAAQn6B,QACN,SAACqO,GAAD,OAAYA,EAAOxN,KAAKpC,KAAOmjC,EAAgBE,aAOnD,GALAnzB,EAAgBizB,EAAgB3gC,QAC5B4gC,EAAap2B,SACfkD,EAAcpO,KAAOshC,EAAa,GAAGhhC,KAAKN,KAC1CoO,EAAc7N,WAAa+gC,EAAa,GAAGhhC,KAAKC,YAGhD6N,EAAc1N,SACd0N,EAAc1N,QAAQ4N,MACtBF,EAAc1N,QAAQ4N,KAAKpQ,IAC3BkQ,EAAc1N,QAAQ4N,KAAKtO,OAC1BoO,EAAc1N,QAAQ4N,KAAKxB,IAC5B,CACA,IAAMA,EAAMtO,EAAO+P,WAAW,CAC5BzO,QAASqB,EACTjD,GAAIkQ,EAAc1N,QAAQ4N,KAAKpQ,GAC/B8B,KAAMoO,EAAc1N,QAAQ4N,KAAKtO,OAEnCoO,EAAcE,KAAKxB,IAAMA,EAE3BsB,EAAc2xB,KAAOxzB,GAAgB80B,EAAgBjD,WACrDhwB,EAAcgwB,UAAYiD,EAAgBjD,UAC1CmB,GAAY,SAAClC,GAAD,6BAAkBA,GAAlB,CAA4BjvB,UAG5C5P,EAAOgjC,UAAU,CAAEngC,SAAU,CAACF,QAG/B,CAACy4B,IAEJ,IlFTyCnuB,GkFczC,OACE,qCACE,cAACkT,GAAA,EAAD,CAAQlJ,MAAM,aACd,eAACpP,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAACY,QAAS,EAAjD,UACE,eAACb,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAf,UACE,cAACL,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAAvC,SACE,eAACD,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAIN,UAAW3B,EAAQ00B,OAAtC,UACE,eAAC9yB,EAAA,EAAD,CAAME,QAAQ,aAAaD,WAAS,EAApC,UACE,cAAC0L,GAAA,EAAD,CAAKmI,GAAI,EAAT,SACE,cAAC7K,GAAA,EAAD,CAAQlJ,UAAW3B,EAAQgF,OAAQlC,QAAQ,SAA3C,SACGwD,GAAuBxB,EAASF,MAAMvJ,aAG3C,eAACuG,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,GAAIE,GAAI,EAA9B,UACkB,SAAfu4B,GACC,wBAAO94B,UAAW3B,EAAQ4I,OAA1B,UACG9D,EAASF,MAAMvJ,QADlB,KAC6BA,EAAQE,KADrC,OAIc,WAAfk/B,GACC,wBAAO94B,UAAW3B,EAAQ4I,OAA1B,UACG9D,EAASF,MAAMvJ,QADlB,cACsCA,EAAQE,KAD9C,OAIF,uBACA,uBAAOoG,UAAW3B,EAAQuP,QAA1B,UlFvCyBvI,GkFwCK3L,EAAQG,YlFvClDwL,IAAUA,GAAOP,OAAS,GACrBO,GAAOnB,UAAU,EAAG,IAAM,MAE5BmB,SkFuCO,cAACpF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAGiY,GAAI,EAA7B,SACE,eAACvY,EAAA,EAAD,CAAME,QAAQ,gBAAgBD,WAAS,EAAvC,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,IACV,cAACH,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAKyvB,GAAI,EAAT,SACE,cAACrB,GAAD,CACElB,WAAYA,EACZmB,cAAeA,gBAOX,SAAfnB,GACC,cAACltB,GAAA,EAAD,CAAKyvB,GAAI,EAAT,SACE,cAACp7B,EAAA,EAAD,CAAME,QAAQ,SAASD,WAAS,EAAhC,SACE,cAACiC,EAAA,EAAD,CAAQC,UAAQ,EAACpC,UAAW3B,EAAQy1B,cAApC,SACE,cAAC+F,GAAD,CACErgC,YAAa2J,EAASF,MAAMvJ,QAC5BtB,OAAQA,eAQtB,cAAC6H,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAf,SACE,cAAC04B,GAAD,CACEhG,SAAUA,EACV0G,UAAW76B,EACXzG,OAAQA,EACRsB,QAASyJ,EAASF,MAAMvJ,QACxBX,QA3IU,SACpBuiC,EACArD,EACAv6B,EACA69B,GAEA,IAAI3E,EAAgB5D,EAAS35B,QAC3B,SAAC+G,GAAD,OAAUA,EAAK43B,YAAcsD,KAE3BE,EAAkBxI,EAAS35B,QAAO,SAAC0V,GACrC,OAAOA,EAAIipB,UAAUpwB,SAAS0zB,MAE5B59B,GACa,SAAXA,IAAmB89B,EAAgB,GAAG7yB,QAAU,IACrC,YAAXjL,GAAwB69B,GAC1BjC,EAAiB,IACjBkC,EAAgB,GAAG3yB,KAAO0yB,EAAgBxkC,OACtB,YAAX2G,GACT47B,EAAiB,MAGnBkC,EAAgB,GAAG7yB,QAAU,UAC7B6yB,EAAgB,GAAGvD,YAAcA,GAEnC,IAAMwD,EAAezI,EAAS+D,WAAU,SAAChoB,GACvC,OAAOA,EAAIipB,UAAUpwB,SAAS0zB,MAEhC1E,EAAcI,OAAOyE,EAAc,EAAGD,EAAgB,IACtDrC,EAAYvC,IAgHFgD,cAAeA,EACfN,iBAAkBA,EAClBR,WAAYA,SAIlB,eAAC74B,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGN,UAAW3B,EAAQo1B,eAArC,WACIiE,GACA,cAAChC,GAAD,CACEjC,eAAgBD,EAChBp7B,OAAQA,EACRq+B,qBAAsB,SAACiF,GAAD,OA/EhCnB,EA+EiEmB,QA9EjElB,GAAuB,IA+EbhhC,YAAa2J,EAASF,MAAMvJ,QAC5BhB,WAAYA,EACZE,KAAMA,KAGT8+B,GACC,cAAC,GAAD,CACEA,oBAAqB,SAACiE,GAAD,OACnBnB,EAAuBmB,IAEzBj0B,OAAQ4yB,EACRliC,OAAQA,cC/TPy2B,GATE,WACf,OACE,mCACE,cAAC,GAAD,UACE,cAAC,GAAD,SCNKz7B,GAAYC,aAAW,SAACkb,GAAD,MAAY,CAC9CqtB,UAAW,CACTxmC,MAAO,WAETymC,KAAM,CACJtoC,QAAS,QAEXuoC,OAAQ,CACNpnC,MAAO,QACPlB,OAAQ,MACRiB,OAAQ,OACR0X,UAAW,oBACX1W,gBAAiB,QACjB6X,OAAQ,oBACR5Z,aAAc,MACdC,QAAS,EACTsB,KAAK,8HACLE,cAAe,qCACfC,MAAO,UACPtB,SAAU,QAEZioC,KAAM,CACJtoC,WAAY,sCACZC,aAAc,MACdC,QAAS,EACTyB,MAAO,QACPV,MAAO,QACPlB,OAAQ,MACRiB,OAAQ,OACRX,SAAU,OACV,UAAW,CACTL,WAAY,sCACZ2B,MAAO,UAIX0nB,SAAU,CACR7nB,KAAK,+KACLE,cAAe,qCACfqhB,eAAgB,YAChBphB,MAAO,UACPpB,OAAQ,UACRL,QAAS,EACT,UAAW,CACTF,WAAY,UACZ2B,MAAO,YAGXQ,OAAQ,CACNb,YAAa,MACbK,MAAM,SAER4mC,cAAc,CACZjnC,YAAa,OAEfioB,WAAY,CACVznB,cAAe,OACfT,WAAY,OACZW,gBAAiB,UACjBL,MAAO,UACP,UAAW,CACTG,cAAe,OACfT,WAAY,OACZW,gBAAiB,UACjBL,MAAO,YAGXshB,YAAa,CACX3hB,YAAa,OAEf8hB,SAAS,CACPtjB,QAAQ,uBC1CG8sB,GA3BI,SAAC,GAAe,IAAbpd,EAAY,EAAZA,MACd5E,EAAUjL,KAChB,OACE,cAAC6M,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAaW,QAAS,EAA9C,SACE,cAACb,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACwL,GAAA,EAAD,CAAK5L,UAAYiD,EAAMojB,eAA0ChoB,EAAQ0X,kBAAjC1X,EAAQ2X,eAAhD,UACE,cAAC/V,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACyL,GAAA,EAAD,CAAK0U,EAAG,EAAR,SACE,qBACE5f,IAAI,GACJD,IACGwC,EAAMojB,eAEH,iCADA,gDAMZ,cAAC1lB,EAAA,EAAD,CAAYsI,OAAO,gBAAgB9H,QAAQ,QAAQP,MAAM,SAAzD,yCCtBGxB,GAAe,SAAC,GAAD,IAAGsb,EAAH,EAAGA,SAAUzX,EAAb,EAAaA,MAAOrJ,EAApB,EAAoBA,KAApB,OAA+B,SAACyF,EAAGtI,GACvC,cAAlBsI,EAAEC,OAAO1F,KACX8gB,EAAS,2BAAKzX,GAAN,IAAa2X,iBAAiB,EAAMuJ,UAAW9kB,EAAEC,OAAOvI,SACrC,2BAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BAAKzX,GAAN,IAAaogB,uBAAwBhkB,EAAEC,OAAOvI,SAC3B,uBAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAENqgB,mBAAoBjkB,EAAEC,OAAOvI,MAC7BklC,yBAAyB,KAEA,sBAAlB58B,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAENsgB,kBAAmBlkB,EAAEC,OAAOvI,MAC5BmlC,wBAAwB,KAEC,0BAAlB78B,EAAEC,OAAO1F,KAClB8gB,EAAS,2BACJzX,GADG,IAENugB,sBAAuBnkB,EAAEC,OAAOvI,MAChColC,4BAA4B,KAEH,oBAAlB98B,EAAEC,OAAO1F,KAClB8gB,EAAS,2BAAKzX,GAAN,IAAaygB,gBAAiBrkB,EAAEC,OAAO4b,WAC7B,mCAATthB,EACT8gB,EAAS,2BAAKzX,GAAN,IAAawgB,+BAAgC1sB,KAC1B,0BAAlBsI,EAAEC,OAAO1F,KAClB8gB,EAAS,2BAAKzX,GAAN,IAAamgB,sBAAuB/jB,EAAEC,OAAOvI,SACnC,yBAAT6C,IACLyF,EAAEC,OAAO4b,QACXR,GAAS,SAACqM,GAAD,mBAAC,eACLA,GADI,IAEPpD,qBAAsBtkB,EAAEC,OAAO4b,QAC/BiJ,UAAW,SAGbzJ,EAAS,2BAAKzX,GAAN,IAAa0gB,qBAAsBtkB,EAAEC,OAAO4b,cCjBpDqE,GACJ,qCACE,+DACA,mBACEpW,MAAO,CAAE7T,WAAY,IAAKF,MAAO,QAASoqB,mBAAoB,QAC9DhW,KAAK,0DAFP,kBAMA,wDAsRW4yB,GAlRkB,SAAC,GAAqC,IAAnCn5B,EAAkC,EAAlCA,MAAOyX,EAA2B,EAA3BA,SAAUW,EAAiB,EAAjBA,WAC7Chd,EAAUjL,KACVuoB,EAA+BrU,GAAgBrE,EAAM0gB,sBACrDjI,EAAqBpU,GAAgBrE,EAAMygB,iBAEjD,OAAKzgB,EAAMojB,eAyQF,6BAvQL,mCACE,eAACzK,GAAA,EAAD,CAAM5b,UAAW3B,EAAQw9B,KAAzB,UACE,eAACjwB,GAAA,EAAD,WACE,eAAC3L,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAO6I,OAAO,aAAajJ,UAAW3B,EAAQu9B,UAA9C,0BAIF,cAAC37B,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAM,+JAApB,SACE,qBAAK5O,IAAI,yBAAyBC,IAAI,yBAM9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,YACHqJ,QAAQ,WACRvH,KAAK,YACLnD,MAAOwM,EAAMo5B,eACbj6B,SAAUuZ,GAAgC1Y,EAAMq5B,kBAChD56B,YAAY,aACZ3K,MAAOkM,EAAMkhB,UACbviB,SAAUxC,GAAa,CAAEsb,WAAUzX,UACnCV,KAAK,QACLnB,WAAS,SAIf,cAACnB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC0b,GAAA,EAAD,CACEhkB,GAAG,WACHojB,QAASS,EACT/Z,SAAUxC,GAAa,CACrBsb,WACAzX,QACArJ,KAAM,yBAERwI,SAAUa,EAAMq5B,sBAGpB,cAACr8B,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAKqI,GAAI,EAAGpI,GAAI,EAAhB,SACE,cAAClL,EAAA,EAAD,CAAYsI,OAAO,YAAY9H,QAAQ,QAAvC,+CAOR,uBACA,cAAClB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,SACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAf,UACE,uBAAOxI,GAAG,aAAakI,UAAW3B,EAAQu9B,UAA1C,6DAGA,cAAChwB,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAACE,GAAA,EAAD,CAAaxZ,KAAK,QAAQnB,WAAS,EAAnC,SACE,cAAC6a,GAAA,EAAD,CACEnkB,GAAG,sBACHqJ,QAAQ,WACRpK,MAAOkM,EAAMogB,uBACbzpB,KAAK,yBACLgI,SAAUxC,GAAa,CAAEsb,WAAUzX,UACnCiZ,UAAW,CACT3E,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd0E,mBAAoB,MAXxB,SAcE,cAACnT,GAAA,EAAD,CAAUjS,MAAM,cAAhB,oCAMV,uBACA,eAAC6U,GAAA,EAAD,CAAKqI,GAAI,EAAT,UACE,eAAChU,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAOsY,OAAO,UAAU1Y,UAAW3B,EAAQu9B,UAA3C,oCAIF,cAAC37B,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAOkQ,GAAaE,aAAW,EAA7C,SACE,qBAAKhf,IAAI,yBAAyBC,IAAI,yBAK9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,qBACHqJ,QAAQ,WACRvH,KAAK,qBACLnD,MAAOwM,EAAMg5B,wBACb5S,WAAYpmB,EAAMg5B,yBAA2B,mCAC7CllC,MAAOkM,EAAMqgB,mBACb1hB,SAAUxC,GAAa,CAAEsb,WAAUzX,UACnCV,KAAK,QACLb,YAAY,uBACZN,WAAS,SAIf,uBACA,eAACwK,GAAA,EAAD,CAAKqI,GAAI,EAAT,UACE,eAAChU,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAOsY,OAAO,UAAU1Y,UAAW3B,EAAQu9B,UAA3C,mCAIF,cAAC37B,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAOkQ,GAAaE,aAAW,EAA7C,SACE,qBAAKhf,IAAI,yBAAyBC,IAAI,yBAK9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,SACHqJ,QAAQ,WACRvH,KAAK,oBACLnD,MAAOwM,EAAMi5B,uBACb7S,WAAYpmB,EAAMi5B,wBAA0B,kCAC5CnlC,MAAOkM,EAAMsgB,kBACb3hB,SAAUxC,GAAa,CAAEsb,WAAUzX,UACnCV,KAAK,QACLnB,WAAS,EACTM,YAAY,6BAIlB,uBACA,eAACkK,GAAA,EAAD,CAAKqI,GAAI,EAAT,UACE,eAAChU,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,uBAAOsY,OAAO,aAAa1Y,UAAW3B,EAAQu9B,UAA9C,uCAIF,cAAC37B,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAK5L,UAAW3B,EAAQwY,SAAxB,SACE,cAACxI,GAAD,CAAcgB,MAAOkQ,GAAaE,aAAW,EAA7C,SACE,qBAAKhf,IAAI,yBAAyBC,IAAI,yBAM9C,cAACkL,GAAA,EAAD,CAAKqI,GAAI,EAAG4H,GAAI,EAAhB,SACE,cAAC3a,EAAA,EAAD,CACEpJ,GAAG,wBACH8B,KAAK,wBACLuH,QAAQ,WACRoB,KAAK,QACL9L,MAAOwM,EAAMk5B,2BACb9S,WACEpmB,EAAMk5B,4BAA8B,sCAEtCplC,MAAOkM,EAAMugB,sBACb5hB,SAAUxC,GAAa,CAAEsb,WAAUzX,UACnC7B,WAAS,EACTM,YAAY,iCAIlB,uBACA,cAACzB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBW,QAAS,EAAjD,SACE,cAACb,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGD,GAAI,GAAIE,GAAI,EAAGiY,GAAI,EAArC,SACE,eAAC5M,GAAA,EAAD,WACE,uBAAO8M,OAAO,aAAa1Y,UAAW3B,EAAQu9B,UAA9C,qCAGA,cAAChwB,GAAA,EAAD,CAAKqI,GAAI,EAAT,SACE,cAAC,GAAD,CACEnc,GAAG,mBACHf,MAAOkM,EAAMwgB,+BACb7hB,SAAUxC,GAAa,CACrBsb,WACAzX,QACArJ,KAAM,8CAOlB,uBACA,eAACqG,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,aAAxB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC0b,GAAA,EAAD,CACEhkB,GAAG,kBACH8B,KAAK,kBACLshB,QAASQ,EACT9Z,SAAUxC,GAAa,CAAEsb,WAAUzX,cAGvC,cAAChD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,CAAKqI,GAAI,EAAGpI,GAAI,EAAhB,SACE,cAAClL,EAAA,EAAD,CAAYsI,OAAO,aAAa9H,QAAQ,QAAxC,wCAOR,cAAClB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACwL,GAAA,EAAD,UACE,eAACzJ,EAAA,EAAD,CAAQnC,UAAW3B,EAAQ2e,WAA3B,UACE,qBAAKvc,IAAI,qBAAqBT,UAAW3B,EAAQqY,YAAahW,IAAI,YACjE,UAAYuC,EAAMkhB,oBAK3B,uBACA,eAAClkB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBW,QAAS,EAAjD,UACE,cAACb,EAAA,EAAD,CAAMG,MAAI,IACV,eAACH,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAAC+B,EAAA,EAAD,CAAQrK,GAAG,SAASkI,UAAW3B,EAAQy9B,OAAQ36B,QAAQ,YAAvD,oBAGA,eAACgB,EAAA,EAAD,CACErK,GAAG,OACHkI,UAAW3B,EAAQ09B,KACnB35B,SAAUa,EAAMwZ,YAChBza,QAASqZ,EACTla,QAAQ,YALV,UAOG8B,EAAMwZ,YACL,cAACna,EAAA,EAAD,CACEC,KAAM,GACNma,UAAW,EACXtnB,MAAM,UACN4K,UAAW3B,EAAQzI,SAGrB,6BAfJ,sBClCC2mC,GA/NS,WACtB,IAAMl+B,EAAUjL,KAChB,EAA0BsL,mBAAS,CACjCilB,sBAAsB,EACtB0C,gBAAgB,EAChBjD,sBAAuB,GACvBe,UAAW,IACXkY,gBAAgB,EAChBJ,yBAAyB,EACzBC,wBAAwB,EACxBC,4BAA4B,EAC5BvhB,iBAAiB,EACjByI,uBAAwB,cACxBC,mBAAoB,GACpBC,kBAAmB,GACnBC,sBAAuB,GACvBC,+BAAgC,GAChCC,gBAAiB,GACjBjtB,MAAO,CACLR,QAAQ,EACR2I,IAAK,IAEPgmB,WAAY,GACZD,SAAU,GACVE,eAAe,EACfH,aAAa,EACbjI,aAAa,EACb6f,mBAAmB,IAzBrB,mBAAOr5B,EAAP,KAAcyX,EAAd,KA2BM8hB,EAAuBl1B,GAAgBrE,EAAMmgB,uBAQnD9Y,qBAAU,WACR,IAAMyK,EAAczQ,KACd0iB,EAActwB,EAAU,SAC9B,sBAAC,sDAAAN,EAAA,0DACK2e,EADL,0CAG0CzZ,GACnCyZ,EAAYjd,GACZkvB,GALP,OAGWzB,EAHX,OAOWkX,EAAiBnX,GACrBvQ,EACAwQ,GATP,EAYiDO,GAC1C/Q,EACAwQ,GAFMQ,EAZb,EAYaA,kBAAmBhB,EAZhC,EAYgCA,aAKvBgB,EAAkBjhB,QAAUigB,EAAajgB,OAAS,GAC9CvO,EAAOsP,GAAuBkf,EAAa,GAAGV,MAElDjB,EAQE7sB,EARF6sB,sBACAC,EAOE9sB,EAPF8sB,uBACAC,EAME/sB,EANF+sB,mBACAC,EAKEhtB,EALFgtB,kBACAI,EAIEptB,EAJFotB,qBACAH,EAGEjtB,EAHFitB,sBACAC,EAEEltB,EAFFktB,+BACAC,EACEntB,EADFmtB,gBAEFhJ,GAAS,SAAC8J,GAAD,MAAgB,CACvBpB,wBACAiD,gBAAgB,EAChBlC,UAAWY,EAAa,GAAG9pB,SAC3BooB,yBACAM,uBACAL,qBACAC,oBACAC,wBACAC,iCACAC,kBACA4Y,kBAAmBG,EAAe9Z,0BAGpCjI,EAAS,2BACJzX,GADG,IAENojB,gBAAgB,EAChBiW,kBAAmBG,EAAe9Z,wBAIpC8Z,EAAe9Z,sBACf8Z,EAAe9W,eACf8W,EAAe9W,gBAAkB1iB,EAAMkhB,WAEvCzJ,GAAS,SAACwK,GAAD,mBAAC,eACLA,GADI,IAEPf,UAAWsY,EAAe9W,cAC1B2W,kBAAmBG,EAAe9Z,0BAzD3C,kDA6DKjI,GAAS,SAAC8J,GAAD,MAAgB,CACvB6B,gBAAgB,MA9DvB,yDAAD,KAoEC,IACH/b,qBAAU,WACJrH,EAAM2X,kBACuB,IAA3B3X,EAAMkhB,UAAUrf,OAClB4V,GAAS,SAAC0K,GAAD,mBAAC,eACLA,GADI,IAEPV,aAAa,EACbjI,aAAa,EACb4f,gBAAgB,EAChB1X,SAAU,2BACVC,WAAY,GACZC,eAAe,OAGjBnK,GAAS,SAACqM,GAAD,mBAAC,eACLA,GADI,IAEPrC,aAAa,EACbjI,aAAa,EACbkI,SAAU,GACVC,WAAY,GACZyX,gBAAgB,EAChBxX,eAAe,UAIpB,CAAC5hB,EAAMkhB,UAAWlhB,EAAM0gB,qBAAsB1gB,EAAM2X,kBACvD,IAAMS,EAAU,uCAAG,WAAOhc,GAAP,iBAAAjJ,EAAA,yDACjBiJ,EAAEG,kBACEyD,EAAMyhB,YAFO,oDAKc,IAA3BzhB,EAAMkhB,UAAUrf,OALH,yCAMR4V,EAAS,2BACXzX,GADU,IAEbyhB,aAAa,EACb2X,gBAAgB,EAChB1X,SAAU,0BACVE,eAAe,EACfD,WAAY,OAZC,UAeZ3hB,EAAMqgB,mBAAmBoD,OAAO5hB,OAfpB,yCAgBR4V,EAAS,2BACXzX,GADU,IAEbg5B,yBAAyB,MAlBZ,UAqBZh5B,EAAMsgB,kBAAkBmD,OAAO5hB,OArBnB,yCAsBR4V,EAAS,2BACXzX,GADU,IAEbi5B,wBAAwB,MAxBX,UA2BZj5B,EAAMugB,sBAAsBkD,OAAO5hB,OA3BvB,0CA4BR4V,EAAS,2BACXzX,GADU,IAEbk5B,4BAA4B,MA9Bf,WAiCjBzhB,GAAS,SAAC8J,GAAD,mBAAC,eACLA,GADI,IAEP/H,aAAa,OAETnlB,EAAQZ,EAAU,WAClB+d,EAAMnQ,MAtCK,4CAyCPuhB,GAA0BpR,EAAKnd,EAAO,CAAE2L,QAAOyX,aAzCxC,2DA2CbA,EAAS,2BACJzX,GADG,IAENyhB,aAAa,EACbjI,aAAa,EACbkI,SAAU,KAAMrqB,QAChBsqB,WAAY,GACZC,eAAe,KAjDJ,2DAAH,sDAsDhB,OACE,qCACG5hB,EAAM4hB,eACL,cAAC,GAAD,CAAU5uB,OAAO,UAAU2I,IAAKqE,EAAM2hB,aAEvC3hB,EAAMyhB,aAAe,cAAC,GAAD,CAAUzuB,OAAO,QAAQ2I,IAAKqE,EAAM0hB,WAC1D,eAAChkB,EAAA,EAAD,CAAYsI,OAAO,QAAQ9H,QAAQ,KAAKnB,UAAW3B,EAAQgR,MAA3D,6BAEE,cAAC,GAAD,CAAc6L,QAASshB,EAAsB56B,SAtK9B,SAACvC,GACpBqb,EAAS,2BACJzX,GADG,IAENmgB,sBAAuB/jB,EAAEC,OAAO4b,iBAqKhC,uBACA,cAACva,EAAA,EAAD,CAAYsI,OAAO,WAAWjJ,UAAW3B,EAAQsY,SAAjD,wCAGA,cAAC,GAAD,CAAY1T,MAAOA,IAClBA,EAAMojB,gBACL,cAACpmB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACmC,EAAA,EAAD,CACEC,KAAM,GACNma,UAAW,EACXtnB,MAAM,UACN4K,UAAW3B,EAAQ29B,kBAIzB,uBACA,cAAC,GAAD,CACE/4B,MAAOA,EACPoY,WAAYA,EACZX,SAAUA,IAEZ,2BCjOSgiB,GAXa,WAE1B,OACE,mCACE,cAAC,GAAD,UACE,cAAC,GAAD,SCqBOC,GAhBA,kBACb,cAAC,IAAD,CAAeC,SAAS,wBAAxB,SACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAM1V,KAAK,IAAI2V,OAAK,EAACl6B,UAAWH,KAChC,cAAC,GAAD,CAAS0kB,KAAK,YAAY2V,OAAK,EAACl6B,UAAWm6B,KAC3C,cAAC,GAAD,CAAS5V,KAAK,aAAa2V,OAAK,EAACl6B,UAAWgW,KAC5C,cAAC,GAAD,CAASuO,KAAK,mBAAmB2V,OAAK,EAACl6B,UAAWyjB,KAClD,cAAC,GAAD,CAASc,KAAK,YAAY2V,OAAK,EAACl6B,UAAWyrB,KAC3C,cAAC,GAAD,CAASlH,KAAK,YAAY2V,OAAK,EAACl6B,UAAWksB,KAC3C,cAAC,GAAD,CAAS3H,KAAK,SAAS2V,OAAK,EAACl6B,UAAWmwB,KACxC,cAAC,GAAD,CAAS5L,KAAK,qBAAqB2V,OAAK,EAACl6B,UAAWu3B,KACpD,cAAC,GAAD,CAAShT,KAAK,oBAAoB2V,OAAK,EAACl6B,UAAW45B,WCpBnDQ,GAAMjnC,YAAO,2BACdknC,eADa,IAEhBC,eAAgBC,SAASC,eAAe,0BAa3BC,GAVH,WACV,OACE,mCACE,cAACC,EAAA,EAAD,CAAgBN,IAAKA,GAArB,SACE,cAAC,GAAD,SCFOO,GAZS,SAACC,GACnBA,GAAeA,aAAuBx3B,UACxC,8BAAqBqhB,MAAK,YAAkD,IAA/CoW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,O,OCDdM,IAASh7B,OACP,cAAC,IAAMi7B,WAAP,UACE,cAAC,GAAD,MAEFZ,SAASC,eAAe,SAM1BG,O","file":"static/js/main.b0e98fcd.chunk.js","sourcesContent":["import React from 'react';\nimport { CssBaseline } from '@material-ui/core';\n\nconst Auth = ({ children }) => {\n  return (\n    <>\n      <CssBaseline />\n      {children}\n    </>\n  );\n};\n\nexport default Auth;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  form: {\n    padding: \"35px 5px 70px 5px\",\n    margin: \"5px\",\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    borderRadius: \"8px\",\n    opacity: 1,\n  },\n  loginTextField: {\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: \"8px\",\n      background: \"white\",\n      // border: \"0.8326995968818665px solid #E6E6E6\"\n    },\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      background: \"white\",\n    },\n    \"& .MuiOutlinedInput-adornedStart\": {\n      background: \"white\",\n    },\n    opacity: 1,\n  },\n  textfieldIcon: {\n    opacity: 0.2,\n    fontSize: \"21px\",\n  },\n  maskPasswordIcon: {\n    cursor: \"pointer\",\n    opacity: 0.3,\n    fontSize: \"21px\",\n  },\n  root: {\n    display: \"table\",\n    backgroundImage: \"url(images/Bg.svg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"auto\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    height: \"100%\",\n    width: \"100%\",\n  },\n  middle: {\n    display: \"table-cell\",\n    verticalAlign: \"middle\",\n  },\n  inner: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n  },\n  logSubtitle: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13.32px/16px var(--unnamed-font-family-proxima-nova)\",\n    // letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"center\",\n    letterSpacing: \"0px\",\n    color: \"#414141\",\n    opacity: 0.6,\n  },\n  button: {\n    background: \"#6387ED 0% 0% no-repeat padding-box\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    width: \"100%\",\n    fontWeight: \"500\",\n    height: \"49px\",\n    textTransform: \"none\",\n    color: \"white\",\n    \"&:hover\": {\n      fontWeight: \"500\",\n      background: \"#6387ED 0% 0% no-repeat padding-box\",\n      color: \"white\",\n    },\n  },\n  disabledButton: {\n    color: \"white!important\",\n    backgroundColor: \"#9eb4f3\",\n  },\n  logIconContainer: {\n    textAlign: \"center\",\n    margin: \"0px 0px 10px 0px\",\n  },\n  floatIcon: {\n    backgroundColor: \"#ecebeb\",\n    borderRadius: \"0x 0px 0px 0px\",\n    padding: \"0px 0px 0px 0px\",\n  },\n  loader: {\n    color: \"white\",\n  },\n});\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://admin.pubnub.com/api',\n  validateStatus: (status) => status < 500,\n});\n","import axios from '../utils/axios';\n\nexport async function signIn(credentials) {\n  const signInResponse = await axios.post('/me', credentials);\n  if (signInResponse.status === 200) {\n    return signInResponse.data;\n  }\n  throw new Error(signInResponse.data.error || \"Something went wrong\");\n}\n","import cookie from 'js-cookie';\n\nexport const setCookie = (key, value) => {\n  cookie.set(key, value, {\n    expires: 1,\n  });\n};\n\nexport const removeCookie = (key) => {\n  cookie.remove(key, {\n    expires: 1,\n  });\n};\n\nexport const getCookie = (key) => {\n  return cookie.get(key);\n};\n\nexport const setLocalStorage = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport const removeLocalStorage = (key) => {\n  localStorage.removeItem(key);\n};\n\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\n\nexport const signout = (next) => {\n  localStorage.clear();\n  next();\n};\n\nexport const isAuth = () => {\n  const cookieChecked = getCookie('token');\n  if (cookieChecked) {\n    if (localStorage.getItem('user')) {\n      return JSON.parse(localStorage.getItem('user'));\n    } else {\n      return false;\n    }\n  }\n};\n","import axios from '../utils/axios';\n\n// To fetch all the PubNub accounts\nexport async function fetchAllAccounts(id, token) {\n  const accountsResponse = await axios.get(`/accounts?user_id=${id}`, {\n    headers: {\n      'X-Session-Token': `${token}`,\n    },\n  });\n  if (accountsResponse.status === 200) {\n    return accountsResponse.data;\n  }\n  throw new Error('Failed to fetch accounts');\n}\n\n// To fetch all the Applications of an PubNub account.\nexport async function fetchAllApps(id, token) {\n  const appsResponse = await axios.get(`/apps?owner_id=${id}`, {\n    headers: {\n      'X-Session-Token': `${token}`,\n    },\n  });\n  if (appsResponse.status === 200) {\n    return appsResponse.data;\n  }\n  throw new Error('Failed to fetch applications');\n}\n\n// To fetch all Channels of a PubNub application.\nexport async function getChannels(pubnub, nextPage, prevPage) {\n  const channelsResponse = await pubnub.objects.getAllChannelMetadata({\n    include: {\n      totalCount: true,\n    },\n    limit: 25,\n    page: {\n      next: nextPage,\n      prev: prevPage,\n    },\n    sort: { updated: 'desc' },\n  });\n  if (channelsResponse.status === 200) {\n    return channelsResponse;\n  }\n  throw new Error('Failed to get PubNub channels');\n}\n\n// To fetch all users of a PubNub application.\nexport async function getUsers(pubnub, nextPage, prevPage, filterBy) {\n  const usersResponse = await pubnub.objects.getAllUUIDMetadata({\n    include: {\n      totalCount: true,\n      customFields: true,\n    },\n    limit: 25,\n    page: {\n      next: nextPage,\n      prev: prevPage,\n    },\n    sort: { updated: 'desc' },\n    filter: filterBy,\n  });\n  if (usersResponse.status === 200) {\n    return usersResponse;\n  }\n  throw new Error('Failed to get PubNub users');\n}\n\n// To add channel metadata to a application keyset\nexport async function addChannelMetadata(\n  pubnub,\n  channelName,\n  channelDescription,\n  channel\n) {\n  const addChannelMetadataResponse = await pubnub.objects.setChannelMetadata({\n    channel,\n    data: {\n      name: channelName,\n      description: channelDescription,\n    },\n  });\n  if (addChannelMetadataResponse.status === 200) {\n    return addChannelMetadataResponse;\n  }\n  throw new Error('Failed to add channel metadata');\n}\n\n// To add user metadata to a application keyset\nexport async function addUserMetadata(\n  pubnub,\n  userName,\n  email,\n  uuid,\n  profileUrl\n) {\n  if (!email) email = null;\n  if (!profileUrl) profileUrl = null;\n  const addUserMetadataResponse = await pubnub.objects.setUUIDMetadata({\n    uuid,\n    data: {\n      name: userName,\n      email,\n      profileUrl,\n    },\n  });\n  if (addUserMetadataResponse.status === 200) {\n    return addUserMetadataResponse;\n  }\n  throw new Error(addUserMetadataResponse.message);\n}\n\n// To delete channel metadata\nexport async function deleteChannelMetadata(pubnub, channel) {\n  const deleteChannelMetadataResponse =\n    await pubnub.objects.removeChannelMetadata({\n      channel: channel,\n    });\n  if (deleteChannelMetadataResponse.status === 200) {\n    return deleteChannelMetadataResponse;\n  }\n  throw new Error('Failed to add user metadata');\n}\n\n// To delete user metadata\nexport async function deleteUserMetadata(pubnub, uuid) {\n  const deleteUserMetadataResponse = await pubnub.objects.removeUUIDMetadata({\n    uuid: uuid,\n  });\n  if (deleteUserMetadataResponse.status === 200) {\n    return deleteUserMetadataResponse;\n  }\n  throw new Error('Failed to add user metadata');\n}\n\n// To edit user metadata\nexport async function editUserMetadata(\n  pubnub,\n  userName,\n  email,\n  uuid,\n  profileUrl\n) {\n  if (!email) email = null;\n  if (!profileUrl) profileUrl = null;\n  const addUserMetadataResponse = await pubnub.objects.setUUIDMetadata({\n    uuid,\n    data: {\n      name: userName,\n      email,\n      profileUrl,\n    },\n  });\n  if (addUserMetadataResponse.status === 200) {\n    return addUserMetadataResponse;\n  }\n  throw new Error('Failed to edit user metadata');\n}\n\n// To edit channel metadata\nexport async function editChannelMetadata(\n  pubnub,\n  channelName,\n  channelDescription,\n  channelID\n) {\n  const addChannelMetadataResponse = await pubnub.objects.setChannelMetadata({\n    channel: channelID,\n    data: {\n      name: channelName,\n      description: channelDescription,\n    },\n  });\n  if (addChannelMetadataResponse.status === 200) {\n    return addChannelMetadataResponse;\n  }\n  throw new Error('Failed to add channel metadata');\n}\n\n//To fetch Messages\nexport async function fetchMessages(pubnub, channelName) {\n  const msgResponse = await pubnub.fetchMessages({\n    channels: [channelName],\n    includeMeta: true,\n    includeMessageActions: true,\n    count: 100,\n  });\n  if (msgResponse) {\n    return msgResponse.channels[channelName];\n  }\n  throw new Error('Failed to get messages');\n}\n\n// --------- PubNub function -----------\n// To fetch all the PubNub functions of an Application.\nexport async function fetchPubNubFunction(keyId, token) {\n  const functionResponse = await axios.get(`/v1/blocks/key/${keyId}/block`, {\n    headers: {\n      'X-Session-Token': `${token}`,\n    },\n  });\n  if (functionResponse.status === 200) {\n    return functionResponse.data;\n  }\n  throw new Error('Failed to fetch PubNub functions');\n}\n\n// Start a PubNub function.\nexport async function createPubNubFunction(credentials, token) {\n  const response = await axios.post(\n    `/v1/blocks/key/${credentials.key_id}/block`,\n    credentials,\n    {\n      headers: {\n        'X-Session-Token': `${token}`,\n      },\n    }\n  );\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error(\n    response.data.message || 'Something went wrong. Please try later'\n  );\n}\n\n// // Start a PubNub function.\nexport async function startPubNubFunction(credentials, token) {\n  const response = await axios.post(\n    `v1/blocks/key/${credentials.key_id}/block/${credentials.block_id}/start`,\n    credentials,\n    {\n      headers: {\n        'X-Session-Token': `${token}`,\n      },\n    }\n  );\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error(response.data.error);\n}\n\n// //Stop a PubNub function\nexport async function stopPubNubFunction(credentials, token) {\n  const response = await axios.post(\n    `v1/blocks/key/${credentials.key_id}/block/${credentials.block_id}/stop`,\n    credentials,\n    {\n      headers: {\n        'X-Session-Token': `${token}`,\n      },\n    }\n  );\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error(response.data.error);\n}\n\n// Create a event handler\nexport async function createPubNubEventHandler(credentials, token) {\n  const response = await axios.post(\n    `v1/blocks/key/${credentials.key_id}/event_handler`,\n    credentials,\n    {\n      headers: {\n        'X-Session-Token': `${token}`,\n      },\n    }\n  );\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error(response.data.message);\n}\n\nexport async function updatePubNubEventHandler(credentials, token) {\n  const response = await axios.put(\n    `/v1/blocks/key/${credentials.key_id}/event_handler/${credentials.id}`,\n    credentials,\n    {\n      headers: {\n        'X-Session-Token': `${token}`,\n      },\n    }\n  );\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error(response.data.message);\n}\n\n//To fetch user By name\nexport async function getUserByName(pubnub, userName) {\n  const usersResponse = await pubnub.objects.getAllUUIDMetadata({\n    filter: \"name LIKE '\" + userName + \"*'\",\n  });\n  if (usersResponse.status === 200) {\n    return usersResponse.data;\n  }\n  throw new Error('Failed to get PubNub users');\n}\n\n//To fetch channel By name\nexport async function getChannelByName(pubnub, channelName) {\n  const usersResponse = await pubnub.objects.getAllChannelMetadata({\n    filter: \"name LIKE '\" + channelName + \"*'\",\n  });\n  if (usersResponse.status === 200) {\n    return usersResponse.data;\n  }\n  throw new Error('Failed to get PubNub users');\n}\n\n//To fetch channel Members\nexport async function getChannelMembers(pubnub, channelName, nextPage) {\n  const channelMembersResponse = await pubnub.objects.getChannelMembers({\n    channel: channelName,\n    include: {\n      UUIDFields: true,\n      customUUIDFields: true,\n      totalCount: true,\n    },\n    limit: 100,\n    page: {\n      next: nextPage,\n    },\n  });\n  if (channelMembersResponse.status === 200) {\n    return channelMembersResponse;\n  }\n  throw new Error('Failed to get PubNub channel memebers');\n}\n\n//To fetch online channel Members\nexport async function getOnlineMembers(pubnub, channelName) {\n  const response = await pubnub.hereNow({\n    channels: [channelName],\n  });\n  if (response) {\n    return response.channels[channelName]['occupants'];\n  }\n  throw new Error('Failed to get PubNub online members');\n}\n\n// To fetch a channel detail\nexport async function fetchChannelMetadata(pubnub, channelName) {\n  const channelsResponse = await pubnub.objects.getChannelMetadata({\n    channel: channelName,\n  });\n  if (channelsResponse.status === 200) {\n    return channelsResponse.data;\n  }\n  throw new Error('Failed to get PubNub channel');\n}\n\n//To fetch Total messages count of today\nexport async function getMessagesCount(pubnub, channelName, midnightTimeToken) {\n  const response = await pubnub.messageCounts({\n    channels: [channelName],\n    channelTimetokens: [midnightTimeToken],\n  });\n  if (response) {\n    return response.channels && response.channels[channelName];\n  }\n  throw new Error('Failed to get total messages Count');\n}\n\n// To get number of online users in a channel\nexport async function getChannelsOccupancy(pubnub, channelsArray) {\n  const response = await pubnub.hereNow({\n    channels: channelsArray,\n    includeUUIDs: false,\n    includeState: false,\n  });\n  if (response) {\n    return response.channels || [];\n  }\n  throw new Error('Failed to get online users');\n}\n\n//To check if channel already exists\nexport async function checkChannelExistence(pubnub, channel) {\n  const response = await pubnub.objects.getAllChannelMetadata({\n    filter: 'id == \"' + channel + '\"',\n  });\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error('Failed to get PubNub channel');\n}\n\n//To check if user ID already exists\nexport async function checkUserIDExistence(pubnub, userID) {\n  const response = await pubnub.objects.getAllUUIDMetadata({\n    filter: 'id == \"' + userID + '\"',\n  });\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error('Failed to get PubNub user');\n}\n\n//To delete a message\nexport async function softDeleteMessage(pubnub, channel, messageTimetoken) {\n  const response = await pubnub.addMessageAction({\n    channel,\n    messageTimetoken,\n    action: {\n      type: 'deleted',\n      value: '.',\n    },\n  });\n  if (response) {\n    return response.data;\n  }\n  throw new Error('Failed to delete the message');\n}\n\n//To undo delete action\nexport async function deleteMessageAction(\n  pubnub,\n  channel,\n  messageTimetoken,\n  actionTimetoken\n) {\n  const response = await pubnub.removeMessageAction({\n    channel,\n    messageTimetoken,\n    actionTimetoken,\n  });\n  if (response) {\n    return response.data;\n  }\n  throw new Error('Failed to undo delete action');\n}\n\n//To add edit Message action\nexport async function addEditMessageAction(\n  pubnub,\n  channel,\n  messageTimetoken,\n  value\n) {\n  const response = await pubnub.addMessageAction({\n    channel,\n    messageTimetoken,\n    action: {\n      type: 'updated',\n      value,\n    },\n  });\n  if (response) {\n    return response.data;\n  }\n  throw new Error('Failed to undo delete action');\n}\n\n//To set Metadata of a user\nexport async function setUserMetadata(pubnub, uuid, metadata) {\n  const userResponse = await pubnub.objects.setUUIDMetadata({\n    uuid: uuid,\n    data: {\n      custom: metadata,\n    },\n  });\n  if (userResponse.status === 200) {\n    return userResponse.data;\n  }\n  throw new Error('Failed to set metadata of PubNub user');\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Button,\n  TextField,\n  Typography,\n  CircularProgress,\n} from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport {\n  PersonOutlineOutlined,\n  HttpsOutlined,\n  RemoveRedEyeOutlined,\n  RemoveRedEye,\n} from '@material-ui/icons';\nimport { useStyles } from '../../style/loginForm';\nimport { signIn } from '../../services/auth';\nimport { authenticate, setLocalStorage } from '../../services/localStorage';\nimport { fetchAllAccounts, fetchAllApps } from '../../services/pubnub';\n\nimport Alert from '@material-ui/lab/Alert';\nimport Pubnub from 'pubnub';\n\nconst LoginForm = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const uuid = Pubnub.generateUUID();\n\n  const [alert, setAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n    loading: false,\n  });\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\n  const [passwordIsMasked, setPasswordIsMasked] = useState(true);\n\n  const handleChange = (type) => (e) => {\n    switch (type) {\n      case 'email':\n        setCredentials({ ...credentials, email: e.target.value });\n        break;\n      case 'password':\n        setCredentials({ ...credentials, password: e.target.value });\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setAlert({ ...alert, loading: true });\n      const authSignInResponse = await signIn(credentials);\n      const { user, token } = authSignInResponse.result;\n      setAlert({\n        ...alert,\n        success: { status: true, msg: 'Successfully Authenticated' },\n        error: { status: false, msg: '' },\n      });\n      authenticate({ user, token }, async () => {\n        try {\n          let accountsResult = await fetchAllAccounts(user.id, token);\n          let apps = await fetchAllApps(\n            accountsResult.result.accounts[0].id,\n            token\n          );\n          setLocalStorage('PubNubAccounts', accountsResult.result.accounts);\n          setLocalStorage(\n            'PubNubSelectedAccount',\n            accountsResult.result.accounts[0]\n          );\n          setLocalStorage('PubNubApplications', apps);\n          setLocalStorage('uuid', uuid);\n          setAlert({\n            ...alert,\n            success: { status: true, msg: '' },\n            error: { status: false, msg: '' },\n            loading: false,\n          });\n          history.push('/dashboard');\n        } catch (err) {\n          throw new Error(err);\n        }\n      });\n    } catch (err) {\n      setAlert({\n        ...alert,\n        error: { status: true, msg: err.message },\n        loading: false,\n        success: { status: false, msg: '' },\n      });\n    }\n  };\n\n  const togglePasswordMask = () => {\n    setPasswordIsMasked((prev) => !prev);\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <div className={classes.middle}>\n          <div className={classes.inner}>\n            <Grid container justify=\"center\">\n              <Grid item xs={12} sm={6} md={4}>\n                <div className={classes.form}>\n                  <Grid container justify=\"center\">\n                    <Grid item sm={12} md={12} xs={12}>\n                      <div className={classes.logIconContainer}>\n                        <span className={classes.logIcon}>\n                          <img\n                            src=\"images/Pubnub logo.svg\"\n                            alt=\"Pubnub Logo\"\n                            width={160}\n                          />\n                        </span>\n                      </div>\n                    </Grid>\n                    <Grid item sm={12} md={12} xs={12}>\n                      <Typography\n                        className={classes.logSubtitle}\n                        align=\"center\"\n                      >\n                        Enter to continue and explore within your grasp\n                      </Typography>\n                    </Grid>\n                  </Grid>\n\n                  <form onSubmit={handleSubmit}>\n                    <Grid container justify=\"center\" spacing={3}>\n                      <Grid xs={10} sm={12} md={10} item>\n                        <div className={classes.alertCard}>\n                          {alert.success.status && (\n                            <Alert severity=\"success\">\n                              {alert.success.msg}\n                            </Alert>\n                          )}\n                          {alert.error.status && (\n                            <Alert severity=\"error\">{alert.error.msg}</Alert>\n                          )}\n                        </div>\n                        <br />\n                        <br />\n                      </Grid>\n                      <Grid xs={10} sm={12} md={10} item>\n                        <TextField\n                          type=\"text\"\n                          variant=\"outlined\"\n                          name=\"email\"\n                          fullWidth\n                          autoComplete=\"email\"\n                          className={classes.loginTextField}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <PersonOutlineOutlined\n                                  className={classes.textfieldIcon}\n                                />\n                              </InputAdornment>\n                            ),\n                          }}\n                          placeholder=\"E-mail address\"\n                          required\n                          onChange={handleChange('email')}\n                          value={credentials.email}\n                          autoFocus\n                        />\n                      </Grid>\n                      <Grid xs={10} sm={12} md={10} item>\n                        <TextField\n                          type={passwordIsMasked ? 'password' : 'text'}\n                          autoComplete=\"password\"\n                          variant=\"outlined\"\n                          className={classes.loginTextField}\n                          name=\"password\"\n                          InputProps={{\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                {passwordIsMasked ? (\n                                  <RemoveRedEye\n                                    className={classes.maskPasswordIcon}\n                                    onClick={togglePasswordMask}\n                                  />\n                                ) : (\n                                  <RemoveRedEyeOutlined\n                                    className={classes.textfieldIcon}\n                                    onClick={togglePasswordMask}\n                                  />\n                                )}\n                              </InputAdornment>\n                            ),\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <HttpsOutlined\n                                  className={classes.textfieldIcon}\n                                />\n                              </InputAdornment>\n                            ),\n                          }}\n                          fullWidth\n                          placeholder=\"Password\"\n                          required\n                          onChange={handleChange('password')}\n                          value={credentials.password}\n                        />\n                      </Grid>\n                    </Grid>\n                    <br />\n\n                    <Grid container justify=\"center\">\n                      <Grid item sm={12} md={10} xs={10}>\n                        <Button\n                          className={classes.button}\n                          fullWidth\n                          classes={{ disabled: classes.disabledButton }}\n                          disabled={alert.loading}\n                          type=\"submit\"\n                          startIcon={\n                            alert.loading ? (\n                              <CircularProgress\n                                className={classes.loader}\n                                size={30}\n                              />\n                            ) : null\n                          }\n                        >\n                          {alert.loading ? 'Submitting' : 'LOGIN TO CONTINUE'}\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </form>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport Auth from '../../layouts/Auth';\nimport LoginForm from '../../components/login/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <Auth>\n        <LoginForm />\n      </Auth>\n    </>\n  );\n};\nexport default Login;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from '../services/localStorage';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuth() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/',\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  ></Route>\n);\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from '../services/localStorage';\n\nconst AuthRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuth() ? (\n        <Redirect\n          to={{\n            pathname: '/dashboard',\n            state: { from: props.location },\n          }}\n        />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  ></Route>\n);\n\nexport default AuthRoute;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  avatar:{\n    backgroundColor:\"#FCF0EF\",\n    color:\"#E66E68\",\n    borderRadius:\"8px\",\n    margin:\"0px 5px 0px 0px\"\n  },\n  button: {\n    textTransform: 'none',\n    fontSize: '15px',\n  },\n  paperRoot: {\n    minWidth: '250px',\n    zIndex:2\n  },\n  logoutIcon:{\n    color:\"#C2C2C2\"\n  }\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  cardRoot: {\n    cursor: 'pointer',\n  },\n  checkIcon:{\n    color:\"#C2C2C2\"\n  },\n  email:{\n    fontSize:\"12px\"\n  },\n  avatarText:{\n    fontSize:\"12px\"\n  },\n  avatar:{\n \n  }\n});\n","import moment from \"moment\";\n\nexport const capitalizeFirstCharacter = (name) => {\n  let words = name.split(\" \");\n  return words\n    .map((word) => {\n      return word[0].toUpperCase() + word.substring(1);\n    })\n    .join(\" \");\n};\n\nexport const accountsFromLS = () => {\n  if (localStorage.getItem(\"PubNubAccounts\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubAccounts\"));\n  } else {\n    return false;\n  }\n};\n\nexport const selectedAccountsFromLS = () => {\n  if (localStorage.getItem(\"PubNubSelectedAccount\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubSelectedAccount\"));\n  } else {\n    return false;\n  }\n};\n\nexport const appsFromLS = () => {\n  if (localStorage.getItem(\"PubNubApplications\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubApplications\"));\n  } else {\n    return false;\n  }\n};\n\nexport const selectedAppFromLS = () => {\n  if (localStorage.getItem(\"PubNubSelectedApp\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubSelectedApp\"));\n  } else {\n    return false;\n  }\n};\n\nexport const applicationsWithKeyFromLS = () => {\n  if (localStorage.getItem(\"PubNubApplicationsWithKey\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubApplicationsWithKey\"));\n  } else {\n    return false;\n  }\n};\n\nexport const avatarStyle = (index, account) => {\n  if (index % 5 === 0) {\n    return {\n      backgroundColor: \"#FCF0EF\",\n      width: \"30px\",\n      height: \"30px\",\n      color: \"#E66E68\",\n      borderRadius: \"8px\",\n    };\n  } else if (index % 3 === 0) {\n    return {\n      backgroundColor: \"#FFFABB\",\n      width: \"30px\",\n      height: \"30px\",\n      color: \"#FFD502\",\n      borderRadius: \"8px\",\n    };\n  } else if (index % 2 === 0) {\n    return {\n      backgroundColor: \"#CAFFE6\",\n      width: \"30px\",\n      height: \"30px\",\n      color: \"#34F89C\",\n      borderRadius: \"8px\",\n    };\n  } else if (index % 1 === 0) {\n    return {\n      backgroundColor: \"#CAF0FF\",\n      width: \"30px\",\n      height: \"30px\",\n      color: \"#3BC8FF\",\n      borderRadius: \"8px\",\n    };\n  } else if (index === account().email) {\n    return {\n      color: \"#6387ED\",\n    };\n  }\n};\n\nexport const channelsFromLS = () => {\n  if (localStorage.getItem(\"PubNubChannels\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubChannels\"));\n  } else {\n    return false;\n  }\n};\n\nexport const capitalizeNameInitials = (name) => {\n  if (name) {\n    let words = name.split(\" \"),\n      initials = words[0].substring(0, 1).toUpperCase();\n    if (words.length > 1) {\n      initials += words[words.length - 1].substring(0, 1).toUpperCase();\n      return initials;\n    }\n    return words[0].substring(0, 2).toUpperCase();\n  }\n  return false;\n};\n\nexport const usersFromLS = () => {\n  if (localStorage.getItem(\"PubNubUsers\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubUsers\"));\n  } else {\n    return false;\n  }\n};\n\nexport const formatDate = (date) => {\n  if (date) {\n    return moment(new Date(date)).format(\"MMMM Do YYYY, h:mm a\");\n  }\n  return null;\n};\n\nexport const truncateString = (string, index) => {\n  if (\n    (string && string.length > 20 && index === \"id\") ||\n    (string && string.length > 20 && index === \"description\")\n  ) {\n    return string.substring(0, 18) + \"...\";\n  }\n  if (string && string.length > 50) {\n    return string.substring(0, 48) + \"...\";\n  }\n  return string || \"-\";\n};\n\nexport const fetchWords = (path) => {\n  return fetch(path)\n    .then((r) => r.text())\n    .then((text) => {\n      return text;\n    });\n};\n\nexport const reload = () => window.location.reload();\n\nexport const showError = (errorData) => {\n  if (errorData.message === \"Forbidden\") {\n    return \"Not permitted to Access manager\";\n  }\n  if (errorData.message) {\n    return \"Method not allowed\";\n  }\n  return errorData.error.message;\n};\n\nexport const checkValidChannelName = (name) => {\n  // eslint-disable-next-line no-useless-escape\n  const characters = [\",\", \":\", \"*\", \"/\", \"\\\\\"];\n  for (let index = 0; index <= characters.length; index++) {\n    if (name && name.includes(characters[index])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const filterFunction = (data, key) => {\n  if (data) return data.payload.filter((item) => item.name === `KEY-${key.id}`);\n};\n\nexport const filterEventHandler = (data, block) => {\n  if (data) return data.filter((item) => item.name === `BLOCK-${block[0].id}`);\n};\n\nexport const filterImageFunction = (data, key) => {\n  if (data) return data.payload.filter((item) => item.name === `KEY-${key.id}-IMAGE-MODERATION`);\n};\n\nexport const filterImageEventHandler = (data, block) => {\n  if (data) return data.filter((item) => item.name === `BLOCK-${block[0].id}-IMAGE-MODERATION`);\n};\n\nexport const pnFunctionFilterStatus = (str) => {\n  // eslint-disable-next-line no-new-func\n  return new Function(\"return \" + str)()();\n};\n\nexport const getProfanityWordsByLanguage = (profanityList, language) => {\n  return profanityList[language];\n};\n\nexport const sliceTableArray = (tableData, page, rowsPerPage) => {\n  if (tableData.length > rowsPerPage) {\n    return tableData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  }\n  return tableData;\n};\n\nexport const formatTimeToken = (timeToken) => {\n  if (timeToken) return moment.unix(timeToken / 10000000).format(\"hh:mm\");\n  return null;\n};\n\nexport const capitalizeFirstLetter = (string) => {\n  if (string) return string.charAt(0).toUpperCase() + string.slice(1);\n  return null;\n};\n\nexport const formatProfileImageUrl = (url) => {\n  if (url) return url;\n  return \"images/default-user.svg\";\n};\n\nexport const formatUserName = (name) => {\n  if (name) return name;\n  return \"Unknown\";\n};\n\nexport const selectedChannelFromLS = () => {\n  if (localStorage.getItem(\"PubNubSelectedChannel\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubSelectedChannel\"));\n  } else {\n    return false;\n  }\n};\n\nexport const truncateChannelDescription = (string) => {\n  if (string && string.length > 70) {\n    return string.substring(0, 68) + \"...\";\n  }\n  return string;\n};\n\nexport const uuidFromLS = () => {\n  if (localStorage.getItem(\"uuid\")) {\n    return JSON.parse(localStorage.getItem(\"uuid\"));\n  } else {\n    return false;\n  }\n};\n\nexport const combineLanguageWords = (wordList) => {\n  const combinedWords = Object.values(wordList).filter((item) => item.length !== 0);\n  if (combinedWords.length > 0) {\n    return combinedWords\n      .reduce((a, c) => a + \",\" + c)\n      .split(\",\")\n      .join(\"|\");\n  }\n  return \"\";\n};\n\nexport function groupLanguageWords(words) {\n  if (words) {\n    return words\n      .split(\",\")\n      .join(\"|\")\n      .replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  }\n  return words;\n}\n\nexport function constantBoolean(variable) {\n  return typeof variable === \"string\" ? variable === \"true\" : variable;\n}\n\nexport const lastMidnightHours = () => {\n  const date = new Date();\n  const timeToken = date.setHours(0, 0, 0, 0);\n  return timeToken * 10000;\n};\n\nexport const checkChannelMember = (member) => {\n  if (member) return member.uuid.id;\n  return false;\n};\n\nexport const membersFromLS = () => {\n  if (localStorage.getItem(\"PubNubChannelMembers\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubChannelMembers\"));\n  } else {\n    return false;\n  }\n};\n\nexport const getModeratedMessageTooltip = (message) => {\n  if (message) return \"Moderated message: \" + message;\n  return null;\n};\n\nexport const getModeratedReasonTooltip = (reason) => {\n  if (reason) return \"Reason: \" + reason;\n  return null;\n};\n\nexport const checkMuteStatus = (member, channel) => {\n  if (\n    member &&\n    member.uuid.custom &&\n    member.uuid.custom.mutedChannels &&\n    member.uuid.custom.mutedChannels.includes(channel)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const checkBlockStatus = (member, channel) => {\n  if (\n    member &&\n    member.uuid.custom &&\n    member.uuid.custom.blockedChannels &&\n    member.uuid.custom.blockedChannels.includes(channel)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const getMessageFileUrl = (messageObject, channelMessage, pubnub, channelID) => {\n  if (\n    channelMessage.message &&\n    channelMessage.message.file &&\n    channelMessage.message.file.id &&\n    channelMessage.message.file.name &&\n    !channelMessage.message.file.url\n  ) {\n    const url = pubnub.getFileUrl({\n      channel: channelID,\n      id: channelMessage.message.file.id,\n      name: channelMessage.message.file.name,\n    });\n    messageObject.file.url = url;\n  }\n  return messageObject;\n};\n\nexport const formatBannedMessage = (messageObject) => {\n  if (messageObject.file && messageObject.file.url) messageObject.image = messageObject.file.url;\n\n  if (messageObject.file && messageObject.file.reason)\n    messageObject.imageReason = messageObject.file.reason;\n\n  if (messageObject.message && messageObject.message.originalMessage)\n    messageObject.originalMessage = messageObject.message.originalMessage;\n\n  if (messageObject.message && messageObject.message.moderatedMessage)\n    messageObject.moderatedMessage = messageObject.message.moderatedMessage;\n\n  if (messageObject.message && messageObject.message.reason)\n    messageObject.reason = messageObject.message.reason;\n\n  return messageObject;\n};\n\nexport const getMessageText = (channelMessage, messageObject) => {\n  return (\n    (channelMessage.actions &&\n      channelMessage.actions.updated &&\n      Object.keys(channelMessage.actions.updated)[0]) ||\n    messageObject.text ||\n    (messageObject.message && messageObject.message.text)\n  );\n};\n","import React from 'react';\nimport { MenuItem, Avatar, Grid, Typography } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { useStyles } from '../../style/accountCard';\nimport {\n  capitalizeFirstCharacter,\n  avatarStyle,\n  selectedAccountsFromLS,\n} from '../../utils/helpers';\n\nconst AccountCard = ({ account, handleClick, index }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <MenuItem testid={`${index}`} onClick={() => handleClick(account)}>\n        <Grid container>\n          <Grid item xs={2} sm={2}>\n            <Avatar\n              className={classes.avatar}\n              style={avatarStyle(index)}\n              variant=\"square\"\n            >\n              <Typography testid=\"capitalChar\" className={classes.avatarText}>\n                {account && account.email\n                  ? capitalizeFirstCharacter(account.email.slice(0, 2))\n                  : null}\n              </Typography>\n            </Avatar>\n          </Grid>\n          <Grid item xs={9} sm={9}>\n            <Typography testid=\"email\" noWrap className={classes.email}>\n              {account.email}\n            </Typography>\n          </Grid>\n          <Grid item xs={1} sm={1}>\n            <CheckCircleIcon\n              style={avatarStyle(account.email, selectedAccountsFromLS)}\n              className={classes.checkIcon}\n            />\n          </Grid>\n        </Grid>\n      </MenuItem>\n    </>\n  );\n};\n\nexport default AccountCard;\n","import React from 'react';\nimport AccountCard from './AccountCard';\nimport { fetchAllApps } from '../../services/pubnub';\nimport { getCookie, setLocalStorage } from '../../services/localStorage';\n\nconst AccountList = ({ accounts }) => {\n  const token = getCookie('token');\n\n  const handleClick = async (selectedAccount) => {\n    try {\n      let apps = await fetchAllApps(selectedAccount.id, token);\n      setLocalStorage('PubNubSelectedAccount', selectedAccount);\n      setLocalStorage('PubNubApplications', apps);\n      window.location.href = '/dashboard';\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  function AccountListing() {\n    return accounts.map((account, i) => {\n      return (\n        <AccountCard\n          account={account}\n          key={i}\n          handleClick={handleClick}\n          index={i}\n        />\n      );\n    });\n  }\n\n  return <AccountListing />;\n};\n\nexport default AccountList;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport {\n  Button,\n  ClickAwayListener,\n  Grow,\n  Paper,\n  Popper,\n  MenuItem,\n  Avatar,\n  Box,\n  Divider,\n  MenuList,\n} from \"@material-ui/core\";\nimport { KeyboardArrowDownOutlined } from \"@material-ui/icons\";\nimport { useStyles } from \"../../../style/myAccountDropdown\";\nimport { signout } from \"../../../services/localStorage\";\nimport AccountList from \"../../accounts/AccountList\";\nimport { capitalizeFirstCharacter, selectedAccountsFromLS } from \"../../../utils/helpers\";\n\nexport default function MyAccountDropdown({ accounts }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const prevOpen = useRef(open);\n  const anchorRef = useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpenState) => !prevOpenState);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div>\n      <div>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? \"menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          className={classes.button}\n          endIcon={<KeyboardArrowDownOutlined />}\n          onClick={handleToggle}\n        >\n          <Avatar className={classes.avatar} variant=\"square\">\n            {capitalizeFirstCharacter(selectedAccountsFromLS().email.slice(0, 2))}\n          </Avatar>\n          {selectedAccountsFromLS().email}\n        </Button>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n          className={classes.paperRoot}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                    <AccountList accounts={accounts} />\n                    <Box pl={2} pr={2}>\n                      <Divider />\n                    </Box>\n                    <MenuItem onClick={() => signout(() => (window.location.href = \"/\"))}>\n                      <img src=\"images/sign-out.svg\" alt=\"Signout\" />\n                      <Box pl={1}>\n                        <small>Logout</small>\n                      </Box>\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  grow: {\n    flexGrow: 1,\n  },\n  root: {\n    backgroundColor: 'white',\n    boxShadow:\n      '0px 0px 0px 0px rgb(0 0 0 / 0%), 0px 0px 0px 1px rgb(0 0 0 / 4%), 0px 0px 0px 0px rgb(0 0 0 / 0%)',\n  },\n  headerMenu: {\n    color: 'black',\n    margin: '15px',\n  },\n  button: {\n    textTransform: 'none',\n    fontSize: '15px',\n  },\n  verticalLine: {\n    marginLeft: '10px',\n    marginRight: '20px',\n    borderLeft: '2px solid lightgrey',\n    height: '20px',\n  },\n});\n","import React from 'react';\nimport { NavigateNext } from '@material-ui/icons';\nimport { Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { selectedAppFromLS } from '../../../utils/helpers';\n\nexport default function Breadcrumb(props) {\n  const keySet = selectedAppFromLS();\n  return (\n    <div>\n      <Breadcrumbs\n        separator={<NavigateNext fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link color=\"primary\" href=\"/dashboard\">\n          <Typography variant=\"body2\">Applications</Typography>\n        </Link>\n        {props.currentPage ? (\n          <Link color=\"primary\" href=\"/overview\">\n            <Typography color=\"primary\" variant=\"body2\">\n              {keySet && keySet.name}\n            </Typography>\n          </Link>\n        ) : (\n          <Typography color=\"inherit\" variant=\"body2\">\n            {keySet && keySet.name}\n          </Typography>\n        )}\n        {props.currentPage ? (\n          <Typography color=\"inherit\" variant=\"body2\">\n            {props.currentPage}\n          </Typography>\n        ) : null}\n      </Breadcrumbs>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Grid,\n  Button,\n  Breadcrumbs,\n  Typography,\n  Link,\n} from \"@material-ui/core\";\nimport MyAccountDropdown from \"./MyAccountDropdown\";\nimport { useStyles } from \"../../../style/header\";\nimport { accountsFromLS, selectedAppFromLS, selectedChannelFromLS } from \"../../../utils/helpers\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport { NavigateNext } from \"@material-ui/icons\";\n\nexport default function Header() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [accounts, setAccounts] = useState([]);\n  const keySet = selectedAppFromLS();\n  const channelName = selectedChannelFromLS();\n\n  useEffect(() => {\n    setAccounts(accountsFromLS());\n  }, []);\n\n  const showBreadcrumbs = () => {\n    if (history.location.pathname === \"/dashboard\") {\n      return (\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          <Typography color=\"inherit\" variant=\"body2\">\n            Applications\n          </Typography>\n        </Breadcrumbs>\n      );\n    } else if (history.location.pathname === \"/channels\") {\n      return <Breadcrumb currentPage={\"Channels\"} />;\n    } else if (history.location.pathname === \"/overview\") {\n      return <Breadcrumb currentPage={\"\"} />;\n    } else if (history.location.pathname === \"/users\") {\n      return <Breadcrumb currentPage={\"Users\"} />;\n    } else if (history.location.pathname === \"/text-moderation\") {\n      return <Breadcrumb currentPage={\"Text Moderation\"} />;\n    } else if (history.location.pathname === \"/image-moderation\") {\n      return <Breadcrumb currentPage={\"Image Moderation\"} />;\n    } else if (history.location.pathname === \"/channels/messages\") {\n      return (\n        <Breadcrumbs separator={<NavigateNext fontSize=\"small\" />} aria-label=\"breadcrumb\">\n          <Link color=\"primary\" href=\"/dashboard\">\n            <Typography variant=\"body2\">Applications</Typography>\n          </Link>\n          <Link color=\"primary\" href=\"/overview\">\n            <Typography color=\"primary\" variant=\"body2\">\n              {keySet && keySet.name}\n            </Typography>\n          </Link>\n          <Link color=\"primary\" href=\"/channels\">\n            <Typography color=\"primary\" variant=\"body2\">\n              Channels\n            </Typography>\n          </Link>\n          <Typography color=\"inherit\" variant=\"body2\">\n            {channelName}\n          </Typography>\n        </Breadcrumbs>\n      );\n    }\n  };\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n          <IconButton\n            id=\"toDashboard\"\n            edge=\"start\"\n            onClick={() => history.push(\"/dashboard\")}\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <img src=\"images/Pubnub logo.svg\" width={90} alt=\"\" />\n          </IconButton>\n          <div className={classes.verticalLine} />\n          {showBreadcrumbs()}\n          <div className={classes.grow} />\n          <Grid item>\n            <Button className={classes.button}>Docs</Button>\n          </Grid>\n          <Grid item>\n            <div className={classes.verticalLine} />\n          </Grid>\n          <Grid item className={classes.headerMenu}>\n            <MyAccountDropdown accounts={accounts} />\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  tableRow: {\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    cursor: 'pointer',\n    margin: '10px',\n    // boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\",\n    border: '15px solid #fafafa',\n    opacity: 1,\n    '& button': {\n      display: 'none',\n    },\n    '&:hover': {\n      '& button': {\n        display: 'inline-block',\n      },\n    },\n    minHeight: '80px',\n  },\n  tablehead: {\n    '& .MuiTableHead-root': {\n      // backgroundColor:\"#fafafa\",\n      // backgroundColor:\"grey\"\n    },\n    '& .MuiTableRow-root': {\n      backgroundColor: '#fafafa',\n      borderBottom: '0px solid white',\n    },\n    '& .MuiTableCell-head': {\n      minWidth: '180px',\n    },\n  },\n\n  headLabel: {\n    fontSize: '11px',\n    fontWeight: '600',\n  },\n  keyName: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-20)/var(--unnamed-line-spacing-24) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#414141',\n    opacity: '1',\n  },\n  appName: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    fontSize: '12px',\n    // font: \"normal normal normal 16px/19px Proxima Nova\",\n    // letterSpacing: \"0px\",\n    color: '#C2C2C2',\n    opacity: 1,\n  },\n  icons: {\n    padding: '0px',\n  },\n  table: {\n    scrollbarWidth: 'none',\n    overflow: 'auto',\n    overflowX: 'hidden',\n  },\n  alertMessage: {\n    background: 'transparent',\n  },\n  tableCellIcon: {\n    width: '220px',\n  },\n  tablePagination: {\n    '& .MuiTablePagination-actions': {\n      background: '#E7EDFF 0% 0% no-repeat padding-box',\n      borderRadius: '5px',\n      opacity: 1,\n    },\n  },\n});\n","import { Tooltip } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    boxShadow: theme.shadows[1],\n    font:\n      'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-14)/var(--unnamed-line-spacing-17) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#414141',\n    opacity: 1,\n  },\n}))(Tooltip);\n","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/listingTable\";\nimport { LightTooltip } from \"../../style/tooltip\";\n\nexport default function TableIcons(props) {\n  const { row } = props;\n  const classes = useStyles();\n  const isflagged = props.row && props.row.custom && props.row.custom.flag;\n  const isBanned = props.row && props.row.custom && props.row.custom.ban;\n\n  return (\n    <div>\n      {(() => {\n        if (props.isUser && !isflagged && !isBanned) {\n          return (\n            <LightTooltip title=\"Flag\">\n              <IconButton\n                edge=\"start\"\n                className={classes.icons}\n                onClick={(event) => props.flagUser(event, row)}\n              >\n                <img src=\"images/flag.svg\" alt=\"flag\" />\n              </IconButton>\n            </LightTooltip>\n          );\n        } else if (props.isUser && !isBanned) {\n          return (\n            <LightTooltip title=\"Unflag\">\n              <IconButton\n                edge=\"start\"\n                className={classes.icons}\n                onClick={(event) => props.unFlagUser(event, row)}\n              >\n                <img src=\"images/flag.svg\" alt=\"flag\" />\n              </IconButton>\n            </LightTooltip>\n          );\n        }\n      })()}\n\n      {(() => {\n        if (props.isUser && !isBanned) {\n          return (\n            <LightTooltip title=\"Ban\">\n              <IconButton\n                edge=\"start\"\n                className={classes.icons}\n                onClick={(event) => props.banUser(event, row)}\n              >\n                <img src=\"images/ban.svg\" alt=\"block\" />\n              </IconButton>\n            </LightTooltip>\n          );\n        } else if (props.isUser) {\n          return (\n            <LightTooltip title=\"Unban\">\n              <IconButton\n                edge=\"start\"\n                className={classes.icons}\n                onClick={(event) => props.unbanUser(event, row)}\n              >\n                <img src=\"images/ban.svg\" alt=\"block\" />\n              </IconButton>\n            </LightTooltip>\n          );\n        }\n      })()}\n\n      {!props.isUser ? (\n        <LightTooltip title=\"View\">\n          <IconButton\n            edge=\"start\"\n            label=\"view\"\n            className={classes.icons}\n            onClick={(event) => props.viewRow(event, row.id)}\n          >\n            <img src=\"images/watch.svg\" alt=\"view\" />\n          </IconButton>\n        </LightTooltip>\n      ) : null}\n      <LightTooltip title=\"Edit\">\n        <IconButton\n          edge=\"start\"\n          className={classes.icons}\n          onMouseOver={() => props.setOver(true)}\n          onMouseOut={() => props.setOver(false)}\n          onClick={(event) => props.editRow(event, row)}\n        >\n          <img src=\"images/edit.svg\" alt=\"edit\" />\n        </IconButton>\n      </LightTooltip>\n      <LightTooltip title=\"Delete\">\n        <IconButton\n          edge=\"start\"\n          label=\"delete\"\n          className={classes.icons}\n          onMouseOver={() => props.setOver(true)}\n          onMouseOut={() => props.setOver(false)}\n          onClick={(event) => props.deleteRow(event, row.id)}\n        >\n          <img src=\"images/delete.svg\" alt=\"delete\" />\n        </IconButton>\n      </LightTooltip>\n    </div>\n  );\n}\n","import React from 'react';\nimport { TablePagination } from '@material-ui/core';\nimport { useStyles } from '../../style/listingTable';\n\nexport default function ListingPagination(props) {\n  const classes = useStyles();\n  const tableCount =\n    props.tableCount > props.rowsPerPage\n      ? props.tableCount\n      : props.tableData.length;\n\n  return props.tableData.length ? (\n    <TablePagination\n      className={classes.tablePagination}\n      rowsPerPageOptions={[props.rowsPerPage]}\n      component=\"div\"\n      count={tableCount}\n      page={props.page}\n      rowsPerPage={props.rowsPerPage}\n      onChangePage={props.handleChangePage}\n      labelDisplayedRows={({ from, to, count }) => `${from}-${to} of ${count}`}\n      backIconButtonProps={{\n        color: 'primary',\n      }}\n      nextIconButtonProps={{\n        color: 'primary',\n      }}\n    />\n  ) : null;\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { LightTooltip } from \"../../style/tooltip\";\nimport { formatDate } from \"../../utils/helpers\";\n\nexport default function Markers(props) {\n  const isflagged = props.row && props.row.custom && props.row.custom.flag;\n  const isBanned = props.row && props.row.custom && props.row.custom.ban;\n  return (\n    <>\n      {props.isUser && isflagged ? (\n        <LightTooltip\n          title={\n            <>\n              <Typography>{`Reason: ${props.row.custom.reason}`}</Typography>\n              <br />\n              <Typography>{`Flagged By: ${props.row.custom.flaggedBy}`}</Typography>\n              <br />\n              <Typography>{`Flagged At: ${formatDate(props.row.custom.flaggedAt)}`}</Typography>\n            </>\n          }\n        >\n          <img src=\"images/flagged.svg\" alt=\"flagged\" />\n        </LightTooltip>\n      ) : null}\n      {props.isUser && isBanned ? <img src=\"images/banned.svg\" alt=\"banned\" /> : null}\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  Grid,\n  TableRow,\n  Box,\n  Avatar,\n  TableSortLabel,\n} from '@material-ui/core';\nimport { useStyles } from '../../style/listingTable';\nimport Alert from '@material-ui/lab/Alert';\nimport {\n  capitalizeNameInitials,\n  sliceTableArray,\n  truncateString,\n} from '../../utils/helpers';\nimport TableIcons from './TableIcons';\nimport ListingPagination from './ListingPagination';\nimport Markers from './Markers';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function ListingTable(props) {\n  const headCells = props.headCells;\n  const tableData = props.data;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('');\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage] = React.useState(25);\n  const [over, setOver] = React.useState(false);\n\n  React.useEffect(() => {\n    setPage(props.number);\n  }, [props.number]);\n\n  const handleChangePage = (event, newPage) => {\n    if (tableData.length <= rowsPerPage) {\n      props.getNewPage(newPage);\n    }\n    setPage(newPage);\n  };\n\n  let tableSlice = sliceTableArray(tableData, page, rowsPerPage);\n\n  function EnhancedTableHead(prop) {\n    const { headOrder, headOrderBy, onRequestSort } = prop;\n\n    const createSortHandler = (property) => (event) => {\n      onRequestSort(event, property);\n    };\n\n    return (\n      <TableHead className={classes.tablehead}>\n        <TableRow>\n          {headCells.map((headCell) => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.alignment}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={headOrderBy === headCell.id ? headOrder : false}\n            >\n              <TableSortLabel\n                className={classes.headLabel}\n                active={headOrderBy === headCell.id}\n                direction={headOrderBy === headCell.id ? headOrder : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n\n  const avatarStyle = (index) => {\n    if (index % 5 === 0) {\n      return {\n        backgroundColor: '#FFFABB',\n        color: '#FFD502',\n        borderRadius: '8px',\n      };\n    } else if (index % 3 === 0) {\n      return {\n        backgroundColor: '#FCF0EF',\n        color: '#E66E68',\n        borderRadius: '8px',\n      };\n    } else if (index % 2 === 0) {\n      return {\n        backgroundColor: '#CAFFE6',\n        color: '#34F89C',\n        borderRadius: '8px',\n      };\n    } else {\n      return {\n        backgroundColor: '#CAF0FF',\n        color: '#3BC8FF',\n        borderRadius: '8px',\n      };\n    }\n  };\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  return (\n    <div>\n      <ListingPagination\n        tableCount={props.tableCount}\n        handleChangePage={handleChangePage}\n        page={page}\n        tableData={tableData}\n        rowsPerPage={rowsPerPage}\n      />\n      <TableContainer className={classes.table}>\n        <Table\n          aria-labelledby=\"tableTitle\"\n          size={'medium'}\n          aria-label=\"enhanced table\"\n        >\n          <EnhancedTableHead\n            headOrder={order}\n            headOrderBy={orderBy}\n            onRequestSort={handleRequestSort}\n            rowCount={tableData.length}\n          />\n          {(() => {\n            if (tableData.length) {\n              return (\n                <TableBody>\n                  {stableSort(tableSlice, getComparator(order, orderBy)).map(\n                    (row, index) => {\n                      return (\n                        <TableRow\n                          hover\n                          className={classes.tableRow}\n                          role=\"checkbox\"\n                          tabIndex={-1}\n                          key={`${row.id}-${index}`}\n                          onClick={(event) =>\n                            props.handleRowClick(event, row, over)\n                          }\n                        >\n                          {headCells.map((headcell, n) => {\n                            if (headcell.avatar) {\n                              return (\n                                <TableCell\n                                  key={`${row.id}-${index}-${n}`}\n                                  align=\"left\"\n                                  className={classes.tableCell}\n                                >\n                                  <Grid container>\n                                    <Box mr={1}>\n                                      <Avatar\n                                        variant=\"square\"\n                                        style={avatarStyle(index)}\n                                        src={row.profileUrl}\n                                      >\n                                        {capitalizeNameInitials(row.name)}\n                                      </Avatar>\n                                    </Box>\n                                    <Box>\n                                      <small className={classes.keyName}>\n                                        {row.name}\n                                      </small>\n                                      <br />\n                                      <small className={classes.appName}>\n                                        {row.appName || row.uuid || row.id}\n                                      </small>\n                                    </Box>\n                                    <Box ml={1} pt={1}>\n                                      <Markers\n                                        isUser={headcell.user}\n                                        row={row}\n                                      />\n                                    </Box>\n                                  </Grid>\n                                </TableCell>\n                              );\n                            } else if (headcell.icons) {\n                              return (\n                                <TableCell\n                                  key={`${row.id}-${index}-${n}`}\n                                  align=\"left\"\n                                  className={classes.tableCellIcon}\n                                >\n                                  <TableIcons\n                                    row={row}\n                                    editRow={props.editRow}\n                                    deleteRow={props.deleteRow}\n                                    viewRow={props.viewRow}\n                                    isUser={headcell.user}\n                                    flagUser={props.flagUser}\n                                    banUser={props.banUser}\n                                    unFlagUser={props.unFlagUser}\n                                    unbanUser={props.unbanUser}\n                                    setOver={setOver}\n                                  />\n                                </TableCell>\n                              );\n                            }\n                            return (\n                              <TableCell\n                                key={`${row.id}-${index}-${n}`}\n                                align=\"left\"\n                                className={classes.tableCell}\n                              >\n                                {truncateString(row[headcell.id], headcell.id)}\n                              </TableCell>\n                            );\n                          })}\n                        </TableRow>\n                      );\n                    }\n                  )}\n                </TableBody>\n              );\n            } else {\n              return props.message ? (\n                <TableBody>\n                  <TableRow>\n                    <TableCell>\n                      <Alert severity={'info'} className={classes.alertMessage}>\n                        {props.message}\n                      </Alert>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              ) : null;\n            }\n          })()}\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { setLocalStorage } from '../../services/localStorage';\nimport { useHistory } from 'react-router-dom';\nimport ListingTable from '../tables/ListingTable';\nimport { appsFromLS } from '../../utils/helpers';\nimport moment from 'moment';\n\nexport default function ApplicationTable({ searchResult }) {\n  const [applications, setApplications] = useState([]);\n  const history = useHistory();\n\n  const headCells = [\n    {\n      id: 'name',\n      alignment: 'left',\n      label: 'NAME',\n      avatar: true,\n    },\n    { id: 'publish_key', alignment: 'left', label: 'PUBLISH KEY' },\n    { id: 'subscribe_key', alignment: 'left', label: 'SUBSCRIBE KEY' },\n    { id: 'created', alignment: 'left', label: 'CREATED ON' },\n  ];\n\n  useEffect(() => {\n    const appsList = (appsFromLS() && appsFromLS().result) || [];\n    const keysList = [];\n    let keyWithAppName = {};\n    appsList.map((app, appIndex) => {\n      app.keys.map((key, keyIndex) => {\n        keyWithAppName = key;\n        keyWithAppName.appName = app.name;\n        keyWithAppName.created =\n          key.created &&\n          moment(new Date(key.created * 1000)).format('MMMM Do YYYY, h:mm a');\n        keyWithAppName.modified =\n          key.modified &&\n          moment(new Date(key.modified * 1000)).format('MMMM Do YYYY, h:mm a');\n        keyWithAppName.name = key.properties.name;\n        keysList.push(keyWithAppName);\n        return false;\n      });\n      return false;\n    });\n    setApplications(keysList);\n    setLocalStorage('PubNubApplicationsWithKey', keysList);\n  }, []);\n\n  useEffect(() => {\n    if (searchResult.length) {\n      setApplications(searchResult);\n    }\n  }, [searchResult]);\n\n  const handleRowClick = (event, row) => {\n    try {\n      const selectedApp = applications.filter(function (app) {\n        return app.subscribe_key === row.subscribe_key;\n      });\n      setLocalStorage('PubNubSelectedApp', selectedApp[0]);\n      history.push('/overview');\n    } catch (n) {\n      throw new Error(n);\n    }\n  };\n\n  return (\n    <ListingTable\n      data={applications}\n      headCells={headCells}\n      handleRowClick={handleRowClick}\n      message={'No data Found'}\n      number={0}\n    />\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    font: 'var(--unnamed-font-style-normal) normal medium var(--unnamed-font-size-26)/var(--unnamed-line-spacing-31) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    color: '#414141',\n    fontSize: '20px',\n    // paddingLeft: '20px',\n    // fontWeight: 600,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: 'white',\n    // padding:\"3px\",\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    border: '1px solid #e8eaf6',\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  searchInput: {\n    background: ' #FFFFFF 0% 0% no-repeat padding-box',\n\n    borderRadius: '5px',\n    opacity: 1,\n  },\n\n  labelStyle: {\n    color: '#606060',\n  },\n\n  methodNotSelected: {\n    background: 'white',\n    cursor: 'pointer',\n    boxShadow: '0px 3px 6px #00000014',\n    border: '0px solid #6387ED',\n    borderRadius: '10px',\n    color: 'black',\n    opacity: 1,\n    padding: '20px 0px 20px 0px',\n    width: '170px',\n  },\n  methodSelected: {\n    background: '#E7EDFF 0% 0% no-repeat padding-box',\n    cursor: 'pointer',\n    boxShadow: '0px 3px 6px #00000014',\n    border: '1px solid #6387ED',\n    borderRadius: '10px',\n    color: '#6387ED',\n    opacity: 1,\n    padding: '20px 0px 20px 0px',\n    width: '170px',\n  },\n\n  profanityCardRoot: {\n    padding: '20px',\n  },\n\n  cancelButton: {\n    width: '150px',\n    margin: '3px',\n    height: '37px',\n    boxShadow: '0px 0px 0px white',\n    backgroundColor: 'white',\n    border: '1px solid #707070',\n    borderRadius: '8px',\n    opacity: 1,\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13px/16px var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    color: '#707070',\n    fontSize: '13px',\n  },\n  saveButton: {\n    background: '#6387ED 0% 0% no-repeat padding-box',\n    borderRadius: '8px',\n    opacity: 1,\n    color: 'white',\n    width: '150px',\n    margin: '8px',\n    height: '37px',\n    fontSize: '13px',\n    '&:hover': {\n      background: '#6387ED 0% 0% no-repeat padding-box',\n      color: 'white',\n    },\n  },\n  addButton: {\n    fontSize: '17px',\n  },\n  addButtonContainer: {\n    marginTop: '3px',\n    background: '#E7EDFF',\n    color: '#6387ED',\n    opacity: 1,\n    '&:hover': {\n      background: '#E7EDFF',\n      color: '#6387ED',\n    },\n  },\n  defaultText: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textDecoration: 'underline',\n    color: '#6387ED',\n    cursor: 'pointer',\n    opacity: 1,\n    '&:hover': {\n      background: '#E7EDFF',\n      color: '#6387ED',\n    },\n  },\n\n  loader: {\n    marginRight: '5px',\n  },\n  reroute: {\n    textTransform: 'none',\n    marginLeft: '10px',\n    backgroundColor: '#FCF0EF',\n    color: '#FB6340',\n    '&:hover': {\n      textTransform: 'none',\n      marginLeft: '10px',\n      backgroundColor: '#FCF0EF',\n      color: '#FB6340',\n    },\n  },\n  rerouteIcon: {\n    marginRight: '5px',\n  },\n  subTitle: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-18)/var(--unnamed-line-spacing-23) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#606060',\n    opacity: 1,\n    paddingBottom:\"12px\"\n  },\n  infoIcon:{\n    padding:\"3px 0px 0px 5px\"\n  }\n}));\n","import React from 'react';\nimport { useStyles } from '../../style/textModeration';\nimport SearchBar from 'material-ui-search-bar';\n\nexport default function Search(props) {\n  const classes = useStyles();\n\n  const handleChange = (searchVal) => {\n    if (!searchVal) {\n      props.cancelSearch();\n    }\n  };\n  return (\n    <SearchBar\n      id=\"searchBar\"\n      value={props.searched}\n      onRequestSearch={(searchVal) => props.requestSearch(searchVal)}\n      onChange={(searchVal) => handleChange(searchVal)}\n      onCancelSearch={() => props.cancelSearch()}\n      placeholder={props.placeholder}\n      className={classes.searchInput}\n      searchIcon={\n        <>\n          <img src=\"images/search.svg\" alt=\"\" />\n        </>\n      }\n      disabled={props.disabled}\n    />\n  );\n}\n","import React, { useEffect } from 'react';\n\nimport { Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nfunction SnackBar({ status, msg }) {\n  const [open, setOpen] = React.useState(true);\n  useEffect(() => {\n    setOpen(true);\n  }, [status]);\n\n  function handleClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  }\n\n  return (\n    <Snackbar\n      id=\"snackBar\"\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={open}\n      autoHideDuration={9000}\n      onClose={handleClose}\n    >\n      <Alert onClose={handleClose} severity={status}>\n        {msg}\n      </Alert>\n    </Snackbar>\n  );\n}\nexport default SnackBar;\n","import React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport ApplicationTable from './ApplicationTable';\nimport { applicationsWithKeyFromLS } from '../../utils/helpers';\nimport Search from '../core/Search';\nimport SnackBar from '../core/SnackBar';\n\nfunction AppsListing() {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searched, setSearched] = useState('');\n  const [appsAlert, setAppsAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n  });\n\n  const requestKeySearch = (searchedVal) => {\n    setAppsAlert({\n      ...appsAlert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n    });\n    const filteredRows = applicationsWithKeyFromLS().filter((row) => {\n      return (\n        row.publish_key.toLowerCase().includes(searchedVal.toLowerCase()) ||\n        row.subscribe_key.toLowerCase().includes(searchedVal.toLowerCase())\n      );\n    });\n    if (!filteredRows.length) {\n      setAppsAlert({\n        ...appsAlert,\n        success: { status: false, msg: '' },\n        error: { status: true, msg: 'No applications found' },\n      });\n    }\n    setSearchResult(filteredRows);\n  };\n  const cancelKeySearch = () => {\n    setSearched('');\n    requestKeySearch(searched);\n  };\n\n  useEffect(() => {\n    setSearchResult(applicationsWithKeyFromLS());\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Helmet title=\"Applications\" />\n      <Grid justify=\"center\" container>\n        <Grid item sm={11} md={11} lg={11}>\n          <Grid justify=\"space-between\" container spacing={0}>\n            <Grid item sm={8} md={8} xs={12}>\n              <Box pl={1} pt={4} pb={2}>\n                <Typography testid=\"AppListingHeader\" variant=\"h5\">\n                  Applications\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item sm={4} md={4} xs={12}>\n              <Box pl={8} pt={4} pb={2}>\n                <Search\n                  testId=\"AppListingSearchText\"\n                  searched={searched}\n                  requestSearch={requestKeySearch}\n                  cancelSearch={cancelKeySearch}\n                  placeholder={'Search for publish or subscribe key'}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <br />\n      <Grid container spacing={0} justify=\"center\">\n        <Grid item xs={12} sm={11} md={11} lg={11}>\n          <ApplicationTable searchResult={searchResult} />\n        </Grid>\n      </Grid>\n      {appsAlert.error.status && (\n        <SnackBar msg={appsAlert.error.msg} status={'info'} />\n      )}\n      {appsAlert.success.status && (\n        <SnackBar msg={appsAlert.success.msg} status={'success'} />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default AppsListing;\n","import React from 'react';\nimport Header from '../../components/core/header/Header';\nimport { CssBaseline } from '@material-ui/core';\n\nimport AppsListing from '../../components/applications/AppsListing';\n\nconst Dashboard = () => {\n  return (\n    <>\n      <CssBaseline />\n      <Header />\n      <AppsListing />\n    </>\n  );\n};\nexport default Dashboard;\n","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 220;\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    padding: '10px',\n  },\n  textModerationIcon: {\n    color: '#00e676',\n  },\n  overviewIcon: {\n    color: '#673ab7',\n  },\n  channelIcon: {\n    color: '#e91e63',\n  },\n  settingsIcon: {\n    color: '#f44336',\n  },\n  chatIcon: {\n    color: '#ffc400',\n  },\n  userIcon: {\n    color: '#00e5ff',\n  },\n  drawer: {\n    [theme.breakpoints.up('xs')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  listItemRoot: {\n    minWidth: '40px',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Collapse,\n} from '@material-ui/core';\nimport { useStyles } from '../../style/sidebar';\nimport {\n  DescriptionOutlined,\n  HomeOutlined,\n  MailOutline,\n  ChatBubbleOutline,\n  PersonOutlined,\n  SettingsOutlined,\n  ExpandMore,\n  ExpandLess,\n} from '@material-ui/icons';\n\nfunction Sidebar({ content }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <List disablePadding={true}>\n        <ListItem\n          id=\"overviewItem\"\n          onClick={() => history.push('/overview')}\n          selected={history.location.pathname === '/overview'}\n          button\n        >\n          <ListItemIcon className={classes.listItemRoot}>\n            <HomeOutlined className={classes.overviewIcon} />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"body2\">Overview</Typography>\n          </ListItemText>\n        </ListItem>\n\n        <ListItem id=\"settingsItem\" button onClick={handleClick}>\n          <ListItemIcon className={classes.listItemRoot}>\n            <SettingsOutlined className={classes.settingsIcon} />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"body2\">Settings</Typography>\n          </ListItemText>\n          {open ? <ExpandMore /> : <ExpandLess />}\n        </ListItem>\n\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem\n              button\n              onClick={() => history.push('/text-moderation')}\n              selected={history.location.pathname === '/text-moderation'}\n            >\n              <ListItemIcon className={classes.settingsItemRoot}>\n                <DescriptionOutlined className={classes.textModerationIcon} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography variant=\"body2\">Text Moderation</Typography>\n              </ListItemText>\n            </ListItem>\n\n            <ListItem button onClick={() => history.push('/image-moderation')}>\n              <ListItemIcon className={classes.settingsItemRoot}>\n                <ChatBubbleOutline className={classes.chatIcon} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography variant=\"body2\">Image Moderation</Typography>\n              </ListItemText>\n            </ListItem>\n          </List>\n        </Collapse>\n\n        <ListItem\n          id=\"usersItem\"\n          button\n          onClick={() => history.push('/users')}\n          selected={history.location.pathname === '/users'}\n        >\n          <ListItemIcon className={classes.listItemRoot}>\n            <PersonOutlined className={classes.userIcon} />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"body2\">Users</Typography>\n          </ListItemText>\n        </ListItem>\n\n        <ListItem\n          id=\"channelsItem\"\n          button\n          onClick={() => history.push('/channels')}\n          selected={history.location.pathname === '/channels'}\n        >\n          <ListItemIcon className={classes.listItemRoot}>\n            <MailOutline className={classes.channelIcon} />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"body2\">Channels</Typography>\n          </ListItemText>\n        </ListItem>\n      </List>\n    </div>\n  );\n  return (\n    <div className={classes.root}>\n      <nav className={classes.drawer}>{drawer}</nav>\n      <main className={classes.content}>{content}</main>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport Header from '../components/core/header/Header';\nimport Sidebar from '../components/core/Sidebar';\n\nconst Dashboard = ({ children }) => {\n  return (\n    <>\n      <CssBaseline />\n      <Header />\n      <Sidebar content={children} />\n    </>\n  );\n};\n\nexport default Dashboard;\n","export const handleChange = ({\n  setState,\n  state,\n  profanityList,\n  setProfanityList,\n  name,\n}) => (e) => {\n  if (e.target.name === 'wordListChannel') {\n    setState({\n      ...state,\n      channelOnChange: true,\n      wordList: { ...state.wordList, wordListChannel: e.target.value },\n    });\n  } else if (e.target.name === 'wordListLanguage') {\n    setState({\n      ...state,\n      wordList: { ...state.wordList, wordListLanguage: e.target.value },\n    });\n  } else if (e.target.name === 'wordListLanguageWords') {\n    setProfanityList({\n      ...profanityList,\n      [state.wordList.wordListLanguage]: e.target.value,\n    });\n  } else if (e.target.name === 'wordListModtype') {\n    setState({\n      ...state,\n      wordList: { ...state.wordList, wordListModType: e.target.value },\n    });\n  } else if (e.target.name === 'wordListCharacterToMaskWith') {\n    setState({\n      ...state,\n      wordList: {\n        ...state.wordList,\n        wordListCharacterToMaskWith: e.target.value,\n      },\n    });\n  } else if (e.target.name === 'wordListRerouteMessage') {\n    setState({\n      ...state,\n      wordList: {\n        ...state.wordList,\n        wordListReRouteMessages: e.target.checked,\n      },\n    });\n  } else if (name === 'applyToAllChannelIdsWordlist') {\n    if(e.target.checked){\n      setState({\n        ...state,\n        wordList: {\n        ...state.wordList, wordListChannel: '*',\n        applyToAllChannelIdsWordlist: e.target.checked\n       },\n      })\n    }else{\n      setState({\n        ...state,\n        wordList: {\n        ...state.wordList,\n        applyToAllChannelIdsWordlist: e.target.checked\n       },\n      });\n    }\n  }\n};\n","import React from \"react\";\nimport {\n  Grid,\n  Button,\n  Box,\n  Card,\n  Typography,\n  TextField,\n  Select,\n  Checkbox,\n  CircularProgress,\n  FormControl,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { getProfanityWordsByLanguage, constantBoolean } from \"../../../utils/helpers\";\nimport { useStyles } from \"../../../style/textModeration.js\";\nimport { handleChange } from \"./WordListHandler\";\nimport { LightTooltip } from \"../../../style/tooltip\";\n\nconst WordListProfanityMethod = ({\n  handleSave,\n  defaultWords,\n  state,\n  setState,\n  profanityList,\n  setProfanityList,\n}) => {\n  const classes = useStyles();\n  const languageList = [\"English\", \"Hindi\", \"Spanish\", \"Portugese\", \"French\"];\n\n  const {\n    wordListChannel,\n    wordListLanguage,\n    wordListModType,\n    wordsListPatternError,\n    wordListReRouteMessages,\n    wordsListMaskCharError,\n    wordsListChannelError,\n    applyToAllChannelIdsWordlist,\n    wordListCharacterToMaskWith,\n  } = state.wordList;\n\n  const checkboxForReroute = constantBoolean(wordListReRouteMessages);\n  const checkForApplyToAllChannelIds = constantBoolean(applyToAllChannelIdsWordlist);\n\n  return (\n    <>\n      <Card className={classes.profanityCardRoot}>\n        <Grid container>\n          <Grid item>\n            <label testId=\"Channel_Id\" className={classes.labelStyle}>\n              Channel ID\n            </label>\n          </Grid>\n          <Grid item>\n            <Box className={classes.infoIcon}>\n              <LightTooltip title=\"Note: Please add a Channel ID or a Channel pattern. eg. channel.* OR pubNub. Channel ID pattern applies to BOTH text & image moderation if both are enabled.\">\n                <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n              </LightTooltip>\n            </Box>\n          </Grid>\n        </Grid>\n        <Box pt={1} mb={2}>\n          <TextField\n            id=\"channelId\"\n            placeholder=\"Channel\"\n            name=\"wordListChannel\"\n            disabled={checkForApplyToAllChannelIds}\n            error={wordsListChannelError}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            value={wordListChannel}\n            onChange={handleChange({\n              setState,\n              state,\n              profanityList,\n              setProfanityList,\n            })}\n          />\n        </Box>\n        <Grid item>\n          <Grid container justify=\"flex-start\">\n            <Grid item>\n              <Checkbox\n                id=\"allChannelIdcheckBox\"\n                checked={checkForApplyToAllChannelIds}\n                onChange={handleChange({\n                  setState,\n                  state,\n                  name: \"applyToAllChannelIdsWordlist\",\n                })}\n              />\n            </Grid>\n            <Grid item>\n              <Box pt={1}>\n                <Typography testid=\"allChannelIdText\" variant=\"body1\">\n                  Apply to All Channel IDs\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"flex-start\">\n          <Grid item sm={5}>\n            <label testId=\"language\" className={classes.labelStyle}>\n              Language\n            </label>\n            <Box pt={1} mb={2}>\n              <FormControl\n                className={classes.formControl}\n                size=\"small\"\n                placeholder=\"Langauge\"\n                fullWidth\n              >\n                <Select\n                  id=\"wordListLanguage\"\n                  variant=\"outlined\"\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    },\n                    getContentAnchorEl: null,\n                  }}\n                  name=\"wordListLanguage\"\n                  value={wordListLanguage}\n                  onChange={handleChange({\n                    setState,\n                    state,\n                    profanityList,\n                    setProfanityList,\n                  })}\n                  inputProps={{ \"aria-label\": \"Without label\" }}\n                >\n                  {languageList.map((language, index) => {\n                    return (\n                      <MenuItem value={language} key={index}>\n                        {language}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Grid container>\n              <Grid item>\n                <label testId=\"WordList\" className={classes.labelStyle}>\n                  Word List\n                </label>\n              </Grid>\n              <Grid item>\n                <Box className={classes.infoIcon}>\n                  <LightTooltip title=\"Note: Please add comma after a every word. No spaces are allowed\">\n                    <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                  </LightTooltip>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography\n              testid=\"defaultWordsLabel\"\n              align=\"right\"\n              className={classes.defaultText}\n              onClick={() => defaultWords(wordListLanguage)}\n            >\n              Use Default words\n            </Typography>\n          </Grid>\n        </Grid>\n        <Box pt={1} mb={2}>\n          <TextField\n            id=\"defaultWordsBox\"\n            placeholder=\"Type @ to select parameters\"\n            className={classes.languageWords}\n            multiline\n            error={wordsListPatternError}\n            rowsMax={6}\n            name=\"wordListLanguageWords\"\n            value={getProfanityWordsByLanguage(profanityList, wordListLanguage)}\n            onChange={handleChange({\n              setState,\n              state,\n              profanityList,\n              setProfanityList,\n            })}\n            fullWidth\n            variant=\"outlined\"\n          />\n        </Box>\n        <br />\n        <br />\n        <Grid container justify=\"flex-start\" spacing={6}>\n          <Grid item sm={6} md={6}>\n            <label testId=\"MaskOrBlock\" className={classes.labelStyle}>\n              When Profanity is detected\n            </label>\n            <Box pt={1} mb={2}>\n              <FormControl className={classes.formControl} size=\"small\" fullWidth>\n                <Select\n                  id=\"MaskOrBlockOption\"\n                  variant=\"outlined\"\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    },\n                    getContentAnchorEl: null,\n                  }}\n                  name=\"wordListModtype\"\n                  onChange={handleChange({\n                    setState,\n                    state,\n                    profanityList,\n                    setProfanityList,\n                  })}\n                  value={wordListModType}\n                  inputProps={{ \"aria-label\": \"Without label\" }}\n                >\n                  <MenuItem value=\"Mask-word\">Mask Word</MenuItem>\n                  <MenuItem value=\"Block-message\">Block Message</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n          <Grid item sm={6} md={6}>\n            {wordListModType === \"Mask-word\" && (\n              <>\n                <Grid container>\n                  <Grid item>\n                    <label testId=\"maskLabel\" className={classes.label}>\n                      Set a masking character\n                    </label>\n                  </Grid>\n                  <Grid item>\n                    <Box className={classes.infoIcon}>\n                      <LightTooltip title=\"Note: Default value will be *\">\n                        <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                      </LightTooltip>\n                    </Box>\n                  </Grid>\n                </Grid>\n\n                <Box pt={1}>\n                  <TextField\n                    id=\"maskChar\"\n                    size=\"small\"\n                    placeholder=\"Set\"\n                    inputProps={{ maxLength: 1 }}\n                    error={wordsListMaskCharError}\n                    className={classes.languageWords}\n                    value={wordListCharacterToMaskWith}\n                    onChange={handleChange({\n                      setState,\n                      state,\n                      profanityList,\n                      setProfanityList,\n                    })}\n                    fullWidth\n                    name=\"wordListCharacterToMaskWith\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n              </>\n            )}\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"flex-start\">\n          <Grid item>\n            <Grid container>\n              <Grid item>\n                <Checkbox\n                  id=\"reRouteCheckBox\"\n                  name=\"wordListRerouteMessage\"\n                  onChange={handleChange({\n                    setState,\n                    state,\n                    profanityList,\n                    setProfanityList,\n                  })}\n                  checked={checkboxForReroute}\n                />\n              </Grid>\n              <Grid item>\n                <Box pt={1}>\n                  <Typography testid=\"ReRouteLabel\" variant=\"body1\">\n                    Route messages to\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Box>\n              <Button className={classes.reroute}>\n                <img src=\"images/reroute.svg\" className={classes.rerouteIcon} alt=\"reroute\" />{\" \"}\n                {\"banned.\" + wordListChannel}\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n\n        <br />\n        <Grid container justify=\"space-between\" spacing={2}>\n          <Grid item></Grid>\n          <Grid item>\n            <Button id=\"cancel\" className={classes.cancelButton} variant=\"contained\">\n              Cancel\n            </Button>\n            <Button\n              id=\"save\"\n              disabled={state.saveLoading}\n              className={classes.saveButton}\n              onClick={handleSave}\n              variant=\"contained\"\n            >\n              {state.saveLoading ? (\n                <CircularProgress\n                  size={25}\n                  thickness={4}\n                  color=\"primary\"\n                  className={classes.loader}\n                />\n              ) : (\n                <></>\n              )}\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n    </>\n  );\n};\n\nexport default WordListProfanityMethod;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  filterText: {\n    font:\n      'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 24px/16px Graphik',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#606060',\n    opacity: 1,\n    fontSize: '18px',\n  },\n  label: {\n    color: '#606060',\n  },\n  cardRoot: {\n    padding: '20px',\n  },\n  cancelButtonStyle: {\n    width: '150px',\n    margin: '3px',\n    height: '37px',\n    boxShadow: '0px 0px 0px white',\n    backgroundColor: 'white',\n    border: '1px solid #707070',\n    borderRadius: '8px',\n    opacity: 1,\n    font:'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13px/16px var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    color: '#707070',\n    fontSize: '13px',\n  },\n  saveButtonStyle: {\n    background: '#6387ED 0% 0% no-repeat padding-box',\n    borderRadius: '8px',\n    opacity: 1,\n    color: 'white',\n    width: '150px',\n    margin: '8px',\n    height: '37px',\n    fontSize: '13px',\n    '&:hover': {\n      background: '#6387ED 0% 0% no-repeat padding-box',\n      color: 'white',\n    },\n  },\n\n  testText: {\n    font:'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textDecoration: 'underline',\n    color: '#6387ED',\n    cursor: 'pointer',\n    opacity: 1,\n    '&:hover': {\n      background: '#E7EDFF',\n      color: '#6387ED',\n    },\n  },\n  loaderStyle: {\n    marginRight: '5px',\n  },\n  rerouteBtn: {\n    textTransform: 'none',\n    marginLeft: '10px',\n    backgroundColor: '#FCF0EF',\n    color: '#FB6340',\n    '&:hover': {\n      textTransform: 'none',\n      marginLeft: '10px',\n      backgroundColor: '#FCF0EF',\n      color: '#FB6340',\n    },\n  },\n  rerouteIconStyle: {\n    marginRight: '5px',\n  },\n  infoIcon:{\n    padding:\"3px 0px 0px 5px\"\n  }\n}));\n","import { withStyles, makeStyles } from '@material-ui/core/styles';\nexport const SlideBar = withStyles({\n  root: {\n    color: '#6387ED',\n    height: 8,\n  },\n  thumb: {\n    height: 15,\n    width: 15,\n    backgroundColor: '#6387ED',\n    border: '2px solid currentColor',\n    marginTop: -4,\n    marginLeft: -4,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n});\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n","import React from 'react';\nimport { useStyles, SlideBar } from '../../style/slideBar';\nimport { Slider } from '@material-ui/core';\n\nconst PrettoSlider = SlideBar(Slider);\n\nexport default function SliderComponent({ value, onChange, name }) {\n  const classes = useStyles();\n\n  const marks = [\n    {\n      value: 0,\n      label: name === 'tisane' ? 'None' : 0,\n    },\n    {\n      value: 0.25,\n      label: name === 'tisane' ? 'Extreme' : 0.25,\n    },\n    {\n      value: 0.5,\n      label: name === 'tisane' ? 'High' : 0.5,\n    },\n    {\n      value: 0.75,\n      label: name === 'tisane' ? 'Medium' : 0.75,\n    },\n    {\n      value: 1,\n      label: name === 'tisane' ? 'Low' : 1,\n    },\n  ];\n\n  function valuetext(values) {\n    return `${values}`;\n  }\n\n  return (\n    <div className={classes.root}>\n      <PrettoSlider\n        value={value}\n        min={0}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider\"\n        step={0.25}\n        marks={marks}\n        max={1}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n","export const handleChange =\n  ({ setState, state, name }) =>\n  (e, value) => {\n    if (e.target.name === 'toolForAutomaticDetection') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          toolForAutomaticDetection: e.target.value,\n        },\n      });\n    } else if (e.target.name === 'automaticDetectionChannel') {\n      setState({\n        ...state,\n        channelOnChange: true,\n        automaticDetection: {\n          ...state.automaticDetection,\n          automaticDetectionChannel: e.target.value,\n        },\n      });\n    } else if (e.target.name === 'automaticDetectionReRouteMessages') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          automaticDetectionReRouteMessages: e.target.checked,\n        },\n      });\n    } else if (e.target.name === 'automaticDetectionModType') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          automaticDetectionModType: e.target.value,\n        },\n      });\n    } else if (name === 'riskFactorThresholdForVulgar') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaRiskFactorThresholdVulgar: value,\n        },\n      });\n    } else if (name === 'riskFactorThresholdForSexting') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaRiskFactorThresholdSexting: value,\n        },\n      });\n    } else if (name === 'riskFactorThresholdForRacism') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaRiskFactorThresholdRacism: value,\n        },\n      });\n    } else if (e.target.name === 'siftNinjaAccountName') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaAccountName: e.target.value,\n        },\n      });\n    } else if (e.target.name === 'siftNinjaChannelName') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaChannelName: e.target.value,\n        },\n      });\n    } else if (e.target.name === 'siftNinjaApiKey') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaApiKey: e.target.value,\n        },\n      });\n    } else if (e.target.name === 'automaticDetectionCharacterToMaskWith') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          automaticDetectionCharacterToMaskWith: e.target.value,\n        },\n      });\n    } else if (name === 'applyToAllChannelIdsAutomatic') {\n      if (e.target.checked) {\n        setState({\n          ...state,\n          automaticDetection: {\n            ...state.automaticDetection,\n            automaticDetectionChannel: '*',\n            applyToAllChannelIdsAutomatic: e.target.checked,\n          },\n        });\n      } else {\n        setState({\n          ...state,\n          automaticDetection: {\n            ...state.automaticDetection,\n            applyToAllChannelIdsAutomatic: e.target.checked,\n          },\n        });\n      }\n    }\n  };\n","export const handleTisaneChange =\n  ({ setState, state, name }) =>\n  (e, value) => {\n    if (e.target.name === 'tisaneApiKey') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneApiKey: e.target.value,\n        },\n      });\n    } else if (e.target.name === 'tisaneLanguage') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneLanguage: e.target.value,\n        },\n      });\n    } else if (name === 'riskFactorThresholdForBigotry') {\n      setState({\n        ...state,\n        channelOnChange: true,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneRiskFactorThresholdBigotry: value,\n        },\n      });\n    } else if (name === 'riskFactorThresholdForCyberBullying') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneRiskFactorThresholdCyberBullying: value,\n        },\n      });\n    } else if (name === 'riskFactorThresholdForCriminalActivity') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneRiskFactorThresholdCriminalActivity: value,\n        },\n      });\n    } else if (name === 'riskFactorThresholdForSexualAdvances') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneRiskFactorThresholdSexualAdvances: value,\n        },\n      });\n    } else if (name === 'riskFactorThresholdForProfanity') {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneRiskFactorThresholdProfanity: value,\n        },\n      });\n    }\n  };\n","import React from \"react\";\nimport {\n  Grid,\n  Button,\n  Box,\n  Card,\n  Typography,\n  TextField,\n  Select,\n  Checkbox,\n  CircularProgress,\n  FormControl,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../../../style/automaticProfanityMethod\";\nimport Slider from \"../../core/SliderComponent\";\nimport { constantBoolean } from \"../../../utils/helpers\";\nimport { LightTooltip } from \"../../../style/tooltip\";\nimport { handleChange } from \"./AutomaticHandler\";\nimport { handleTisaneChange } from \"./TisaneHandler\";\n\nconst AutomaticProfanityMethod = ({ state, setState, handleSave }) => {\n  const {\n    toolForAutomaticDetection,\n    siftNinjaRiskFactorThresholdVulgar,\n    siftNinjaRiskFactorThresholdSexting,\n    siftNinjaRiskFactorThresholdRacism,\n    siftNinjaAccountName,\n    siftNinjaChannelName,\n    siftNinjaApiKey,\n    automaticMaskCharError,\n    automaticChannelError,\n    automaticDetectionChannel,\n    automaticDetectionReRouteMessages,\n    automaticDetectionModType,\n    applyToAllChannelIdsAutomatic,\n    automaticDetectionCharacterToMaskWith,\n    tisaneRiskFactorThresholdBigotry,\n    tisaneRiskFactorThresholdCyberBullying,\n    tisaneRiskFactorThresholdCriminalActivity,\n    tisaneRiskFactorThresholdSexualAdvances,\n    tisaneRiskFactorThresholdProfanity,\n    tisaneApiKey,\n    tisaneLanguage,\n  } = state.automaticDetection;\n\n  const classes = useStyles();\n  const checkboxForReroute = constantBoolean(automaticDetectionReRouteMessages);\n  const checkForApplyToAllChannelIds = constantBoolean(applyToAllChannelIdsAutomatic);\n\n  const TooltipText = (\n    <>\n      <span>Sign up with </span>\n      <a\n        style={{ fontWeight: 600, color: \"black\", textDecorationLine: \"none\" }}\n        href=\"https://tisane.ai/signup/\"\n      >\n        Tisane.ai\n      </a>\n      <span> locate your key under your </span>\n      <a\n        style={{ fontWeight: 600, color: \"black\", textDecorationLine: \"none\" }}\n        href=\"https://tisane.ai/developer/\"\n      >\n        Developer Profile.\n      </a>\n      <span> Use primary or secondary key. </span>\n    </>\n  );\n\n  const languageList = [\"English\", \"Spanish\", \"Portugese\", \"French\"];\n\n  return (\n    <>\n      <Card className={classes.cardRoot}>\n        <Box>\n          <Grid container>\n            <Grid item>\n              <label testId=\"Channel_Id\" className={classes.label}>\n                Channel ID\n              </label>\n            </Grid>\n            <Grid item>\n              <Box className={classes.infoIcon}>\n                <LightTooltip title=\"Note: Please add a Channel ID or a Channel pattern. eg. channel.* OR pubNub. Channel ID pattern applies to BOTH text & image moderation if both are enabled.\">\n                  <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                </LightTooltip>\n              </Box>\n            </Grid>\n          </Grid>\n\n          <Box pt={1} mb={2}>\n            <TextField\n              id=\"channelId\"\n              variant=\"outlined\"\n              placeholder=\"Enter channel or channel pattern here Under18.*, Under18\"\n              size=\"small\"\n              fullWidth\n              disabled={checkForApplyToAllChannelIds}\n              error={automaticChannelError}\n              name=\"automaticDetectionChannel\"\n              value={automaticDetectionChannel}\n              onChange={handleChange({ setState, state })}\n            />\n          </Box>\n        </Box>\n        <Grid item>\n          <Grid container justify=\"flex-start\">\n            <Grid item>\n              <Checkbox\n                id=\"applyAll\"\n                checked={checkForApplyToAllChannelIds}\n                onChange={handleChange({\n                  setState,\n                  state,\n                  name: \"applyToAllChannelIdsAutomatic\",\n                })}\n              />\n            </Grid>\n            <Grid item>\n              <Box pt={1} pl={1}>\n                <Typography testId=\"applyAll_channel\" variant=\"body1\">\n                  Apply to All Channel IDs\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"flex-start\">\n          <Grid item sm={12}>\n            <label testId=\"SelectToolLabel\" className={classes.label}>\n              Select third party tool for Automatic Detection\n            </label>\n            <Box pt={1} mb={2}>\n              <FormControl size=\"small\" fullWidth>\n                <Select\n                  id=\"selectTool\"\n                  variant=\"outlined\"\n                  name=\"toolForAutomaticDetection\"\n                  value={toolForAutomaticDetection}\n                  onChange={handleChange({ setState, state })}\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    },\n                    getContentAnchorEl: null,\n                  }}\n                >\n                  <MenuItem value=\"tisane\">Tisane.ai</MenuItem>\n                  <MenuItem value=\"siftninja\">SiftNinja</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n        </Grid>\n        <br />\n        {toolForAutomaticDetection === \"siftninja\" && (\n          <>\n            <Box pt={1}>\n              <Grid container>\n                <Grid item>\n                  <label testid=\"accountName\" className={classes.label}>\n                    SiftNinja Account Name\n                  </label>\n                </Grid>\n                <Grid item>\n                  <Box className={classes.infoIcon}>\n                    <LightTooltip title=\"This option is only available for users who have an existing SiftNinja account\">\n                      <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                    </LightTooltip>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Box pt={1} mb={2}>\n                <TextField\n                  id=\"siftAccountName\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  placeholder=\"SiftNinja Account Name\"\n                  fullWidth\n                  name=\"siftNinjaAccountName\"\n                  value={siftNinjaAccountName}\n                  onChange={handleChange({ setState, state })}\n                />\n              </Box>\n            </Box>\n            <br />\n            <Box pt={1}>\n              <Grid container>\n                <Grid item>\n                  <label testId=\"siftChannelName\" className={classes.label}>\n                    SiftNinja Channel Name\n                  </label>\n                </Grid>\n                <Grid item>\n                  <Box className={classes.infoIcon}>\n                    <LightTooltip title=\"This option is only available for users who have an existing SiftNinja account\">\n                      <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                    </LightTooltip>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Box pt={1} mb={2}>\n                <TextField\n                  id=\"siftChannelName\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  name=\"siftNinjaChannelName\"\n                  placeholder=\"SiftNinja Channel Name\"\n                  value={siftNinjaChannelName}\n                  onChange={handleChange({ setState, state })}\n                />\n              </Box>\n            </Box>\n            <br />\n            <Box pt={1}>\n              <Grid container>\n                <Grid item>\n                  <label testid=\"siftApiKey\" className={classes.label}>\n                    SiftNinja API Key\n                  </label>\n                </Grid>\n                <Grid item>\n                  <Box className={classes.infoIcon}>\n                    <LightTooltip title=\"This option is only available for users who have an existing SiftNinja account\">\n                      <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                    </LightTooltip>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Box pt={1} mb={2}>\n                <TextField\n                  id=\"siftApiKey\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  name=\"siftNinjaApiKey\"\n                  placeholder=\"SiftNinja API key\"\n                  value={siftNinjaApiKey}\n                  onChange={handleChange({ setState, state })}\n                />\n                <Typography testid=\"connectivity\" align=\"right\" className={classes.testText}>\n                  Test Conectivity\n                </Typography>\n              </Box>\n            </Box>\n            <br />\n            <Grid container justify=\"space-between\" spacing={6}>\n              <Grid item sm={6} xs={12} md={6} lg={6}>\n                <Box>\n                  <label testid=\"vulgarRiskFactor\" className={classes.label}>\n                    SiftNinja Risk Factor Threshold For Vulgarity\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"vulgarRiskFactor\"\n                      name={toolForAutomaticDetection}\n                      value={siftNinjaRiskFactorThresholdVulgar}\n                      onChange={handleChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForVulgar\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={6} md={6} lg={6}>\n                <Box>\n                  <label testId=\"SextingRisk\" className={classes.label}>\n                    SiftNinja Risk Factor Threshold For Sexting\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"SextingRisk\"\n                      name={toolForAutomaticDetection}\n                      value={siftNinjaRiskFactorThresholdSexting}\n                      onChange={handleChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForSexting\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={6} md={6} lg={6}>\n                <Box>\n                  <label testid=\"racismRisk\" className={classes.label}>\n                    SiftNinja Risk Factor Threshold For Racism\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"racismRisk\"\n                      name={toolForAutomaticDetection}\n                      value={siftNinjaRiskFactorThresholdRacism}\n                      onChange={handleChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForRacism\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </>\n        )}\n        {toolForAutomaticDetection === \"tisane\" && (\n          <>\n            <Box pt={1}>\n              <Grid container>\n                <Grid item>\n                  <label testid=\"tisaneApiKey\" className={classes.label}>\n                    Tisane.ai API Key\n                  </label>\n                </Grid>\n                <Grid item>\n                  <Box className={classes.infoIcon}>\n                    <LightTooltip title={TooltipText} interactive>\n                      <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                    </LightTooltip>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Box pt={1} mb={2}>\n                <TextField\n                  id=\"tisaneApiKey\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  name=\"tisaneApiKey\"\n                  value={tisaneApiKey}\n                  placeholder=\"Tisane.ai API key\"\n                  onChange={handleTisaneChange({ setState, state })}\n                />\n              </Box>\n            </Box>\n            <br />\n            <Grid container justify=\"flex-start\">\n              <Grid item sm={5}>\n                <label testid=\"lang\" className={classes.labelStyle}>\n                  Language\n                </label>\n                <Box pt={1} mb={2}>\n                  <FormControl\n                    className={classes.formControl}\n                    size=\"small\"\n                    placeholder=\"Langauge\"\n                    fullWidth\n                  >\n                    <Select\n                      id=\"lang\"\n                      variant=\"outlined\"\n                      MenuProps={{\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\",\n                        },\n                        getContentAnchorEl: null,\n                      }}\n                      value={tisaneLanguage}\n                      name=\"tisaneLanguage\"\n                      inputProps={{ \"aria-label\": \"Without label\" }}\n                      onChange={handleTisaneChange({ setState, state })}\n                    >\n                      {languageList.map((language, index) => {\n                        return (\n                          <MenuItem value={language} key={index}>\n                            {language}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                </Box>\n              </Grid>\n            </Grid>\n            <br />\n            <Grid container justify=\"space-between\" spacing={6}>\n              <Grid item sm={6} xs={12} md={6} lg={6}>\n                <Box pl={1}>\n                  <label testid=\"BigotryLevel\" className={classes.label}>\n                    Filter Level For Bigotry (Hate Speech)\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"BigotryLevel\"\n                      value={tisaneRiskFactorThresholdBigotry}\n                      name={toolForAutomaticDetection}\n                      onChange={handleTisaneChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForBigotry\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={6} md={6} lg={6}>\n                <Box pl={1}>\n                  <label testid=\"CyberBullying\" className={classes.label}>\n                    Filter Level For Personal Attacks (Cyberbullying)\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"CyberBullying\"\n                      value={tisaneRiskFactorThresholdCyberBullying}\n                      name={toolForAutomaticDetection}\n                      onChange={handleTisaneChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForCyberBullying\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={12} md={6} lg={6}>\n                <Box pl={1}>\n                  <label testid=\"criminalLevel\" className={classes.label}>\n                    Filter Level For Criminal Activity\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"criminalLevel\"\n                      value={tisaneRiskFactorThresholdCriminalActivity}\n                      name={toolForAutomaticDetection}\n                      onChange={handleTisaneChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForCriminalActivity\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={6} md={6} lg={6}>\n                <Box pl={1}>\n                  <label testid=\"sexualLevel\" className={classes.label}>\n                    Filter Level For Sexual Advances\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"sexualLevel\"\n                      value={tisaneRiskFactorThresholdSexualAdvances}\n                      name={toolForAutomaticDetection}\n                      onChange={handleTisaneChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForSexualAdvances\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={12} md={6} lg={6}>\n                <Box pl={1}>\n                  <label testid=\"ProfanityLevel\" className={classes.label}>\n                    Filter Level For Profanity\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"ProfanityLevel\"\n                      value={tisaneRiskFactorThresholdProfanity}\n                      name={toolForAutomaticDetection}\n                      onChange={handleTisaneChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForProfanity\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </>\n        )}\n\n        <Grid container justify=\"flex-start\" spacing={6}>\n          <Grid item sm={6} md={6}>\n            <label testid=\"blockOrMask\" className={classes.label}>\n              When profanity is detected\n            </label>\n            <Box pt={1} mb={2}>\n              <FormControl size=\"small\" fullWidth>\n                <Select\n                  id=\"blockOrMask\"\n                  variant=\"outlined\"\n                  value={automaticDetectionModType}\n                  name=\"automaticDetectionModType\"\n                  onChange={handleChange({ setState, state })}\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    },\n                    getContentAnchorEl: null,\n                  }}\n                  inputProps={{ \"aria-label\": \"Without label\" }}\n                >\n                  <MenuItem value=\"mask-message\">Mask Message</MenuItem>\n                  <MenuItem value=\"block-message\">Block Message</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n          <Grid item sm={6} md={6}>\n            {automaticDetectionModType === \"mask-message\" && (\n              <>\n                <Grid container>\n                  <Grid item>\n                    <label testid=\"setChar\" className={classes.label}>\n                      Set a masking character\n                    </label>\n                  </Grid>\n                  <Grid item>\n                    <Box className={classes.infoIcon}>\n                      <LightTooltip title=\"Note: Default value will be *\">\n                        <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                      </LightTooltip>\n                    </Box>\n                  </Grid>\n                </Grid>\n                <Box pt={1}>\n                  <TextField\n                    id=\"setChar\"\n                    size=\"small\"\n                    placeholder=\"Set\"\n                    error={automaticMaskCharError}\n                    inputProps={{ maxLength: 1 }}\n                    className={classes.languageWords}\n                    value={automaticDetectionCharacterToMaskWith}\n                    name=\"automaticDetectionCharacterToMaskWith\"\n                    onChange={handleChange({ setState, state })}\n                    fullWidth\n                    variant=\"outlined\"\n                  />\n                </Box>\n              </>\n            )}\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container>\n          <Grid item>\n            <Grid container justify=\"flex-start\">\n              <Grid item>\n                <Checkbox\n                  id=\"reRoute\"\n                  name=\"automaticDetectionReRouteMessages\"\n                  onChange={handleChange({ setState, state })}\n                  checked={checkboxForReroute}\n                />\n              </Grid>\n              <Grid item>\n                <Box pt={1} pl={1}>\n                  <Typography testid=\"reRouteMsg\" variant=\"body1\">\n                    Route messages to\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Box>\n              <Button className={classes.rerouteBtn}>\n                <img src=\"images/reroute.svg\" className={classes.rerouteIconStyle} alt=\"reroute\" />\n                {\"banned.\" + automaticDetectionChannel}\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item></Grid>\n          <Grid item>\n            <Button id=\"cancel\" className={classes.cancelButtonStyle} variant=\"contained\">\n              Cancel\n            </Button>\n            <Button\n              id=\"save\"\n              disabled={state.saveLoading}\n              className={classes.saveButtonStyle}\n              onClick={handleSave}\n              variant=\"contained\"\n            >\n              {state.saveLoading ? (\n                <CircularProgress\n                  size={25}\n                  thickness={4}\n                  color=\"primary\"\n                  className={classes.loaderStyle}\n                />\n              ) : (\n                <></>\n              )}\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n    </>\n  );\n};\n\nexport default AutomaticProfanityMethod;\n","import React from 'react';\nimport WordListProfanityMethod from './wordListModeration/WordListProfanityMethod';\nimport AutomaticProfanityMethod from './automaticModeration/AutomaticProfanityMethod';\n\nconst ModerationMethods = ({\n  handleSave,\n  defaultWords,\n  state,\n  setState,\n  profanityList,\n  setProfanityList\n}) => {\n  if (state.wordListProfanity === 'true') {\n    return (\n      <WordListProfanityMethod\n        handleSave={handleSave}\n        defaultWords={defaultWords}\n        state={state}\n        setState={setState}\n        profanityList={profanityList}\n        setProfanityList={setProfanityList}\n      />\n    );\n  } else if (state.automaticProfanity === 'true') {\n    return <AutomaticProfanityMethod\n       state={state}\n       setState={setState}\n       handleSave={handleSave}\n    />;\n  } else {\n    return <></>;\n  }\n};\n\nexport default ModerationMethods;\n","import { withStyles } from '@material-ui/core/styles';\nconst SwitchButton = withStyles((theme) => ({\n  root: {\n    width: 49,\n    height: 24,\n    padding: 0,\n    marginLeft:\"15px\",\n    margin: theme.spacing(0),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(23px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#6387ED',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 22,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))\n\nexport default SwitchButton;\n","import Switch from '@material-ui/core/Switch';\nimport SwitchButtonStyle from '../../style/switchButton';\n\nconst SwitchButton = SwitchButtonStyle(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport default SwitchButton;\n","import React from \"react\";\nimport { Grid, Box, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/textModeration.js\";\n\nconst FilterCard = ({ state, handleClick }) => {\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"flex-start\" spacing={3}>\n      <Grid item>\n        <Box\n          className={\n            state.wordListProfanity === \"true\" ? classes.methodSelected : classes.methodNotSelected\n          }\n          onClick={handleClick(\"wordListMethod\")}\n        >\n          <Grid container justify=\"center\">\n            <Box p={1}>\n              <img\n                alt=\"\"\n                src={\n                  state.wordListProfanity === \"true\"\n                    ? \"images/selected-word-list.svg\"\n                    : \"images/word-list-not-selected.svg\"\n                }\n              />\n            </Box>\n          </Grid>\n          <Typography variant=\"body1\" align=\"center\">\n            Word List\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid item>\n        <Box\n          className={\n            state.automaticProfanity === \"true\" ? classes.methodSelected : classes.methodNotSelected\n          }\n          onClick={handleClick(\"automaticMethod\")}\n        >\n          <Grid container justify=\"center\">\n            <Box p={1}>\n              <img\n                alt=\"\"\n                src={\n                  state.automaticProfanity === \"true\"\n                    ? \"images/automatic-profanity-selected.svg\"\n                    : \"images/automatic-detection.svg\"\n                }\n              />\n            </Box>\n          </Grid>\n          <Typography testid=\"autoDetection\" variant=\"body1\" align=\"center\">\n            Automatic Detection\n          </Typography>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FilterCard;\n","import { combineLanguageWords, constantBoolean } from '../helpers';\n\nconst regexForBanned = `\"\\\\b(banned)\\\\b\"`.replace(/\\\\/g, '\\\\\\\\');\n\nexport function FilterConditionForWordList(\n  textPnFnStatusdata,\n  type = 'default'\n) {\n  let  wordListCharacterToMaskWith, wordListModType,wordListReRouteMessages,\n  englishProfanity,hindiProfanity,frenchProfanity,spanishProfanity,portugeseProfanity;\n  if (type === 'default'){\n    ({\n      wordListCharacterToMaskWith,\n      wordListModType,\n      wordListReRouteMessages,\n      englishProfanity,\n      hindiProfanity,\n      frenchProfanity,\n      spanishProfanity,\n      portugeseProfanity,\n    } = textPnFnStatusdata);\n  }else {\n    ({\n      wordListCharacterToMaskWith,\n      wordListModType,\n      wordListReRouteMessages,\n      englishProfanity,\n      hindiProfanity,\n      frenchProfanity,\n      spanishProfanity,\n      portugeseProfanity,\n    } = textPnFnStatusdata.wordList);\n  }\n  \n\n  const checkForWordListMaskWord = wordListModType === 'Mask-word';\n  const checkForWordListBlockMessage = wordListModType === 'Block-message';\n  const checkForWordListReRouteMessages = constantBoolean(\n    wordListReRouteMessages\n  );\n  let profanityList = {};\n  if (textPnFnStatusdata.profanityList) {\n    profanityList = textPnFnStatusdata.profanityList;\n  }else{\n    profanityList = {\n      English: englishProfanity.split('|').join(','),\n      Hindi: hindiProfanity.split('|').join(','),\n      Portugese: portugeseProfanity.split('|').join(','),\n      French: frenchProfanity.split('|').join(','),\n      Spanish: spanishProfanity.split('|').join(','),\n    };\n  }\n \n\n  let swearWords = combineLanguageWords(profanityList).replace(\n    /(\\r\\n|\\n|\\r)/gm,\n    ''\n  );\n  let regex = `\"\\\\b(${swearWords})\\\\b\"`.replace(/\\\\/g, '\\\\\\\\');\n\n  if (checkForWordListMaskWord) {\n    if (checkForWordListReRouteMessages) {\n      return wordListMaskWordsAndReroute({\n        regex,\n        wordListCharacterToMaskWith,\n        type,\n      });\n    }\n    return wordListMaskWords({ regex, wordListCharacterToMaskWith, type });\n  }\n\n  if (checkForWordListBlockMessage) {\n    if (checkForWordListReRouteMessages) {\n      return wordListBlockMessageAndReroute({ regex, type });\n    }\n    return wordListBlockMessage({ regex, type });\n  }\n\n  if (type === 'default') {\n    return `if(request && request.ok){\n        return request.ok()\n      }`;\n  }\n\n  return `return Promise.resolve(false)`;\n}\n\nfunction wordListMaskWords({ regex, wordListCharacterToMaskWith, type }) {\n  if (type === 'default') {\n    return `if (request && request.ok) {\n      var badWords = new RegExp(${regex}, \"g\")\n      var bannedChannel = new RegExp(${regexForBanned}, \"g\")\n      if (\n        request.message &&\n        request.message.text &&\n        badWords.test(request.message.text) &&\n        !bannedChannel.test(request.channels[0])\n      ) {\n        var newString = request.message.text;\n        newString = newString.replace(badWords, '${wordListCharacterToMaskWith.repeat(\n          3\n        )}');\n        request.message.text = newString;\n        return request.ok();\n      }\n        request.message.type = \"text\"\n        return request.ok();\n     }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    const badWords = new RegExp(${regex}, \"g\");\n    if (\n      message &&\n      message.text &&\n      badWords.test(message.text)\n    ) {\n      let newString = message.text;\n      newString = newString.replace(badWords, '${wordListCharacterToMaskWith.repeat(\n        3\n      )}');\n      message.text = newString;\n      return resolve(true)\n    }\n    message.type = \"text\"\n      return resolve(true)\n   })`;\n}\n\nfunction wordListMaskWordsAndReroute({\n  regex,\n  wordListCharacterToMaskWith,\n  type,\n}) {\n  if (type === 'default') {\n    return `\n  if (request && request.ok) {\n    const pubnub = require('pubnub');\n    var badWords = new RegExp(${regex}, \"g\")\n    var bannedChannel = new RegExp(${regexForBanned}, \"g\")\n    if (\n      request.message &&\n      request.message.text &&\n      badWords.test(request.message.text) &&\n      !bannedChannel.test(request.channels[0])\n    ) {\n      var originalMessage = request.message.text\n      const moderatedMessage = originalMessage.replace(badWords, '${wordListCharacterToMaskWith.repeat(\n        3\n      )}');\n      request.message.text = moderatedMessage;\n      pubnub.publish({\n      \"channel\": 'banned.'+request.channels[0],\n      \"message\":{ \"type\":\"text\", originalMessage, moderatedMessage }\n      }).then((publishResponse) => {\n        console.log(publishResponse)\n      }).catch((err) => {\n          console.error(err);\n      });\n    }\n      request.message.type = \"text\"\n      return request.ok();\n   }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    const badWords = new RegExp(${regex}, \"g\");\n    if (\n      message &&\n      message.text &&\n      badWords.test(message.text)\n    ) {\n      originalMessage = message.text\n      moderatedMessage = originalMessage.replace(badWords, '${wordListCharacterToMaskWith.repeat(\n        3\n      )}');\n      message.text = moderatedMessage;\n      textReouteFlag = true;\n      return resolve(true)\n    }\n    message.type = \"text\"\n      return resolve(true)\n   })`;\n}\n\nfunction wordListBlockMessage({ regex, type }) {\n  if (type === 'default') {\n    return `if (request && request.ok) {\n    var badWords = new RegExp(${regex}, \"g\")\n    var bannedChannel = new RegExp(${regexForBanned}, \"g\")\n    if(badWords.test(request[\"message\"][\"text\"]) && !bannedChannel.test(request.channels[0])) {\n       return request.abort(\"moderated message\");\n   }\n      request.message.type = \"text\"\n      return request.ok();\n  }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    const badWords = new RegExp(${regex}, \"g\");\n    if (\n      message &&\n      message.text &&\n      badWords.test(message.text)\n    ) {\n      textBlockedFlag = true;\n      return resolve(true)\n    }\n    message.type = \"text\"\n      return resolve(true)\n   })`;\n}\n\nfunction wordListBlockMessageAndReroute({ regex, type }) {\n  if (type === 'default') {\n    return `if (request && request.ok) {\n    const pubnub = require('pubnub');\n    var badWords = new RegExp(${regex}, \"g\")\n    var bannedChannel = new RegExp(${regexForBanned}, \"g\")\n    if(badWords.test(request[\"message\"][\"text\"]) && !bannedChannel.test(request.channels[0])) {\n      pubnub.publish({\n      \"channel\": 'banned.'+request.channels[0],\n      \"message\": { originalMessage: request.message.text, \"type\":\"text\" }\n      }).then((publishResponse) => {\n        console.log(publishResponse)\n      }).catch((err) => {\n          console.error(err);\n      });\n       return request.abort(\"moderated message\");\n   }\n      request.message.type = \"text\"\n      return request.ok();\n  }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    const badWords = new RegExp(${regex}, \"g\");\n    if (\n      message &&\n      message.text &&\n      badWords.test(message.text)\n    ) {\n      originalMessage = message.text;\n      textBlockedFlag = true;\n      textReouteFlag = true;\n      return resolve(true);\n    }\n    message.type = \"text\"\n      return resolve(true);\n   })`;\n}\n","export const getSelectedDetectionTool = (data) => {\n  if (data.toolForAutomaticDetection === 'tisane') {\n    const selectedLanguage = getSelectedLanguage(data.tisaneLanguage);\n    return `const apiKey = '${data.tisaneApiKey}';\n      const abuseTypes = ['bigotry', 'personal_attack', 'criminal_activity', 'sexual_advances', 'profanity'];\n      const serverityTypeObject = {\n        extreme:.25,\n        high:.50,\n        medium:.75,\n        low:1,\n        none:0\n      };\n      const abuseTypeObject = {\n        bigotry:${data.tisaneRiskFactorThresholdBigotry},\n        criminal_activity:${data.tisaneRiskFactorThresholdCriminalActivity},\n        sexual_advances:${data.tisaneRiskFactorThresholdSexualAdvances},\n        personal_attack:${data.tisaneRiskFactorThresholdCyberBullying},\n        profanity:${data.tisaneRiskFactorThresholdProfanity}\n      }\n      if (!message.text) {\n        return request.ok()\n      }\n      const url = \"https://api.tisane.ai/parse\";\n      const http_options = {\n        \"method\": \"POST\",\n        \"headers\": {\n                    \"Ocp-Apim-Subscription-Key\": apiKey\n        },\n        \"body\": JSON.stringify({\n          \"language\": \"${selectedLanguage}\", // or whatever language you use\n          \"content\": message.text,\n          \"settings\": {\"snippets\": true, \"format\":\"dialogue\"}\n        }),\n        \"timeout\" : 5000\n    };\n  \n    return xhr.fetch(url, http_options).then(response => {\n  \n      var body = JSON.parse(response.body);\n      var thirdPartyResponse = (response.status === 200 ? body : { error: body });\n      console.log('Response from tisane:');\n      console.log(thirdPartyResponse);\n      let checkThresholdForThirdParty = false;\n      const reasons = [];\n      const serverityTypes = [];\n      if (thirdPartyResponse.abuse && Array.isArray(thirdPartyResponse.abuse) && thirdPartyResponse.abuse.length) {\n        thirdPartyResponse.abuse.forEach((element)=>{\n          serverityTypes.push(element.severity);\n          if (abuseTypeObject[element.type] !== 0) {\n            if (abuseTypes.includes(element.type) && abuseTypeObject[element.type] >= serverityTypeObject[element.severity]) {\n              const abuse = element.type.replace(/_/g, ' ');\n              reasons.push(abuse+'; '+ element.severity);\n              checkThresholdForThirdParty = true;\n            }\n          }\n        });\n      }`;\n  }\n  return `const accountName = '${data.siftNinjaAccountName}';\n  const channelName = '${data.siftNinjaChannelName}';\n  const apiKey = '${data.siftNinjaApiKey}'\n  const basicAuth = require('codec/auth');\n  const authorization = basicAuth.basic(accountName + '/' + channelName,apiKey);\n  const http_options = {\n    \"method\": \"POST\",\n    \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": authorization\n    },\n    \"body\": JSON.stringify({\n        \"text\": message.text,\n        \"user_id\": message.user_id,\n        \"user_display_name\": message.user_display_name\n    })\n  };\n  const reasons = [];\n  const url = \"https://\" + accountName + \".siftninja.com/api/v1/channel/\" + channelName + \"/sifted_data\";\n  return xhr.fetch(url, http_options).then(response => {\n\n  var body = JSON.parse(response.body);\n  var thirdPartyResponse = (response.status === 200 ? body : { error: body });\n\n  const vulgarity = thirdPartyResponse.tags.vulgar === null?0:thirdPartyResponse.tags.vulgar;\n  const racist = thirdPartyResponse.tags.racist === null?0:thirdPartyResponse.tags.racist;\n  const sexting = thirdPartyResponse.tags.sexting === null?0:thirdPartyResponse.tags.sexting;\n\n  console.log('Vulgarity score :', vulgarity, 'Racism score :', racist, 'Sexting score :', sexting);\n\n  const checkThresholdForThirdParty = vulgarity>'${data.siftNinjaRiskFactorThresholdVulgar}'\n  || racist>'${data.siftNinjaRiskFactorThresholdRacism}'\n  || sexting>'${data.siftNinjaRiskFactorThresholdSexting}';`;\n};\n\nconst getSelectedLanguage = (language) => {\n  const languages = {\n    English: 'en',\n    Spanish: 'es',\n    Portugese: 'pt',\n    French: 'fr',\n  };\n  return languages[language];\n};\n","import { constantBoolean } from '../helpers';\nimport { getSelectedDetectionTool } from './index';\n\nconst regexForBanned = `\"\\\\b(banned)\\\\b\"`.replace(/\\\\/g, '\\\\\\\\');\n\nexport function FilterConditionForAutomatic(\n  textPnFnStatusdata,\n  type = 'default'\n) {\n  let automaticDetectionModType,\n    automaticDetectionReRouteMessages,\n    automaticDetectionCharacterToMaskWith,\n    selectedDetectionTool;\n\n  if (type === 'default') {\n    ({\n      automaticDetectionModType,\n      automaticDetectionReRouteMessages,\n      automaticDetectionCharacterToMaskWith,\n    } = textPnFnStatusdata);\n    selectedDetectionTool = getSelectedDetectionTool(textPnFnStatusdata);\n  } else {\n    ({\n      automaticDetectionModType,\n      automaticDetectionReRouteMessages,\n      automaticDetectionCharacterToMaskWith,\n    } = textPnFnStatusdata.automaticDetection);\n    selectedDetectionTool = getSelectedDetectionTool(\n      textPnFnStatusdata.automaticDetection\n    );\n  }\n\n  const checkForAutomaticMaskMessage =\n    automaticDetectionModType === 'mask-message';\n  const checkForAutomaticBlockMessage =\n    automaticDetectionModType === 'block-message';\n  const checkForAutomaticReRouteMessages = constantBoolean(\n    automaticDetectionReRouteMessages\n  );\n\n  if (checkForAutomaticMaskMessage) {\n    if (checkForAutomaticReRouteMessages) {\n      return automaticMaskMessageAndReroute({\n        selectedDetectionTool,\n        automaticDetectionCharacterToMaskWith,\n        type,\n      });\n    }\n    return automaticMaskMessage({\n      selectedDetectionTool,\n      automaticDetectionCharacterToMaskWith,\n      type,\n    });\n  }\n\n  if (checkForAutomaticBlockMessage) {\n    if (checkForAutomaticReRouteMessages) {\n      return automaticBlockMessageAndReroute({\n        selectedDetectionTool,\n        type,\n      });\n    }\n    return automaticBlockMessage({\n      selectedDetectionTool,\n      type,\n    });\n  }\n\n  if (type === 'default') {\n    return `if(request && request.ok){\n      return request.ok()\n    }`;\n  }\n\n  return `return Promise.resolve(false)`;\n}\n\nfunction automaticMaskMessage({\n  selectedDetectionTool,\n  automaticDetectionCharacterToMaskWith,\n  type,\n}) {\n  if (type === 'default') {\n    return `if(request && request.ok){\n    const xhr = require(\"xhr\");\n    const console = require('console');\n    var bannedChannel = new RegExp(${regexForBanned}, \"g\")\n    let message = request.message;\n  \n    if(bannedChannel.test(request.channels[0])){\n       request.message.type = \"text\";\n       console.log('Skipping moderation on message sent to banned channel: ' + request.channels[0]);\n       return request.ok(message);\n     }\n  \n     ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n               message.text = message.text.replace(/[a-z-A-Z-!]/g, '${automaticDetectionCharacterToMaskWith}');\n              return request.ok(message);\n          }\n         request.message.type = \"text\"\n         return request.ok(message);\n  \n     }).catch(err => {\n         var thirdPartyResponse = { error: err };\n         Object.assign(message, { thirdPartyResponse });\n  \n         return request.ok(message);\n     });\n      }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n        message.text = message.text.replace(/[a-z-A-Z-!]/g, '${automaticDetectionCharacterToMaskWith}');\n        return resolve(true);\n    }\n    message.type = \"text\"\n    return resolve(true);\n    }).catch(err => {\n      var thirdPartyResponse = { error: err };\n      Object.assign(message, { thirdPartyResponse });\n      return reject(message);\n  })\n   })`;\n}\n\nfunction automaticMaskMessageAndReroute({\n  selectedDetectionTool,\n  automaticDetectionCharacterToMaskWith,\n  type,\n}) {\n  if (type === 'default') {\n    return `if(request && request.ok){\n    const pubnub = require('pubnub');\n    const bannedChannel = new RegExp(${regexForBanned}, \"g\")\n    const console = require('console');\n    let message = request.message;\n \n    if(bannedChannel.test(request.channels[0])){\n       request.message.type = \"text\";\n       console.log('Skipping moderation on message sent to banned channel: '  + request.channels[0]);\n       return request.ok(message);\n    }\n \n    const xhr = require(\"xhr\");\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n \n             var originalMessage = request.message.text;\n             const moderatedMessage = message.text.replace(/[a-z-A-Z-!]/g, '${automaticDetectionCharacterToMaskWith}');\n             let payload = {\"type\":\"text\", originalMessage, moderatedMessage};\n             if (reasons && reasons.length) {\n               payload.reason = reasons.join(\", \");\n             }\n              pubnub.publish({\n              \"channel\": 'banned.'+request.channels[0],\n              \"message\": payload\n              }).then((publishResponse) => {\n                console.log('Sending original message to banned.' + request.channels[0]);\n                console.log(publishResponse)\n              }).catch((err) => {\n                  console.error(err);\n              });\n             message.type = 'text';\n             message.text = moderatedMessage;\n             console.log('Sending moderated message to channel: ' + request.channels[0]);\n             return request.ok(message);\n         }\n        request.message.type = \"text\"\n        return request.ok(message);\n \n    }).catch(err => {\n        var thirdPartyResponse = { error: err };\n        Object.assign(message, { thirdPartyResponse });\n \n        return request.ok(message);\n    });\n \n     }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n      originalMessage = message.text;\n      moderatedMessage = message.text.replace(/[a-z-A-Z-!]/g, '${automaticDetectionCharacterToMaskWith}');\n      message.text = moderatedMessage;\n      textReouteFlag = true;\n      if (reasons && reasons.length) {\n        reasonForModeration = reasons.join(\", \");\n      }\n      return resolve(true);\n    }\n    message.type = \"text\";\n    return resolve(true);\n    }).catch(err => {\n      var thirdPartyResponse = { error: err };\n      Object.assign(message, { thirdPartyResponse });\n      return reject(message);\n  });\n   })`;\n}\n\nfunction automaticBlockMessage({ selectedDetectionTool, type }) {\n  if (type === 'default') {\n    return `if(request && request.ok){\n    var bannedChannel = new RegExp(${regexForBanned}, \"g\");\n    let message = request.message;\n    const console = require('console');\n    \n  if(bannedChannel.test(request.channels[0])){\n     request.message.type = \"text\";\n     console.log('Skipping moderation on message sent to banned channel: '  + request.channels[0]);\n     return request.ok(message);\n  }\n    const xhr = require(\"xhr\");\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n          return request.abort(\"moderated message\");\n    }\n  request.message.type = \"text\"\n  return request.ok(message);\n\n  }).catch(err => {\n      var thirdPartyResponse = { error: err };\n      Object.assign(message, { thirdPartyResponse });\n\n      return request.ok(message);\n  });\n\n   }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n       textBlockedFlag = true;\n       return resolve(true);\n    }\n    message.type = \"text\"\n    return resolve(true);\n  }).catch(err => {\n    var thirdPartyResponse = { error: err };\n    Object.assign(message, { thirdPartyResponse });\n    return reject(message);\n});\n   })`;\n}\n\nfunction automaticBlockMessageAndReroute({ selectedDetectionTool, type }) {\n  if (type === 'default') {\n    return `if(request && request.ok){\n    const pubnub = require('pubnub');\n    var bannedChannel = new RegExp(${regexForBanned}, \"g\")\n    let message = request.message;\n    const console = require('console');\n \n    if(bannedChannel.test(request.channels[0])){\n       request.message.type = \"text\";\n       console.log('Skipping moderation on message sent to banned channel: ' + request.channels[0]);\n       return request.ok(message);\n    }\n    const xhr = require(\"xhr\");\n    ${selectedDetectionTool}\n    \n         if(checkThresholdForThirdParty){\n              let payload = {\"type\":\"text\", originalMessage: request.message.text};\n              if (reasons && reasons.length) {\n                payload.reason = reasons.join(\", \");\n              }\n               pubnub.publish({\n               \"channel\": 'banned.'+request.channels[0],\n               \"message\": payload\n               }).then((publishResponse) => {\n                 console.log('Sending original message to banned.' + request.channels[0]);\n                 console.log(publishResponse)\n               }).catch((err) => {\n                   console.error(err);\n               });\n               return request.abort(\"moderated message\");\n         }\n \n        request.message.type = \"text\"\n        console.log('Sending moderated message to channel: ' + request.channels[0]);\n        return request.ok(message);\n \n    }).catch(err => {\n        var thirdPartyResponse = { error: err };\n        Object.assign(message, { thirdPartyResponse });\n \n        return request.ok(message);\n    });\n \n     }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n        originalMessage = message.text;\n        textBlockedFlag = true;\n        textReouteFlag = true;\n        if (reasons && reasons.length) {\n          reasonForModeration = reasons.join(\", \");\n        }\n        return resolve(true);\n    }\n    message.type = \"text\"\n    return resolve(true);\n  }).catch(err => {\n    var thirdPartyResponse = { error: err };\n    Object.assign(message, { thirdPartyResponse });\n    return reject(message);\n});\n   })`;\n}\n","\nimport {\n  groupLanguageWords,\n  constantBoolean,\n} from './helpers';\n\nimport { FilterConditionForWordList } from './wordlist/index';\nimport { FilterConditionForAutomatic } from './automaticTextModeration/filterConditionForAutomatic';\n\n\nexport default function profanityFunction(data) {\n  const {\n    wordListModType,\n    wordListReRouteMessages,\n    applyToAllChannelIdsWordlist,\n    applyToAllChannelIdsAutomatic,\n    wordListCharacterToMaskWith,\n    automaticDetectionModType,\n    automaticDetectionReRouteMessages,\n    automaticDetectionCharacterToMaskWith,\n    toolForAutomaticDetection,\n    siftNinjaRiskFactorThresholdVulgar,\n    siftNinjaRiskFactorThresholdSexting,\n    siftNinjaRiskFactorThresholdRacism,\n    siftNinjaAccountName,\n    siftNinjaChannelName,\n    siftNinjaApiKey,\n    wordListProfanity,\n    automaticProfanity,\n    textModerationToggle,\n    tisaneRiskFactorThresholdBigotry,\n    tisaneRiskFactorThresholdCyberBullying,\n    tisaneRiskFactorThresholdCriminalActivity,\n    tisaneRiskFactorThresholdSexualAdvances,\n    tisaneRiskFactorThresholdProfanity,\n    tisaneApiKey,\n    tisaneLanguage,\n  } = data;\n\n  let english = data.profanityList['English'];\n  let hindi = data.profanityList['Hindi'];\n  let spanish = data.profanityList['Spanish'];\n  let french = data.profanityList['French'];\n  let portugese = data.profanityList['Portugese'];\n\n\n  function noProfanityFilterSelected() {\n    return `if(request && request.ok){\n        return request.ok();\n    }`;\n  }\n\n  const checkForWordListProfanity =\n    constantBoolean(wordListProfanity) && constantBoolean(textModerationToggle);\n\n  const checkForAutomaticProfanity =\n    constantBoolean(automaticProfanity) &&\n    constantBoolean(textModerationToggle);\n  \n\n  const filterConditions = () => {\n    if (checkForWordListProfanity) {\n      return FilterConditionForWordList(data);\n    } else if (checkForAutomaticProfanity) {\n      return FilterConditionForAutomatic(data);\n    } else {\n      return noProfanityFilterSelected();\n    }\n  };\n\n  return `function runProfanity(request){\n     ${filterConditions()}\n     return {\n       wordListProfanity: '${wordListProfanity}',\n       automaticProfanity: '${automaticProfanity}',\n       textModerationToggle: '${textModerationToggle}',\n       wordList:{\n         applyToAllChannelIdsWordlist:'${applyToAllChannelIdsWordlist}',\n         wordListReRouteMessages: '${wordListReRouteMessages}',\n         wordListModType: '${wordListModType}',\n         wordListCharacterToMaskWith:'${wordListCharacterToMaskWith}',\n         englishProfanity:'${groupLanguageWords(english)}',\n         hindiProfanity: '${groupLanguageWords(hindi)}',\n         frenchProfanity: '${groupLanguageWords(french)}',\n         spanishProfanity: '${groupLanguageWords(spanish)}',\n         portugeseProfanity: '${groupLanguageWords(portugese)}'\n       },\n       automaticDetection:{\n         applyToAllChannelIdsAutomatic: '${applyToAllChannelIdsAutomatic}',\n         automaticDetectionReRouteMessages: '${automaticDetectionReRouteMessages}',\n         automaticDetectionModType: '${automaticDetectionModType}',\n         automaticDetectionCharacterToMaskWith:'${automaticDetectionCharacterToMaskWith}',\n         toolForAutomaticDetection:'${toolForAutomaticDetection}',\n         siftNinjaRiskFactorThresholdVulgar:'${siftNinjaRiskFactorThresholdVulgar}',\n         siftNinjaRiskFactorThresholdSexting:'${siftNinjaRiskFactorThresholdSexting}',\n         siftNinjaRiskFactorThresholdRacism:'${siftNinjaRiskFactorThresholdRacism}',\n         siftNinjaAccountName:'${siftNinjaAccountName}',\n         siftNinjaChannelName:'${siftNinjaChannelName}',\n         siftNinjaApiKey:'${siftNinjaApiKey}',\n         tisaneRiskFactorThresholdBigotry:'${tisaneRiskFactorThresholdBigotry}',\n         tisaneRiskFactorThresholdCyberBullying:'${tisaneRiskFactorThresholdCyberBullying}',\n         tisaneRiskFactorThresholdCriminalActivity:'${tisaneRiskFactorThresholdCriminalActivity}',\n         tisaneRiskFactorThresholdSexualAdvances:'${tisaneRiskFactorThresholdSexualAdvances}',\n         tisaneRiskFactorThresholdProfanity:'${tisaneRiskFactorThresholdProfanity}',\n         tisaneApiKey:'${tisaneApiKey}',\n         tisaneLanguage:'${tisaneLanguage}'\n       },\n     }\n  }`;\n}\n","import { constantBoolean } from './helpers';\nimport { FilterConditionForWordList } from './wordlist/index';\nimport { FilterConditionForAutomatic } from './automaticTextModeration/filterConditionForAutomatic';\n\n/* ---------\n    This functon will be passe to the event hanlder\n  ----------- */\nexport default function profanityFunctionForImage(data) {\n  const {\n    imageModerationToggle,\n    toolForImageModeration,\n    sightengineAPIUser,\n    sightengineAPIKey,\n    sightengineWorkflowId,\n    sightengineRiskFactorThreshold,\n    reRouteMessages,\n    applyToAllChannelIds,\n    textPnFnStatusdata,\n  } = data;\n  let regexForBanned = `\"\\\\b(banned)\\\\b\"`.replace(/\\\\/g, '\\\\\\\\');\n\n  const checkForTextModeration = () => {\n    if (!constantBoolean(textPnFnStatusdata.textModerationToggle)) {\n      return ` return Promise.resolve(false)`;\n    }\n    if (constantBoolean(textPnFnStatusdata.wordListProfanity)) {\n      return FilterConditionForWordList(textPnFnStatusdata, 'image');\n    }\n    if (constantBoolean(textPnFnStatusdata.automaticProfanity)) {\n      // update for automatic\n      return FilterConditionForAutomatic(textPnFnStatusdata, 'image');\n    }\n    return `return Promise.resolve(false)`;\n  };\n  /* -------\n   This PubNub function is use when admin turn on the image moderation.\n   This function will only block the image from the main channel if it passes the sightengine reject_prob value.\n   This will not re-route any image.\n   ---------  */\n  /* ------\n    This PubNub function is use when admin turn on the image moderation and select the re-route checkbox.\n    When this function runs it will moderate the image if it passes the sightengine reject_prob value\n    and then it will re-route the image to the respective banned channel\n  ---------  */\n  const imageModeration = (imageTypeFunction = 'block') => {\n    let imageFunction = ` imageBannedFlag = true; `;\n    const textModerationPromise = checkForTextModeration();\n    if (imageTypeFunction === 'reroute') {\n      imageFunction = ` imageBannedReouteFlag = true;`;\n    }\n\n    return ` if (request && request.ok) {\n                const bannedChannel = new RegExp(${regexForBanned}, \"g\")\n                const console = require(\"console\");\n                const query = require(\"codec/query_string\");\n                const xhr = require(\"xhr\");\n                const pubnub = require(\"pubnub\");\n\n                if (bannedChannel.test(request.channels[0])) {\n                  request.message.type = \"text\";\n                  return request.ok(request);\n                }\n\n                let message = request.message.message;\n                let originalMessage;\n                let moderatedMessage;\n                let imageBannedFlag = false;\n                let imageBannedReouteFlag = false;\n                let textBlockedFlag = false;\n                let textReouteFlag = false;\n                let reasonForModeration;\n\n                const textmoderation = () => {\n                  console.log(\"start text Moderation Function\");\n                  ${textModerationPromise}\n                };\n\n                if (request.message.file) {\n                      var apiUrl = \"https://api.sightengine.com/1.0/check-workflow.json\";\n                      var fileUrl = \"\";\n                      const channel = request.channels[0];\n                      const fileId = request.message.file.id;\n                      const fileName = request.message.file.name;\n                      fileUrl = pubnub.getFileUrl({\n                        channel: channel,\n                        id: fileId,\n                        name: fileName,\n                      });\n                      const queryParams = {\n                        'api_secret': '${sightengineAPIKey}',\n                        'workflow': '${sightengineWorkflowId}',\n                        'api_user': '${sightengineAPIUser}',\n                        url: fileUrl\n                      };\n\n                      const imageModerationFunction = () => {\n                        return new Promise((resolve, reject) => {\n                          console.log(\"start image Moderation Function\");\n                          xhr\n                            .fetch(apiUrl + \"?\" + query.stringify(queryParams))\n                            .then(function (r) {\n                              const body = JSON.parse(r.body || r);\n                              return resolve(body);\n                            })\n                            .catch(function (e) {\n                              console.error(e);\n                              return reject(e);\n                            });\n                        });\n                      };\n\n                      return Promise.all([imageModerationFunction(), textmoderation()])\n                        .then((values) => {\n                          console.log(\"values\", values);\n                          let payload = {'file': {}, 'message': {}};\n                          if (\n                            values[0] &&\n                            values[0].summary &&\n                            values[0].summary.reject_prob &&\n                            '${sightengineRiskFactorThreshold}' < values[0].summary.reject_prob\n                          ) {\n                              ${imageFunction}\n                            }\n\n                          if (imageBannedReouteFlag) {\n                            payload.file = {\n                              type:'image',\n                              url: fileUrl,\n                              id: fileId,\n                              name: fileName,\n                              reason: values[0].summary.reject_reason,\n                            }\n                          }\n\n                          if (textReouteFlag) {\n                            payload.message.type = \"text\";\n                            if (originalMessage) {\n                               payload.message.originalMessage = originalMessage;\n                            } else {\n                               payload.message.originalMessage = request.message.message.text;\n                            }\n                            if (moderatedMessage) {\n                               payload.message.moderatedMessage = moderatedMessage;\n                            }\n                            if (reasonForModeration) {\n                               payload.message.reason = reasonForModeration;\n                            }\n                          }\n                \n                          if (payload.file.type || payload.message.type) {\n                            return pubnub\n                            .publish({\n                              channel: \"banned.\" + request.channels[0],\n                              message: payload,\n                            })\n                            .then((publishResponse) => {\n                              if (textBlockedFlag && (imageBannedFlag || imageBannedReouteFlag)) {\n                                return request.abort(\"moderated message\");\n                              }\n                              if (!imageBannedFlag && !imageBannedReouteFlag) {\n                                message.file = {};\n                                message.file.id = fileId;\n                                message.file.name = fileName;\n                                message.file.url = fileUrl;\n                              }\n                              if (textBlockedFlag) {\n                                delete message.text;\n                              }\n                              if (message.text) {\n                                message.message = {}\n                                message.message.text = message.text\n                                delete message.text\n                              }\n                              message.file =  message.file || {};\n                              message.message =  message.message || {};\n                              if (!message.file.name && !message.message.text) {\n                                return request.abort(\"moderated message\");\n                              }\n                              return request.ok(message);\n                            })\n                            .catch((err) => {\n                              console.error(err);\n                            });\n                          }\n                          if (values[0] || values[1]) {\n                           if (textBlockedFlag && imageBannedFlag) {\n                            return request.abort(\"moderated message\");\n                           }\n                            if (textBlockedFlag) {\n                              delete message.text;\n                            }\n                            if (!imageBannedFlag) {\n                              request.message.message.file = {};\n                              request.message.message.file.url = fileUrl;\n                              request.message.message.file.id = fileId;\n                              request.message.message.file.name = fileName;\n                              request.message.message.type = \"text\";\n                            }\n                            message.message = {}\n                            if (message.text) {\n                              message.message.text = message.text\n                              delete message.text\n                            }\n                            message.file =  message.file || {};\n                            if (!message.file.name && !message.message.text) {\n                              return request.abort(\"moderated message\");\n                            }\n                            return request.ok(message);\n                          }\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                          return request.abort(err);\n                        });\n                    }\n              }\n                `;\n  };\n  /* -------\n  This function is for handling differect use cases for image moderation\n---------- */\n  const filterConditions = () => {\n    let imageTypeFunction = 'block';\n    if (constantBoolean(reRouteMessages)) {\n      imageTypeFunction = 'reroute';\n    }\n    return imageModeration(imageTypeFunction);\n  };\n  return `function runProfanity(request){\n            ${filterConditions()}\n        return {\n          imageModerationToggle: '${imageModerationToggle}',\n          toolForImageModeration: '${toolForImageModeration}',\n          sightengineAPIUser: '${sightengineAPIUser}',\n          sightengineAPIKey: '${sightengineAPIKey}',\n          sightengineWorkflowId: '${sightengineWorkflowId}',\n          sightengineRiskFactorThreshold: '${sightengineRiskFactorThreshold}',\n          reRouteMessages: '${reRouteMessages}',\n          applyToAllChannelIds: '${applyToAllChannelIds}'\n        }\n    }`;\n}\n","import profanityFunctionForImage from '../../utils/profanityFunctionForImage';\n\nimport {\n  startPubNubFunction,\n  createPubNubEventHandler,\n} from '../../services/pubnub';\nasync function CreateEventHandler({\n  blockId,\n  keyId,\n  token,\n  state,\n  setState,\n  textPnFnStatusdata,\n}) {\n  const {\n    imageModerationToggle,\n    channelId,\n    applyToAllChannelIds,\n    toolForImageModeration,\n    sightengineAPIUser,\n    sightengineAPIKey,\n    sightengineWorkflowId,\n    sightengineRiskFactorThreshold,\n    reRouteMessages,\n  } = state;\n\n  const config = {\n    type: 'js',\n    key_id: keyId,\n    block_id: blockId,\n    channels: channelId,\n    code: `${profanityFunctionForImage({\n      imageModerationToggle,\n      channelId,\n      applyToAllChannelIds,\n      toolForImageModeration,\n      sightengineAPIUser,\n      sightengineAPIKey,\n      sightengineWorkflowId,\n      sightengineRiskFactorThreshold,\n      reRouteMessages,\n      textPnFnStatusdata,\n    })}`,\n    event: 'js-before-publish-file',\n    log_level: 'debug',\n    name: `BLOCK-${blockId}-IMAGE-MODERATION`,\n    output: 'output-0.5823105682419438',\n  };\n  try {\n    await createPubNubEventHandler(config, token);\n    if (imageModerationToggle) {\n      await startPubNubFunction({ key_id: keyId, block_id: blockId }, token);\n    }\n    setState((prevState) => ({\n      ...prevState,\n      saveLoading: false,\n    }));\n  } catch (error) {\n    setState((previousStateValue) => ({\n      ...previousStateValue,\n      errorStatus: true,\n      saveLoading: false,\n      errorMsg: error.message,\n      successMsg: '',\n      successStatus: false,\n    }));\n  }\n}\n\nexport default CreateEventHandler;\n","import profanityFunctionForImage from '../../utils/profanityFunctionForImage';\n\nimport {\n  startPubNubFunction,\n  stopPubNubFunction,\n  updatePubNubEventHandler,\n} from '../../services/pubnub';\n\n/* ------\n  This function is for updating the event hanlder\n---------  */\nasync function UpdateEventHandler({\n  eventHandler,\n  blockId,\n  keyId,\n  token,\n  setState,\n  state,\n  textPnFnStatusdata,\n  uiPagecall,\n}) {\n  const {\n    imageModerationToggle,\n    channelId,\n    applyToAllChannelIds,\n    toolForImageModeration,\n    sightengineAPIUser,\n    sightengineAPIKey,\n    sightengineWorkflowId,\n    sightengineRiskFactorThreshold,\n    reRouteMessages,\n  } = state;\n\n  const updatedConfig = {\n    type: 'js',\n    key_id: keyId,\n    block_id: blockId,\n    id: eventHandler[0].id,\n    channels: channelId,\n    code: `${profanityFunctionForImage({\n      imageModerationToggle,\n      channelId,\n      applyToAllChannelIds,\n      toolForImageModeration,\n      sightengineAPIUser,\n      sightengineAPIKey,\n      sightengineWorkflowId,\n      sightengineRiskFactorThreshold,\n      reRouteMessages,\n      textPnFnStatusdata,\n    })}`,\n    event: 'js-before-publish-file',\n    log_level: 'debug',\n    name: `BLOCK-${blockId}-IMAGE-MODERATION`,\n    output: 'output-0.5823105682419438',\n  };\n\n  try {\n    await updatePubNubEventHandler(updatedConfig, token);\n    if (!imageModerationToggle) {\n      await stopPubNubFunction({ key_id: keyId, block_id: blockId }, token);\n      if (uiPagecall === 'textModeration') {\n        return true;\n      }\n      return setState((previousState) => ({\n        ...previousState,\n        saveLoading: false,\n        successStatus: true,\n        errorStatus: false,\n        errorMsg: '',\n        successMsg: 'Successfully Updated.',\n      }));\n    }\n    await startPubNubFunction({ key_id: keyId, block_id: blockId }, token);\n    if (uiPagecall === 'textModeration') {\n      return true;\n    }\n    setState((previous) => ({\n      ...previous,\n      saveLoading: false,\n      successStatus: true,\n      errorStatus: false,\n      errorMsg: '',\n      successMsg: 'Successfully Updated.',\n    }));\n  } catch (error) {\n    if (uiPagecall === 'textModeration') {\n      return true;\n    }\n    setState((previousValue) => ({\n      ...previousValue,\n      errorStatus: true,\n      saveLoading: false,\n      errorMsg: error.message,\n      successMsg: '',\n      successStatus: false,\n    }));\n  }\n}\n\nexport default UpdateEventHandler;\n","import {\n  filterImageFunction,\n  pnFunctionFilterStatus,\n  filterImageEventHandler,\n  filterFunction,\n  filterEventHandler,\n  constantBoolean,\n} from '../helpers';\nimport CreateEventHandler from '../../components/imageModeration/CreateEventHandler';\nimport UpdateEventHandler from '../../components/imageModeration/UpdateEventHandler';\nimport {\n  fetchPubNubFunction,\n  createPubNubFunction,\n} from '../../services/pubnub';\n\nexport const textModerationCode = (selectedApp, fetchFunctionsResponse) => {\n  const findTextModerationFunction = filterFunction(\n    fetchFunctionsResponse,\n    selectedApp\n  );\n  let blockId;\n  let eventHandlerList;\n  let eventHandler = [];\n  if (findTextModerationFunction.length) {\n    blockId = findTextModerationFunction[0].id;\n    eventHandlerList = findTextModerationFunction[0].event_handlers;\n    eventHandler = filterEventHandler(\n      eventHandlerList,\n      findTextModerationFunction\n    );\n  }\n  let textPnFnStatusdata = [];\n  let wordListProfanity = false;\n  let automaticProfanity = false;\n  let textModerationToggle = false;\n  let textChannelId;\n  if (eventHandler.length) {\n    textPnFnStatusdata = pnFunctionFilterStatus(eventHandler[0].code);\n    ({ wordListProfanity, automaticProfanity, textModerationToggle } =\n      textPnFnStatusdata);\n    textChannelId = eventHandler[0].channels;\n  }\n  return {\n    findTextModerationFunction,\n    blockId,\n    eventHandlerList,\n    eventHandler,\n    wordListProfanity,\n    automaticProfanity,\n    textModerationToggle: constantBoolean(textModerationToggle),\n    textPnFnStatusdata,\n    textChannelId,\n  };\n};\n\nconst handleEventHandler = ({\n  eventHandler,\n  blockId,\n  token,\n  state,\n  setState,\n  keyId,\n  textPnFnStatusdata,\n  uiPagecall,\n}) => {\n  if (eventHandler.length === 0) {\n    return CreateEventHandler({\n      blockId,\n      token,\n      state,\n      setState,\n      keyId,\n      textPnFnStatusdata,\n    });\n  } else {\n    return UpdateEventHandler({\n      eventHandler,\n      blockId,\n      state,\n      setState,\n      keyId,\n      token,\n      textPnFnStatusdata,\n      uiPagecall,\n    });\n  }\n};\n\nexport const handleImageModerationSave = async (\n  app,\n  token,\n  { state, setState, uiPagecall = 'imageModeration' }\n) => {\n  const fetchFunctionsResponse = await fetchPubNubFunction(app.id, token);\n  const { findImageFunction, eventHandler, blockId } = imageModerationCode(\n    app,\n    fetchFunctionsResponse\n  );\n  const { textPnFnStatusdata, textChannelId, textModerationToggle } =\n    textModerationCode(app, fetchFunctionsResponse);\n\n  if (uiPagecall === 'textModeration') {\n    if (eventHandler.length) {\n      const data = pnFunctionFilterStatus(eventHandler[0].code);\n      if (!data.imageModerationToggle) {\n        return true;\n      }\n      data.channelId = textChannelId;\n      data.isState = false;\n      await UpdateEventHandler({\n        eventHandler,\n        blockId,\n        state: data,\n        setState,\n        keyId: app.id,\n        token,\n        textPnFnStatusdata,\n        uiPagecall,\n      });\n    }\n  } else {\n    if (\n      textModerationToggle &&\n      textChannelId &&\n      textChannelId !== state.channelId\n    ) {\n      return setState((previousState) => ({\n        ...previousState,\n        saveLoading: false,\n        successStatus: false,\n        errorStatus: true,\n        errorMsg: 'Channel ID is not same as Text moderation',\n        successMsg: '',\n      }));\n    }\n    const keyId = app.id;\n    if (findImageFunction.length) {\n      await handleEventHandler({\n        eventHandler,\n        blockId,\n        state,\n        setState,\n        keyId,\n        token,\n        textPnFnStatusdata,\n        uiPagecall,\n      });\n    } else {\n      const config = {\n        key_id: app.id,\n        name: `KEY-${app.id}-IMAGE-MODERATION`,\n        description: 'Image moderation function',\n      };\n      await createPubNubFunction(config, token);\n      const fetchFunctions = await fetchPubNubFunction(app.id, token);\n      const blockIdForImage = filterImageFunction(fetchFunctions, app)[0].id;\n      await CreateEventHandler({\n        blockIdForImage,\n        token,\n        state,\n        setState,\n        keyId: app.id,\n        textPnFnStatusdata,\n      });\n    }\n  }\n};\n\nexport const imageModerationCode = (selectedApp, fetchFunctionsResponse) => {\n  const findImageFunction = filterImageFunction(\n    fetchFunctionsResponse,\n    selectedApp\n  );\n  let blockId;\n  let eventHandlerList;\n  let eventHandler = [];\n  if (findImageFunction.length) {\n    blockId = findImageFunction[0].id;\n    eventHandlerList = findImageFunction[0].event_handlers;\n    eventHandler = filterImageEventHandler(eventHandlerList, findImageFunction);\n  }\n  return {\n    findImageFunction,\n    blockId,\n    eventHandlerList,\n    eventHandler,\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport { Grid, CircularProgress, Typography } from '@material-ui/core';\nimport { useStyles } from '../../style/textModeration.js';\nimport SnackBar from '../core/SnackBar';\nimport ModerationMethods from './ModerationMethods';\nimport SwitchButton from '../core/SwitchButton';\nimport FilterCard from './FilterCard';\nimport profanityFunction from '../../utils/profanityFunction';\n\nimport { getCookie } from '../../services/localStorage';\nimport {\n  fetchWords,\n  constantBoolean,\n  selectedAppFromLS,\n  filterFunction,\n  filterEventHandler,\n  getProfanityWordsByLanguage,\n  pnFunctionFilterStatus,\n} from '../../utils/helpers';\nimport {\n  fetchPubNubFunction,\n  createPubNubFunction,\n  startPubNubFunction,\n  stopPubNubFunction,\n  createPubNubEventHandler,\n  updatePubNubEventHandler,\n} from '../../services/pubnub';\n\nimport { handleImageModerationSave } from '../../utils/imageModeration';\n\nconst TextModeration = () => {\n  const classes = useStyles();\n  const [profanityList, setProfanityList] = useState({\n    English: '',\n    Hindi: '',\n    French: '',\n    Portugese: '',\n    Spanish: '',\n  });\n  const [state, setState] = useState({\n    wordList: {\n      wordListChannel: '*',\n      applyToAllChannelIdsWordlist: true,\n      wordsListPatternError: false,\n      wordListLanguage: 'English',\n      wordListModType: 'Mask-word',\n      wordListReRouteMessages: false,\n      wordsListMaskCharError: false,\n      wordsListChannelError: false,\n      wordListCharacterToMaskWith: '*',\n    },\n    automaticDetection: {\n      applyToAllChannelIdsAutomatic: true,\n      toolForAutomaticDetection: 'tisane',\n      siftNinjaRiskFactorThresholdVulgar: 0,\n      siftNinjaRiskFactorThresholdSexting: 0,\n      siftNinjaRiskFactorThresholdRacism: 0,\n      siftNinjaAccountName: '',\n      siftNinjaChannelName: '',\n      siftNinjaApiKey: '',\n      tisaneRiskFactorThresholdBigotry: 0,\n      tisaneRiskFactorThresholdCyberBullying: 0,\n      tisaneRiskFactorThresholdCriminalActivity: 0,\n      tisaneRiskFactorThresholdSexualAdvances: 0,\n      tisaneRiskFactorThresholdProfanity: 0,\n      tisaneApiKey: '',\n      tisaneLanguage: 'English',\n      automaticDetectionChannel: '*',\n      automaticChannelError: false,\n      automaticMaskCharError: false,\n      automaticDetectionReRouteMessages: false,\n      automaticDetectionModType: 'mask-message',\n      automaticDetectionCharacterToMaskWith: '*',\n    },\n    textModerationToggle: false,\n    wordListProfanity: false,\n    automaticProfanity: false,\n    channelOnChange: false,\n    saveLoading: false,\n    initialLoading: true,\n    errorStatus: false,\n    successStatus: false,\n    errorMsg: '',\n    successMsg: '',\n  });\n\n  const checkForWordListProfanity = constantBoolean(state.wordListProfanity);\n  const checkForTextModerationToogle = constantBoolean(\n    state.textModerationToggle\n  );\n  const badWordsByLanguage = getProfanityWordsByLanguage(\n    profanityList,\n    state.wordList.wordListLanguage\n  );\n\n  const handleChange = (e) => {\n    setState({ ...state, textModerationToggle: e.target.checked });\n  };\n\n  const handleClick = (name) => (e) => {\n    e.preventDefault();\n    if (name === 'wordListMethod') {\n      setState({\n        ...state,\n        wordListProfanity: 'true',\n        automaticProfanity: 'false',\n      });\n    } else if (name === 'automaticMethod') {\n      setState({\n        ...state,\n        wordListProfanity: 'false',\n        automaticProfanity: 'true',\n      });\n    }\n  };\n\n  useEffect(() => {\n    setState((previousState) => ({\n      ...previousState,\n      errorStatus: false,\n      errorMsg: '',\n      successStatus: false,\n      successMsg: '',\n    }));\n  }, [state.wordListProfanity, state.automaticProfanity]);\n\n  useEffect(() => {\n    const regexForValidateWordList = /^.*?[,.]$/;\n    const wordListValidationResult = regexForValidateWordList.test(\n      badWordsByLanguage.trim()\n    );\n    if (wordListValidationResult) {\n      setState((beforeState) => ({\n        ...beforeState,\n        errorStatus: true,\n        errorMsg: `Invalid word list pattern, word list\n          should not end with period or delimiter`,\n        wordList: {\n          ...beforeState.wordList,\n          wordsListPatternError: true,\n        },\n      }));\n    } else {\n      setState((previous) => ({\n        ...previous,\n        errorStatus: false,\n        errorMsg: '',\n        wordList: {\n          ...previous.wordList,\n          wordsListPatternError: false,\n        },\n      }));\n    }\n  }, [badWordsByLanguage]);\n\n  useEffect(() => {\n    setState((before) => ({\n      ...before,\n      errorStatus: false,\n      errorMsg: '',\n      wordList: {\n        ...before.wordList,\n        wordsListMaskCharError: false,\n      },\n    }));\n    if (\n      !state.wordList.wordListCharacterToMaskWith.trim() &&\n      state.wordListProfanity &&\n      state.wordList.wordListModType === 'Mask-word'\n    ) {\n      setState((prev) => ({\n        ...prev,\n        errorStatus: true,\n        errorMsg: 'Please set a making character',\n        wordList: {\n          ...prev.wordList,\n          wordsListMaskCharError: true,\n        },\n      }));\n    }\n  }, [\n    state.wordList.wordListCharacterToMaskWith,\n    state.wordListProfanity,\n    state.wordList.wordListModType,\n  ]);\n\n  useEffect(() => {\n    setState((prevStateValue) => ({\n      ...prevStateValue,\n      errorStatus: false,\n      errorMsg: 'Please set a making character',\n      automaticDetection: {\n        ...prevStateValue.automaticDetection,\n        automaticMaskCharError: false,\n      },\n    }));\n    if (\n      !state.automaticDetection.automaticDetectionCharacterToMaskWith.trim() &&\n      state.automaticProfanity &&\n      state.automaticDetection.automaticDetectionModType === 'mask-message'\n    ) {\n      setState((prevValue) => ({\n        ...prevValue,\n        errorStatus: true,\n        errorMsg: 'Please set a making character',\n        automaticDetection: {\n          ...prevValue.automaticDetection,\n          automaticMaskCharError: true,\n        },\n      }));\n    }\n  }, [\n    state.automaticDetection.automaticDetectionCharacterToMaskWith,\n    state.automaticProfanity,\n    state.automaticDetection.automaticDetectionModType,\n  ]);\n\n  useEffect(() => {\n    if (state.channelOnChange) {\n      if (\n        checkForWordListProfanity\n          ? !state.wordList.wordListChannel.length\n          : !state.automaticDetection.automaticDetectionChannel.length\n      ) {\n        setState((previousValue) => ({\n          ...previousValue,\n          errorStatus: true,\n          saveLoading: false,\n          wordList: {\n            ...previousValue.wordList,\n            wordsListChannelError: checkForWordListProfanity ? true : false,\n          },\n          automaticDetection: {\n            ...previousValue.automaticDetection,\n            automaticChannelError: checkForWordListProfanity ? false : true,\n          },\n          errorMsg: 'Channel name is required',\n          successMsg: '',\n          successStatus: false,\n        }));\n      } else {\n        setState((preValue) => ({\n          ...preValue,\n          errorStatus: false,\n          saveLoading: false,\n          errorMsg: '',\n          successMsg: '',\n          wordList: {\n            ...preValue.wordList,\n            wordsListChannelError: false,\n          },\n          automaticDetection: {\n            ...preValue.automaticDetection,\n            automaticChannelError: false,\n          },\n          successStatus: false,\n        }));\n      }\n    }\n  }, [\n    state.wordList.wordListChannel,\n    checkForWordListProfanity,\n    state.channelOnChange,\n    state.automaticDetection.automaticDetectionChannel,\n  ]);\n\n  useEffect(() => {\n    const selectedApp = selectedAppFromLS();\n    const headerToken = getCookie('token');\n    (async () => {\n      if (selectedApp) {\n        try {\n          const fetchFunctionsResponse = await fetchPubNubFunction(\n            selectedApp.id,\n            headerToken\n          );\n\n          if (filterFunction(fetchFunctionsResponse, selectedApp).length) {\n            const eventHandlers = filterFunction(\n              fetchFunctionsResponse,\n              selectedApp\n            )[0].event_handlers;\n            const eventHandler = filterEventHandler(\n              eventHandlers,\n              filterFunction(fetchFunctionsResponse, selectedApp)\n            );\n            if (eventHandler.length > 0) {\n              const data = pnFunctionFilterStatus(eventHandler[0].code);\n\n              const {\n                wordListProfanity,\n                automaticProfanity,\n                textModerationToggle,\n              } = data;\n\n              const {\n                wordListReRouteMessages,\n                wordListModType,\n                applyToAllChannelIdsWordlist,\n                wordListCharacterToMaskWith,\n                englishProfanity,\n                hindiProfanity,\n                frenchProfanity,\n                spanishProfanity,\n                portugeseProfanity,\n              } = data.wordList;\n\n              const {\n                automaticDetectionReRouteMessages,\n                automaticDetectionModType,\n                applyToAllChannelIdsAutomatic,\n                automaticDetectionCharacterToMaskWith,\n                toolForAutomaticDetection,\n                siftNinjaRiskFactorThresholdVulgar,\n                siftNinjaRiskFactorThresholdSexting,\n                siftNinjaRiskFactorThresholdRacism,\n                siftNinjaAccountName,\n                siftNinjaChannelName,\n                siftNinjaApiKey,\n                tisaneRiskFactorThresholdBigotry,\n                tisaneRiskFactorThresholdCyberBullying,\n                tisaneRiskFactorThresholdCriminalActivity,\n                tisaneRiskFactorThresholdSexualAdvances,\n                tisaneRiskFactorThresholdProfanity,\n                tisaneApiKey,\n                tisaneLanguage,\n              } = data.automaticDetection;\n\n              setState((prev) => ({\n                ...prev,\n                wordList: {\n                  ...prev.wordList,\n                  wordListChannel: eventHandler[0].channels,\n                  wordListModType,\n                  applyToAllChannelIdsWordlist,\n                  wordListCharacterToMaskWith,\n                  wordListReRouteMessages,\n                },\n                automaticDetection: {\n                  automaticDetectionChannel: eventHandler[0].channels,\n                  automaticDetectionReRouteMessages,\n                  automaticDetectionModType,\n                  applyToAllChannelIdsAutomatic,\n                  automaticDetectionCharacterToMaskWith,\n                  toolForAutomaticDetection,\n                  siftNinjaRiskFactorThresholdVulgar,\n                  siftNinjaRiskFactorThresholdSexting,\n                  siftNinjaRiskFactorThresholdRacism,\n                  siftNinjaAccountName,\n                  siftNinjaChannelName,\n                  siftNinjaApiKey,\n                  tisaneRiskFactorThresholdBigotry,\n                  tisaneRiskFactorThresholdCyberBullying,\n                  tisaneRiskFactorThresholdCriminalActivity,\n                  tisaneRiskFactorThresholdSexualAdvances,\n                  tisaneRiskFactorThresholdProfanity,\n                  tisaneApiKey,\n                  tisaneLanguage,\n                },\n                initialLoading: false,\n                textModerationToggle: textModerationToggle,\n                wordListProfanity: wordListProfanity,\n                automaticProfanity: automaticProfanity,\n              }));\n              setProfanityList((prev) => ({\n                ...prev,\n                English: englishProfanity.split('|').join(','),\n                Hindi: hindiProfanity.split('|').join(','),\n                Portugese: portugeseProfanity.split('|').join(','),\n                French: frenchProfanity.split('|').join(','),\n                Spanish: spanishProfanity.split('|').join(','),\n              }));\n            } else {\n              setState((prevState) => ({\n                ...prevState,\n                wordList: { ...prevState.wordList },\n                initialLoading: false,\n              }));\n            }\n          } else {\n            setState((previous) => ({\n              ...previous,\n              wordList: { ...previous.wordList },\n              initialLoading: false,\n            }));\n          }\n        } catch (error) {\n          setState({\n            ...state,\n            errorStatus: true,\n            saveLoading: false,\n            errorMsg: error.message,\n            successMsg: '',\n            successStatus: false,\n            initialLoading: false,\n          });\n        }\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function CreateEventHandler(app, block_id, key_id, token) {\n    const {\n      wordListChannel,\n      applyToAllChannelIdsWordlist,\n      wordListCharacterToMaskWith,\n      wordListModType,\n      wordListReRouteMessages,\n    } = state.wordList;\n\n    const {\n      automaticDetectionModType,\n      automaticDetectionChannel,\n      applyToAllChannelIdsAutomatic,\n      automaticDetectionReRouteMessages,\n      automaticDetectionCharacterToMaskWith,\n      toolForAutomaticDetection,\n      siftNinjaRiskFactorThresholdVulgar,\n      siftNinjaRiskFactorThresholdSexting,\n      siftNinjaRiskFactorThresholdRacism,\n      siftNinjaAccountName,\n      siftNinjaChannelName,\n      siftNinjaApiKey,\n      tisaneRiskFactorThresholdBigotry,\n      tisaneRiskFactorThresholdCyberBullying,\n      tisaneRiskFactorThresholdCriminalActivity,\n      tisaneRiskFactorThresholdSexualAdvances,\n      tisaneRiskFactorThresholdProfanity,\n      tisaneApiKey,\n      tisaneLanguage,\n    } = state.automaticDetection;\n\n    const { wordListProfanity, automaticProfanity, textModerationToggle } =\n      state;\n\n    const config = {\n      type: 'js',\n      key_id: key_id,\n      block_id: block_id,\n      channels: checkForWordListProfanity\n        ? wordListChannel\n        : automaticDetectionChannel,\n      code: `${profanityFunction({\n        wordListProfanity,\n        automaticProfanity,\n        applyToAllChannelIdsAutomatic,\n        applyToAllChannelIdsWordlist,\n        textModerationToggle,\n        profanityList,\n        wordListModType,\n        wordListReRouteMessages,\n        wordListCharacterToMaskWith,\n        automaticDetectionModType,\n        automaticDetectionReRouteMessages,\n        automaticDetectionCharacterToMaskWith,\n        toolForAutomaticDetection,\n        siftNinjaRiskFactorThresholdVulgar,\n        siftNinjaRiskFactorThresholdSexting,\n        siftNinjaRiskFactorThresholdRacism,\n        siftNinjaAccountName,\n        siftNinjaChannelName,\n        siftNinjaApiKey,\n        tisaneRiskFactorThresholdBigotry,\n        tisaneRiskFactorThresholdCyberBullying,\n        tisaneRiskFactorThresholdCriminalActivity,\n        tisaneRiskFactorThresholdSexualAdvances,\n        tisaneRiskFactorThresholdProfanity,\n        tisaneApiKey,\n        tisaneLanguage,\n      })}`,\n      event: 'js-before-publish',\n      log_level: 'debug',\n      name: `BLOCK-${block_id}`,\n      output: 'output-0.5823105682419438',\n    };\n    try {\n      await createPubNubEventHandler(config, token);\n      if (checkForTextModerationToogle) {\n        await startPubNubFunction(\n          { key_id: key_id, block_id: block_id },\n          token\n        );\n      }\n      await handleImageModerationSave(app, token, {\n        state,\n        setState,\n        uiPagecall: 'textModeration',\n      });\n      setState({\n        ...state,\n        errorStatus: false,\n        saveLoading: false,\n        errorMsg: '',\n        successMsg: 'Successfully updated',\n        successStatus: true,\n      });\n    } catch (error) {\n      setState({\n        ...state,\n        errorStatus: true,\n        saveLoading: false,\n        errorMsg: error.message,\n        successMsg: '',\n        successStatus: false,\n      });\n    }\n  }\n\n  async function UpdateEventHandler(\n    app,\n    eventHandler,\n    block_id,\n    key_id,\n    token\n  ) {\n    const {\n      wordListChannel,\n      applyToAllChannelIdsWordlist,\n      wordListCharacterToMaskWith,\n      wordListModType,\n      wordListReRouteMessages,\n    } = state.wordList;\n\n    const {\n      automaticDetectionModType,\n      automaticDetectionChannel,\n      applyToAllChannelIdsAutomatic,\n      automaticDetectionReRouteMessages,\n      automaticDetectionCharacterToMaskWith,\n      toolForAutomaticDetection,\n      siftNinjaRiskFactorThresholdVulgar,\n      siftNinjaRiskFactorThresholdSexting,\n      siftNinjaRiskFactorThresholdRacism,\n      siftNinjaAccountName,\n      siftNinjaChannelName,\n      siftNinjaApiKey,\n      tisaneRiskFactorThresholdBigotry,\n      tisaneRiskFactorThresholdCyberBullying,\n      tisaneRiskFactorThresholdCriminalActivity,\n      tisaneRiskFactorThresholdSexualAdvances,\n      tisaneRiskFactorThresholdProfanity,\n      tisaneApiKey,\n      tisaneLanguage,\n    } = state.automaticDetection;\n\n    const { wordListProfanity, automaticProfanity, textModerationToggle } =\n      state;\n\n    const updatedConfig = {\n      type: 'js',\n      key_id: key_id,\n      block_id: block_id,\n      id: eventHandler[0].id,\n      channels: checkForWordListProfanity\n        ? wordListChannel\n        : automaticDetectionChannel,\n      code: `${profanityFunction({\n        wordListProfanity,\n        applyToAllChannelIdsAutomatic,\n        applyToAllChannelIdsWordlist,\n        automaticProfanity,\n        textModerationToggle,\n        wordListCharacterToMaskWith,\n        profanityList,\n        wordListModType,\n        wordListReRouteMessages,\n        automaticDetectionModType,\n        automaticDetectionReRouteMessages,\n        automaticDetectionCharacterToMaskWith,\n        toolForAutomaticDetection,\n        siftNinjaRiskFactorThresholdVulgar,\n        siftNinjaRiskFactorThresholdSexting,\n        siftNinjaRiskFactorThresholdRacism,\n        siftNinjaAccountName,\n        siftNinjaChannelName,\n        siftNinjaApiKey,\n        tisaneRiskFactorThresholdBigotry,\n        tisaneRiskFactorThresholdCyberBullying,\n        tisaneRiskFactorThresholdCriminalActivity,\n        tisaneRiskFactorThresholdSexualAdvances,\n        tisaneRiskFactorThresholdProfanity,\n        tisaneApiKey,\n        tisaneLanguage,\n      })}`,\n      event: 'js-before-publish',\n      log_level: 'debug',\n      name: `BLOCK-${block_id}`,\n      output: 'output-0.5823105682419438',\n    };\n\n    try {\n      await updatePubNubEventHandler(updatedConfig, token);\n      if (!checkForTextModerationToogle) {\n        await stopPubNubFunction({ key_id: key_id, block_id: block_id }, token);\n        await handleImageModerationSave(app, token, {\n          state,\n          setState,\n          uiPagecall: 'textModeration',\n        });\n        return setState({\n          ...state,\n          errorStatus: false,\n          saveLoading: false,\n          errorMsg: '',\n          successMsg: 'Successfully updated',\n          successStatus: true,\n        });\n      }\n      await startPubNubFunction({ key_id: key_id, block_id: block_id }, token);\n      await handleImageModerationSave(app, token, {\n        state,\n        setState,\n        uiPagecall: 'textModeration',\n      });\n      setState({\n        ...state,\n        errorStatus: false,\n        saveLoading: false,\n        errorMsg: '',\n        successMsg: 'Successfully updated',\n        successStatus: true,\n      });\n    } catch (err) {\n      setState({\n        ...state,\n        errorStatus: true,\n        saveLoading: false,\n        errorMsg: err.message,\n        successMsg: '',\n        successStatus: false,\n      });\n    }\n  }\n\n  const defaultWords = async (language) => {\n    let response = await fetchWords(`/words/${language}.txt`);\n    setProfanityList({ ...profanityList, [language]: response });\n  };\n\n  const handleSave = async (e) => {\n    e.preventDefault();\n\n    if (state.errorStatus) {\n      return;\n    }\n\n    setState({ ...state, saveLoading: true });\n    const token = getCookie('token');\n    const app = selectedAppFromLS();\n\n    if (app) {\n      try {\n        const functionResponse = await fetchPubNubFunction(app.id, token);\n        const key_id = app.id;\n\n        if (filterFunction(functionResponse, app).length) {\n          const blockId = filterFunction(functionResponse, app)[0].id;\n          const eventHandlerList = filterFunction(functionResponse, app)[0]\n            .event_handlers;\n          const eventHandler = filterEventHandler(\n            eventHandlerList,\n            filterFunction(functionResponse, app)\n          );\n          if (eventHandler.length === 0) {\n            await CreateEventHandler(app, blockId, key_id, token);\n          } else {\n            await UpdateEventHandler(app, eventHandler, blockId, key_id, token);\n          }\n        } else {\n          const config = {\n            key_id: app.id,\n            name: `KEY-${app.id}`,\n            description: 'This is a profanity function',\n          };\n          await createPubNubFunction(config, token);\n          const fetchFunctions = await fetchPubNubFunction(app.id, token);\n          const block_id = filterFunction(fetchFunctions, app)[0].id;\n          await CreateEventHandler(app, block_id, key_id, token);\n          setState((previous) => ({\n            ...previous,\n            initialLoading: false,\n          }));\n        }\n      } catch (error) {\n        setState({\n          ...state,\n          errorStatus: true,\n          saveLoading: false,\n          errorMsg: error.message,\n          successMsg: '',\n          successStatus: false,\n        });\n      }\n    }\n  };\n\n  return (\n    <>\n      {state.successStatus && (\n        <SnackBar status=\"success\" msg={state.successMsg} />\n      )}\n      {state.errorStatus && <SnackBar status=\"error\" msg={state.errorMsg} />}\n      <Typography testid=\"title\" variant=\"h6\" className={classes.title}>\n        Text Moderation\n        <SwitchButton\n          checked={constantBoolean(state.textModerationToggle)}\n          onChange={handleChange}\n        />\n      </Typography>\n      <br />\n      <Typography testid=\"sub_title\" className={classes.subTitle}>\n        Profanity detection method\n      </Typography>\n\n      <FilterCard state={state} handleClick={handleClick} />\n      <br />\n      {state.initialLoading && (\n        <Grid container justify=\"center\">\n          <CircularProgress\n            size={65}\n            thickness={4}\n            color=\"primary\"\n            className={classes.loader}\n          />\n        </Grid>\n      )}\n      <br />\n      <ModerationMethods\n        handleSave={handleSave}\n        state={state}\n        profanityList={profanityList}\n        defaultWords={defaultWords}\n        setState={setState}\n        setProfanityList={setProfanityList}\n      />\n    </>\n  );\n};\n\nexport default TextModeration;\n","import React from 'react';\nimport DashboardLayout from '../../layouts/Dashboard';\nimport TextModeration from '../../components/textModeration/index';\n\nconst TextModerationPage = () => {\n\n  return (\n    <>\n      <DashboardLayout>\n        <TextModeration />\n      </DashboardLayout>\n    </>\n  );\n};\n\nexport default TextModerationPage;\n","import React from 'react';\nimport AccountList from '../../components/accounts/AccountList';\n\nconst Account = () => {\n  return (\n    <>\n      <AccountList />\n    </>\n  );\n};\nexport default Account;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  confirmButton: {\n    background: '#F53C56 0% 0% no-repeat padding-box',\n    borderRadius: '8px',\n    opacity: 1,\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#FFFFFF',\n    '&:hover': {\n      backgroundColor: '#F53C56',\n    },\n    width: '150px',\n    height: '45px',\n    textTransform: 'none',\n  },\n  cancelButton: {\n    background: ' #FFFFFF 0% 0% no-repeat padding-box',\n    border: '1px solid #172B4D',\n    borderRadius: '8px',\n    opacity: 1,\n    '&:hover': {\n      backgroundColor: '#FFFFFF',\n    },\n    width: '100px',\n    height: '45px',\n  },\n  confirmDialog: {\n    boxShadow: '0px 3px 6px #2C28281C',\n    borderRadius: '10px',\n    opacity: 1,\n  },\n});\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useStyles } from '../../style/confirmDialog';\nimport { Typography } from '@material-ui/core';\n\nconst ConfirmDialog = (props) => {\n  const { title, children, open, setOpen, onConfirm } = props;\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      id=\"dialog\"\n      open={open}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"confirm-dialog\"\n      fullWidth\n      maxWidth=\"xs\"\n      className={classes.confirmDialog}\n    >\n      <DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\n      <DialogContent id=\"content\">{children}</DialogContent>\n      <DialogActions>\n        <Button\n          id=\"confirm\"\n          onClick={() => {\n            setOpen(false);\n            onConfirm();\n          }}\n          className={classes.confirmButton}\n        >\n          <Typography>{props.actionMessage}</Typography>\n        </Button>\n\n        <Button\n          id=\"cancel\"\n          variant=\"contained\"\n          onClick={() => setOpen(false)}\n          className={classes.cancelButton}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default ConfirmDialog;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  button: {\n    backgroundColor: '#7082e4',\n    fontSize: '14px',\n    padding: '5px 15px 5px 15px',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '10px',\n    },\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  joinChannelButton: {\n    transition: theme.transitions.create('width'),\n    background: '#6387ED',\n    borderRadius: '8px',\n    '&:hover': {\n      backgroundColor: '#6387ED',\n    },\n    padding: '10px 25px 10px 25px',\n    height: '49px',\n  },\n  buttonText: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13px/16px var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#FFFFFF',\n    textTransform: 'uppercase',\n  },\n  inputBox: {\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    borderRadius: ' 8px',\n    opacity: 1,\n    width: '100%',\n  },\n  loader: {\n    color: 'white',\n  },\n  modalLayout: {\n    border: '1px solid #F3F3F3',\n    borderRadius: '10px',\n    opacity: 1,\n  },\n  cancelButton: {\n    border: '1px solid #707070',\n    borderRadius: '8px',\n    opacity: 1,\n    width: '140px',\n    height: '45px',\n  },\n  avatar: {\n    width: '70px',\n    height: '70px',\n  },\n  uploadIcon: {\n    bottom: '30px',\n    right: '-30px',\n  },\n  subHeadingFont: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-14)/16px Graphik',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#606060',\n    opacity: 1,\n    lineHeight: 2.5,\n    paddingLeft: '12px',\n  },\n  headingFont: {\n    font: 'normal normal medium 22px/27px Proxima Nova',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#414141',\n    opacity: 1,\n  },\n  addButton: {\n    transition: theme.transitions.create('width'),\n    background: '#6387ED',\n    borderRadius: '8px',\n    '&:hover': {\n      backgroundColor: '#6387ED',\n    },\n    width: '140px',\n    height: '45px',\n  },\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n  addChannelButton: {\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    border: '1px solid #6387ED67',\n    borderRadius: '5px',\n    opacity: 1,\n    '&:hover': {\n      backgroundColor: '#FFFFFF',\n    },\n    padding: '10px 25px 10px 25px',\n    height: '49px',\n  },\n  addChannelButtonFont: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13px/16px var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#6387ED',\n    textTransform: 'uppercase',\n    opacity: 1,\n  },\n}));\n","import React from 'react';\nimport { useStyles } from '../../style/createModerationModal';\nimport {\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  TextField,\n  CircularProgress,\n  Box,\n} from '@material-ui/core';\n\nexport default function AddChannelForm(props) {\n  const classes = useStyles();\n  return (\n    <form onSubmit={props.formik.handleSubmit}>\n      <DialogContent>\n        <Typography testid=\"Channel_Id\" className={classes.subHeadingFont}>\n          Channel ID\n        </Typography>\n        <TextField\n          name=\"id\"\n          id=\"id\"\n          disabled={props.disabled}\n          placeholder=\"Enter Channel ID\"\n          variant=\"outlined\"\n          className={classes.inputBox}\n          autoComplete=\"off\"\n          onChange={props.formik.handleChange}\n          value={props.formik.values.id}\n          error={props.formik.touched.id && Boolean(props.formik.errors.id)}\n          helperText={props.formik.touched.id && props.formik.errors.id}\n        />\n        <Box pt={1}>\n          <Typography testid=\"Display_Name\" className={classes.subHeadingFont}>\n            Display Name\n          </Typography>\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Enter Display Name\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            autoComplete=\"off\"\n            onChange={props.formik.handleChange}\n            value={props.formik.values.name}\n            error={\n              props.formik.touched.name && Boolean(props.formik.errors.name)\n            }\n            helperText={props.formik.touched.name && props.formik.errors.name}\n          />\n        </Box>\n        <Box pt={1}>\n          <Typography testid=\"Description\" className={classes.subHeadingFont}>\n            Description\n          </Typography>\n          <TextField\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Enter Channel Description\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            multiline\n            rows={3}\n            autoComplete=\"off\"\n            onChange={props.formik.handleChange}\n            value={props.formik.values.description}\n            error={\n              props.formik.touched.description &&\n              Boolean(props.formik.errors.description)\n            }\n            helperText={\n              props.formik.touched.description &&\n              props.formik.errors.description\n            }\n          />\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          autoFocus\n          className={classes.cancelButton}\n          onClick={props.handleClose}\n        >\n          CANCEL\n        </Button>\n        <Button\n          autoFocus\n          className={classes.addButton}\n          type=\"submit\"\n          color=\"primary\"\n          disabled={props.channelAlert.loading}\n          startIcon={\n            props.channelAlert.loading ? (\n              <CircularProgress className={classes.loader} size={30} />\n            ) : null\n          }\n        >\n          <Typography className={classes.buttonText}>\n            {props.buttonTitle}\n          </Typography>\n        </Button>\n      </DialogActions>\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  DialogTitle,\n  Dialog,\n  Typography,\n  IconButton,\n  Button,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useStyles } from '../../style/createModerationModal';\nimport {\n  addChannelMetadata,\n  checkChannelExistence,\n} from '../../services/pubnub';\nimport SnackBar from '../core/SnackBar';\nimport { checkValidChannelName, showError } from '../../utils/helpers';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport AddChannelForm from './AddChannelForm';\n\nexport const channelValidationSchema = yup.object({\n  id: yup\n    .string('Enter channel name')\n    .strict(true)\n    .matches(/^\\S*$/, 'Channel ID must not contain spaces')\n    .test(\n      'Channel ID not valid',\n      'Channel ID not valid',\n      (value) => !checkValidChannelName(value)\n    )\n    .required('Channe ID is required'),\n  name: yup.string('Enter display name').required('Display name is required'),\n});\n\nexport default function AddChannelMetadataModal({ pubnubObject, isAdded }) {\n  const [open, setOpen] = useState(false);\n  const [addChannelAlert, setAddChannelAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n    loading: false,\n  });\n\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    formik.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      description: '',\n      name: '',\n      id: '',\n    },\n    validationSchema: channelValidationSchema,\n    onSubmit: (values) => {\n      addNewChannelMetadata(values);\n    },\n  });\n\n  const addNewChannelMetadata = (values) => {\n    setAddChannelAlert({\n      ...addChannelAlert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n      loading: true,\n    });\n    (async () => {\n      try {\n        const channel = await checkChannelExistence(pubnubObject, values.id);\n        if (channel && channel.length) {\n          setAddChannelAlert({\n            ...addChannelAlert,\n            success: { status: false, msg: '' },\n            error: { status: true, msg: 'Channel already exists!' },\n            loading: false,\n          });\n        } else {\n          try {\n            const channelResponse = await addChannelMetadata(\n              pubnubObject,\n              values.name,\n              values.description,\n              values.id\n            );\n            handleClose();\n            setAddChannelAlert({\n              ...addChannelAlert,\n              success: { status: true, msg: 'Channel added successfully.' },\n              error: { status: false, msg: '' },\n              loading: false,\n            });\n            isAdded(channelResponse);\n          } catch (e) {\n            handleClose();\n            setAddChannelAlert({\n              ...addChannelAlert,\n              success: { status: false, msg: '' },\n              error: { status: true, msg: showError(e.status.errorData) },\n              loading: false,\n            });\n          }\n        }\n      } catch (e) {\n        setAddChannelAlert({\n          ...addChannelAlert,\n          success: { status: false, msg: '' },\n          error: { status: true, msg: e.message },\n          loading: false,\n        });\n      }\n    })();\n  };\n\n  return (\n    <div>\n      <Button\n        id=\"addChannel\"\n        startIcon={<img src=\"images/add-channel.svg\" alt=\"add\" />}\n        onClick={handleClickOpen}\n        className={classes.addChannelButton}\n      >\n        <Typography className={classes.addChannelButtonFont}>\n          Add Channel\n        </Typography>\n      </Button>\n      <Dialog\n        id=\"dialog\"\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        className={classes.modalLayout}\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n          disableTypography\n        >\n          <Typography variant=\"h6\" className={classes.headingFont}>\n            Add Channel\n          </Typography>\n          {open ? (\n            <IconButton\n              id=\"closeButton\"\n              aria-label=\"close\"\n              onClick={handleClose}\n              className={classes.closeButton}\n            >\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <AddChannelForm\n          id=\"add\"\n          formik={formik}\n          channelAlert={addChannelAlert}\n          handleClose={handleClose}\n          buttonTitle={'ADD'}\n          disabled={false}\n        />\n      </Dialog>\n      {addChannelAlert.error.status && (\n        <SnackBar msg={addChannelAlert.error.msg} status={'info'} />\n      )}\n      {addChannelAlert.success.status && (\n        <SnackBar msg={addChannelAlert.success.msg} status={'success'} />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { DialogTitle, Dialog, Typography, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useStyles } from '../../style/createModerationModal';\nimport { editChannelMetadata } from '../../services/pubnub';\nimport SnackBar from '../core/SnackBar';\nimport { showError } from '../../utils/helpers';\nimport { useFormik } from 'formik';\nimport AddChannelForm from './AddChannelForm';\nimport { channelValidationSchema } from './AddChannelMetadataModal';\n\nexport default function UpdateChannelMetadataModal(props) {\n  const { pubnubObject, open, setOpen, data, channelUpdated } = props;\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState(null);\n  const [channelID, setChannelID] = useState('');\n  const [updateChannelAlert, setUpdateChannelAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n    loading: false,\n  });\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setName(data.name);\n    setDescription(data.description);\n    setChannelID(data.id);\n  }, [data]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      description: !description ? '' : description,\n      name: name,\n      id: channelID,\n    },\n    enableReinitialize: true,\n    validationSchema: channelValidationSchema,\n    onSubmit: (values) => {\n      updateChannelMetadata(values);\n    },\n  });\n\n  const updateChannelMetadata = (values) => {\n    setUpdateChannelAlert({\n      ...updateChannelAlert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n      loading: true,\n    });\n    (async () => {\n      try {\n        const channelResponse = await editChannelMetadata(\n          pubnubObject,\n          values.name,\n          values.description,\n          channelID\n        );\n        handleClose();\n        setUpdateChannelAlert({\n          ...updateChannelAlert,\n          success: { status: true, msg: 'Channel updated successfully.' },\n          error: { status: false, msg: '' },\n          loading: false,\n        });\n        channelUpdated(channelResponse);\n      } catch (e) {\n        handleClose();\n        setUpdateChannelAlert({\n          ...updateChannelAlert,\n          success: { status: false, msg: '' },\n          error: { status: true, msg: showError(e.status.errorData) },\n          loading: false,\n        });\n      }\n    })();\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        className={classes.modalLayout}\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n          disableTypography\n        >\n          <Typography\n            testid=\"UpdateChannel\"\n            variant=\"h6\"\n            className={classes.headingFont}\n          >\n            Update Channel Metadata\n          </Typography>\n          {open ? (\n            <IconButton\n              testId=\"closeIcon\"\n              aria-label=\"close\"\n              onClick={handleClose}\n              className={classes.closeButton}\n            >\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <AddChannelForm\n          formik={formik}\n          channelAlert={updateChannelAlert}\n          handleClose={handleClose}\n          buttonTitle={'UPDATE'}\n          disabled={true}\n        />\n      </Dialog>\n      {updateChannelAlert.error.status && (\n        <SnackBar msg={updateChannelAlert.error.msg} status={'info'} />\n      )}\n      {updateChannelAlert.success.status && (\n        <SnackBar msg={updateChannelAlert.success.msg} status={'success'} />\n      )}\n    </div>\n  );\n}\n","/**\n * Displays paginated table containg channel metadata\n */\nimport React, { useState, useEffect } from 'react';\nimport { getChannels, getChannelsOccupancy } from '../../services/pubnub';\nimport ListingTable from '../tables/ListingTable';\nimport { setLocalStorage } from '../../services/localStorage';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport { formatDate } from '../../utils/helpers';\nimport ConfirmDialog from '../core/ConfirmDialog';\nimport UpdateChannelMetadataModal from './UpdateChannelMetadataModal';\nimport { useHistory } from 'react-router';\n\nexport default function ChannelsTable({\n  searchResult,\n  setSearchableData,\n  deleteChannel,\n  data,\n  pubnub,\n}) {\n  const [channels, setChannels] = useState([]);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [channelData, setChannelData] = useState([]);\n  const [channelID, setChannelID] = useState('');\n  const [updatedChannel, setUpdatedChannel] = useState([]);\n  const [tableCount, settableCount] = useState(0);\n  const [nextpage, setNextPage] = useState('');\n  const [previousPage, setpreviousPage] = useState('');\n  const [pageNumber, setPageNumber] = useState(0);\n  const history = useHistory();\n\n  /**\n   * Defines Table headcells on channels page\n   */\n  const headCells = [\n    { id: 'id', alignment: 'left', label: 'CHANNEL', avatar: true },\n    { id: 'description', alignment: 'left', label: 'DESCRIPTION' },\n    { id: 'occupancy', alignment: 'left', label: 'OCCUPANCY' },\n    { id: 'icons', alignment: 'left', icons: true, user: false },\n  ];\n\n  useEffect(() => {\n    setPageNumber(0);\n    fetchChannels(pubnub, '', '');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, updatedChannel]);\n\n  useEffect(() => {\n    if (searchResult.length) {\n      setChannels(searchResult);\n    }\n  }, [searchResult]);\n\n  useEffect(() => {\n    setSearchableData(channels);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channels]);\n\n  /**\n   * Fetches 25 channels and count of online users in that channels to show occupancy\n   */\n  const fetchChannels = (pubnubObject, next, prev) => {\n    setLoading(true);\n    setChannels([]);\n    (async () => {\n      try {\n        const applicationChannels = await getChannels(pubnubObject, next, prev);\n        if (!applicationChannels.data.length) {\n          setLoading(false);\n          setMessage('No Channel Metadata Found');\n        }\n        settableCount(applicationChannels.totalCount);\n        setpreviousPage(applicationChannels.prev);\n        setNextPage(applicationChannels.next);\n        const channelsList = [];\n        const channelsIDs = [];\n        let selectedChannel = {};\n        applicationChannels.data.map((channel, index) => {\n          selectedChannel = channel;\n          selectedChannel.updated = formatDate(channel.updated);\n          channelsList.push(selectedChannel);\n          channelsIDs.push(selectedChannel.id);\n          return false;\n        });\n        const channelsOccupancy = await getChannelsOccupancy(\n          pubnub,\n          channelsIDs\n        );\n        channelsIDs.forEach((id, channelIndex) => {\n          channelsList[channelIndex]['occupancy'] =\n            channelsOccupancy[id] && channelsOccupancy[id].occupancy;\n        });\n        setChannels(channelsList);\n        setLocalStorage('PubNubChannels', channelsList);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n        setMessage('No Channel Metadata Found');\n        setLocalStorage('PubNubChannels', []);\n      }\n    })();\n  };\n\n  /**\n   * Handles channel row click to navigate to a channel\n   */\n  const handleRowClick = (event, row, iconsClick) => {\n    if (!iconsClick) viewRow(event, row.id);\n  };\n\n  /**\n   * Handles edit icon click to update channel metadata\n   */\n  const editRow = (event, row) => {\n    setModalOpen(true);\n    setChannelData(row);\n  };\n\n  /**\n   * Handles view icon click to  to navigate to a channel\n   */\n  const viewRow = (event, channelName) => {\n    history.push({\n      pathname: '/channels/messages',\n      state: { channel: channelName },\n    });\n  };\n\n  /**\n   * Handles delete confirm action to delete to a channel\n   */\n  const deleteRow = (event, rowId) => {\n    setConfirmOpen(true);\n    setChannelID(rowId);\n  };\n\n  /**\n   * Handles delete icon click to confirm delete action\n   */\n  const confirmDelete = () => {\n    deleteChannel(channelID);\n  };\n\n  /**\n   * Handles when a channel is updated\n   */\n  const channelUpdated = (updatedChannelData) => {\n    setUpdatedChannel(updatedChannelData);\n  };\n\n  /**\n   * Handles pagination for fetching next and prev channels\n   */\n  const getNewPage = (i) => {\n    if (pageNumber < i) {\n      setPageNumber(i);\n      fetchChannels(pubnub, nextpage, '');\n    } else {\n      setPageNumber(pageNumber - 1);\n      fetchChannels(pubnub, '', previousPage);\n    }\n  };\n\n  return (\n    <>\n      <ListingTable\n        data={channels}\n        headCells={headCells}\n        handleRowClick={handleRowClick}\n        message={message}\n        editRow={editRow}\n        deleteRow={deleteRow}\n        viewRow={viewRow}\n        getNewPage={getNewPage}\n        tableCount={tableCount}\n        number={pageNumber}\n      />\n      {loading ? (\n        <Grid justify=\"center\" container>\n          <CircularProgress />\n        </Grid>\n      ) : null}\n      <ConfirmDialog\n        id=\"delete\"\n        title=\"Are you sure?\"\n        open={confirmOpen}\n        setOpen={setConfirmOpen}\n        onConfirm={confirmDelete}\n        actionMessage={'Yes, Delete it'}\n      >\n        You want to delete this channel?\n      </ConfirmDialog>\n      <UpdateChannelMetadataModal\n        open={modalOpen}\n        setOpen={setModalOpen}\n        pubnubObject={pubnub}\n        data={channelData}\n        channelUpdated={channelUpdated}\n      />\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  DialogContent,\n  DialogActions,\n  DialogTitle,\n  Button,\n  Dialog,\n  Typography,\n  IconButton,\n  TextField,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useStyles } from '../../style/createModerationModal';\nimport { LightTooltip } from '../../style/tooltip';\nimport { useHistory } from 'react-router';\n\nexport function JoinChannelModal() {\n  const [open, setOpen] = useState(false);\n  const [channelName, setChannelName] = useState('');\n  const [error, setError] = useState(false);\n\n  const history = useHistory();\n\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setError(false);\n    setOpen(false);\n  };\n\n  const joinChannel = () => {\n    if (!channelName) {\n      setError(true);\n      return false;\n    }\n    history.push({\n      pathname: '/channels/messages',\n      state: { channel: channelName },\n    });\n  };\n\n  return (\n    <div>\n      <LightTooltip title=\"If you have a channel ID, you can directly join in this by clicking on this button and entering the channel ID\">\n        <Button\n          id=\"joinChannelButton\"\n          onClick={handleClickOpen}\n          className={classes.joinChannelButton}\n          startIcon={<img src=\"images/link.svg\" alt=\"\" />}\n        >\n          <Typography className={classes.buttonText}>Join Channel</Typography>\n        </Button>\n      </LightTooltip>\n      <Dialog\n        id=\"dialog\"\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n          disableTypography\n        >\n          <Typography variant=\"h6\" className={classes.headingFont}>\n            Join Channel\n          </Typography>\n          {open ? (\n            <IconButton\n              aria-label=\"close\"\n              onClick={handleClose}\n              className={classes.closeButton}\n            >\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <DialogContent>\n          <Typography testid=\"channelId\" className={classes.subHeadingFont}>\n            Channel ID\n          </Typography>\n          <TextField\n            id=\"channelId\"\n            placeholder=\"Enter Channel ID\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            onChange={(e) => setChannelName(e.target.value)}\n            error={error}\n            helperText={error ? 'Channel is Required' : ''}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            id=\"cancelButton\"\n            onClick={handleClose}\n            className={classes.cancelButton}\n          >\n            Cancel\n          </Button>\n          <Button\n            id=\"joinButton\"\n            className={classes.addButton}\n            onClick={joinChannel}\n            color=\"primary\"\n          >\n            <Typography className={classes.buttonText}>Join Channel</Typography>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import PubNub from 'pubnub';\nimport { selectedAppFromLS, uuidFromLS } from './helpers';\n\nconst usePubNub = () => {\n  const selectedApp = selectedAppFromLS();\n  const uuid = uuidFromLS();\n\n  if (selectedApp && uuid) {\n    const pubnub = new PubNub({\n      subscribeKey: selectedApp.subscribe_key,\n      secretKey: selectedApp.secret_key,\n      publishKey: selectedApp.publish_key,\n      uuid: uuid,\n    });\n    return { pubnub };\n  }\n  return {};\n};\n\nexport default usePubNub;\n","import React, { useState } from 'react';\nimport Helmet from 'react-helmet';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport ChannelsTable from './ChannelsTable';\nimport { JoinChannelModal } from './JoinChannelModal';\nimport { channelsFromLS, formatDate, showError } from '../../utils/helpers';\nimport Search from '../core/Search';\nimport AddChannelMetadataModal from './AddChannelMetadataModal';\nimport usePubNub from '../../utils/usePubNub';\nimport { deleteChannelMetadata, getChannelByName } from '../../services/pubnub';\nimport SnackBar from '../core/SnackBar';\n\nfunction ChannelsListing() {\n  const [searchResult, setSearchResult] = useState([]);\n  const [updatedData, setupdatedData] = useState([]);\n  const [searched] = useState('');\n  const [channelAlert, setChannelAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n  });\n  const { pubnub } = usePubNub();\n\n  const requestChannelSearch = (searchedVal) => {\n    setChannelAlert({\n      ...channelAlert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n    });\n    (async () => {\n      try {\n        const filteredRows = await getChannelByName(pubnub, searchedVal);\n        const channelsList = [];\n        let selectedChannel = {};\n        if (!filteredRows.length) {\n          setChannelAlert({\n            ...channelAlert,\n            success: { status: false, msg: '' },\n            error: { status: true, msg: 'No channels found' },\n          });\n        }\n        filteredRows.map((user, index) => {\n          selectedChannel = user;\n          selectedChannel.updated = formatDate(user.updated);\n          channelsList.push(selectedChannel);\n          return false;\n        });\n        setSearchResult(channelsList);\n      } catch (e) {\n        setChannelAlert({\n          ...channelAlert,\n          success: { status: false, msg: '' },\n          error: { status: true, msg: 'Failed to filter channel' },\n        });\n      }\n    })();\n  };\n  const cancelChannelSearch = () => {\n    setSearchResult(channelsFromLS());\n  };\n\n  const setSearchableData = (channelsData) => {\n    setSearchResult(channelsData);\n  };\n\n  const channelUpdated = (updatedChannelsData) => {\n    setupdatedData(updatedChannelsData);\n  };\n\n  const deleteChannel = (channelID) => {\n    if (channelID) {\n      (async () => {\n        try {\n          await deleteChannelMetadata(pubnub, channelID);\n          setupdatedData([]);\n          setChannelAlert({\n            ...channelAlert,\n            success: { status: true, msg: 'Channel deleted successfully' },\n            error: { status: false, msg: '' },\n          });\n        } catch (e) {\n          setChannelAlert({\n            ...channelAlert,\n            success: { status: true, msg: showError(e.status.errorData) },\n            error: { status: false, msg: '' },\n          });\n        }\n      })();\n    }\n  };\n\n  return (\n    <>\n      <Helmet title=\"Channels\" />\n      <Grid justify=\"space-between\" container>\n        <Grid item sm={3}>\n          <Box pl={1}>\n            <Typography testid=\"channelHeader\" variant=\"h5\">\n              Channels\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid item sm={9}>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n            <Box ml={2}>\n              <Search\n                id=\"search\"\n                searched={searched}\n                requestSearch={requestChannelSearch}\n                cancelSearch={cancelChannelSearch}\n                placeholder={'Search for channel name'}\n              />\n            </Box>\n            <Box ml={2}>\n              <AddChannelMetadataModal\n                pubnubObject={pubnub}\n                isAdded={channelUpdated}\n              />\n            </Box>\n            <Box ml={2}>\n              <JoinChannelModal />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <br />\n      <Grid container spacing={6}>\n        <Grid item xs={12}>\n          <ChannelsTable\n            searchResult={searchResult}\n            setSearchableData={setSearchableData}\n            deleteChannel={deleteChannel}\n            data={updatedData}\n            pubnub={pubnub}\n          />\n        </Grid>\n      </Grid>\n      {channelAlert.error.status && (\n        <SnackBar msg={channelAlert.error.msg} status={'info'} />\n      )}\n      {channelAlert.success.status && (\n        <SnackBar msg={channelAlert.success.msg} status={'success'} />\n      )}\n    </>\n  );\n}\n\nexport default ChannelsListing;\n","import React from 'react';\nimport ChannelsListing from '../../components/channels/ChannelsListing';\nimport DashboardLayout from '../../layouts/Dashboard';\n\nconst Channels = () => {\n  return (\n    <>\n      <DashboardLayout>\n        <ChannelsListing />\n      </DashboardLayout>\n    </>\n  );\n};\nexport default Channels;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  gridOne: {\n    padding: theme.spacing(2),\n    opacity: 1,\n    borderRadius: '10px',\n    border: '1px solid #F3F3F3',\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    boxShadow: '0px 3px 6px #00000014',\n    height: '100%',\n  },\n  gridTwo: {\n    padding: theme.spacing(2),\n    opacity: 1,\n    borderRadius: '10px',\n    border: '1px solid #F3F3F3',\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    boxShadow: '0px 3px 6px #00000014',\n    height: '100%',\n  },\n  headings: {\n    textAlign: 'left',\n    opacity: 1,\n    color: '#C2C2C2',\n    textTransform: 'uppercase',\n    font: 'var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-12)/var(--unnamed-line-spacing-15) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n  },\n  values: {\n    color: '#414141',\n    textAlign: 'left',\n    opacity: 1,\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-18)/var(--unnamed-line-spacing-23) var(--unnamed-font-family-proxima-nova)',\n  },\n  avatar: {\n    background: '#FCF0EF',\n    color: '#E66E68',\n    borderRadius: '8px',\n  },\n  test: {\n    text: 'ellipsis',\n  },\n  appName: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    fontSize: '12px',\n    color: '#C2C2C2',\n    opacity: 1,\n  },\n}));\n","/**\n * Displays overview page for a selected ketset\n */\nimport React, { useEffect, useState } from 'react';\nimport Helmet from 'react-helmet';\nimport {\n  Grid,\n  Typography,\n  Paper,\n  Avatar,\n  Box,\n  Divider,\n  IconButton,\n} from '@material-ui/core';\nimport { useStyles } from '../../style/overview';\nimport { capitalizeNameInitials, selectedAppFromLS } from '../../utils/helpers';\nimport { RemoveRedEye, RemoveRedEyeOutlined } from '@material-ui/icons';\n\nconst OverviewGrid = () => {\n  const classes = useStyles();\n  const [application, setApplication] = useState([]);\n  const [secretKeyIsMasked, setSecretKeyIsMasked] = useState(false);\n\n  useEffect(() => {\n    setApplication(selectedAppFromLS());\n  }, []);\n\n  /**\n   * Handles secret key icon toggle action to view/hide secret key\n   */\n  const toggleSecretKeyMask = () => {\n    setSecretKeyIsMasked((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Helmet title=\"Overview\" />\n      <Grid justify=\"space-between\" container>\n        <Grid item>\n          <Box pl={1}>\n            <Typography testid=\"overview_Header\" variant=\"h5\">\n              Overview\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n      <br />\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Paper className={classes.gridOne}>\n              <Grid justify=\"flex-start\" container>\n                <Box mr={1}>\n                  <Avatar className={classes.avatar} variant=\"square\">\n                    {!application.name\n                      ? ''\n                      : capitalizeNameInitials(application.name)}\n                  </Avatar>\n                </Box>\n                <Grid item sm={6} xs={12} md={6}>\n                  <small className={classes.values}>\n                    {!application.name ? '' : application.name}\n                  </small>\n                  <br />\n                  <small className={classes.appName}>\n                    {!application.appName ? '' : application.appName}\n                  </small>\n                </Grid>\n              </Grid>\n              <br />\n              <Divider />\n              <br />\n              <Grid justify=\"space-between\" container>\n                <Grid item xs={12} sm={6}>\n                  <Typography\n                    testid=\"modified_date\"\n                    className={classes.headings}\n                  >\n                    Modified Date\n                  </Typography>\n                  <Typography className={classes.values}>\n                    {!application.modified ? '' : application.modified}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography testid=\"created_on\" className={classes.headings}>\n                    Created on\n                  </Typography>\n                  <Typography className={classes.values}>\n                    {!application.created ? '' : application.created}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.gridTwo}>\n              <Typography testid=\"pubnub_keys\" variant=\"h6\">\n                PubNub Keys\n              </Typography>\n              <br />\n              <Divider />\n              <br />\n              <Grid justify=\"space-between\" container>\n                <Grid item xs={12} sm={6}>\n                  <Typography\n                    testid=\"publish_key\"\n                    variant=\"h6\"\n                    className={classes.headings}\n                  >\n                    Publish Key\n                  </Typography>\n                  <Typography className={classes.values}>\n                    {!application.publish_key ? '' : application.publish_key}\n                  </Typography>\n                  <br />\n                  <Typography testid=\"secret_key\" className={classes.headings}>\n                    Secret Key\n                    <IconButton\n                      id=\"maskableIcon\"\n                      className={classes.headings}\n                      onClick={toggleSecretKeyMask}\n                    >\n                      {secretKeyIsMasked ? (\n                        <RemoveRedEyeOutlined />\n                      ) : (\n                        <RemoveRedEye />\n                      )}\n                    </IconButton>\n                  </Typography>\n\n                  <Typography id=\"maskableText\" className={classes.values}>\n                    {secretKeyIsMasked\n                      ? application.secret_key\n                      : application.secret_key &&\n                        '*'.repeat(application.secret_key.length)}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography\n                    variant=\"h6\"\n                    testid=\"subsciber_key\"\n                    className={classes.headings}\n                  >\n                    Subscribe Key\n                  </Typography>\n                  <Typography className={classes.values}>\n                    {!application.subscribe_key\n                      ? ''\n                      : application.subscribe_key}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default OverviewGrid;\n","import React from 'react';\nimport OverviewGrid from '../../components/overview/overviewGrid';\nimport DashboardLayout from '../../layouts/Dashboard';\n\nconst Overview = () => {\n  return (\n    <>\n      <DashboardLayout>\n        <OverviewGrid />\n      </DashboardLayout>\n    </>\n  );\n};\nexport default Overview;\n","import React from 'react';\nimport { useStyles } from '../../style/createModerationModal';\nimport {\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  TextField,\n  CircularProgress,\n} from '@material-ui/core';\n\nexport default function AddUserForm(props) {\n  const classes = useStyles();\n  return (\n    <form onSubmit={props.formik.handleSubmit}>\n      <DialogContent>\n        <Typography testid=\"User_Id\" className={classes.subHeadingFont}>\n          User ID\n        </Typography>\n        <TextField\n          id=\"user_id\"\n          name=\"user_id\"\n          placeholder=\"Enter user ID\"\n          variant=\"outlined\"\n          disabled={props.disabled}\n          className={classes.inputBox}\n          autoComplete=\"off\"\n          onChange={props.formik.handleChange}\n          value={props.formik.values.user_id}\n          error={\n            props.formik.touched.user_id && Boolean(props.formik.errors.user_id)\n          }\n          helperText={\n            props.formik.touched.user_id && props.formik.errors.user_id\n          }\n        />\n        <Typography testid=\"User_Name\" className={classes.subHeadingFont}>\n          User Name\n        </Typography>\n        <TextField\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Enter user name\"\n          variant=\"outlined\"\n          className={classes.inputBox}\n          autoComplete=\"off\"\n          onChange={props.formik.handleChange}\n          value={props.formik.values.name}\n          error={props.formik.touched.name && Boolean(props.formik.errors.name)}\n          helperText={props.formik.touched.name && props.formik.errors.name}\n        />\n        <Typography testid=\"Email\" className={classes.subHeadingFont}>\n          Email Address\n        </Typography>\n        <TextField\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Enter email address\"\n          variant=\"outlined\"\n          className={classes.inputBox}\n          autoComplete=\"off\"\n          onChange={props.formik.handleChange}\n          value={props.formik.values.email}\n          error={\n            props.formik.touched.email && Boolean(props.formik.errors.email)\n          }\n          helperText={props.formik.touched.email && props.formik.errors.email}\n        />\n        <Typography testid=\"Profile_Url\" className={classes.subHeadingFont}>\n          Profile URL\n        </Typography>\n        <TextField\n          id=\"profile_url\"\n          name=\"profile_url\"\n          placeholder=\"Enter Profile URL\"\n          variant=\"outlined\"\n          className={classes.inputBox}\n          autoComplete=\"off\"\n          onChange={props.formik.handleChange}\n          value={props.formik.values.profile_url}\n          error={\n            props.formik.touched.profile_url &&\n            Boolean(props.formik.errors.profile_url)\n          }\n          helperText={\n            props.formik.touched.profile_url && props.formik.errors.profile_url\n          }\n        />\n        <br />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          autoFocus\n          className={classes.cancelButton}\n          onClick={props.handleClose}\n        >\n          CANCEL\n        </Button>\n\n        <Button\n          autoFocus\n          className={classes.addButton}\n          type=\"submit\"\n          color=\"primary\"\n          disabled={props.userAlert.loading}\n          startIcon={\n            props.userAlert.loading ? (\n              <CircularProgress className={classes.loader} size={30} />\n            ) : null\n          }\n        >\n          <Typography className={classes.buttonText}>\n            {props.buttonTitle}\n          </Typography>\n        </Button>\n      </DialogActions>\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  DialogTitle,\n  Button,\n  Dialog,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useStyles } from '../../style/createModerationModal';\nimport { addUserMetadata, checkUserIDExistence } from '../../services/pubnub';\nimport SnackBar from '../core/SnackBar';\nimport { showError } from '../../utils/helpers';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport AddUserForm from './AddUserForm';\n\nexport const userValidationSchema = yup.object({\n  email: yup.string('Enter your email').email('Enter a valid email'),\n  name: yup.string('Enter your name').required('User name is required'),\n  user_id: yup\n    .string('Enter your user ID')\n    .required('User ID is required')\n    .min(3, 'Must be min 3 characters')\n    .max(64, 'Must be max 64 characters'),\n  profile_url: yup.lazy((value) =>\n    /^data/.test(value)\n      ? yup\n          .string()\n          .matches(\n            /^data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*)$/i,\n            'Must be a valid data URI'\n          )\n      : yup.string().url('Enter a valid URL')\n  ),\n});\n\nexport default function AddUserMetadataModal({ pubnubObject, isAdded }) {\n  const [open, setOpen] = useState(false);\n  const [addUserAlert, setAddUserAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n    loading: false,\n  });\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      name: '',\n      user_id: '',\n      profile_url: '',\n    },\n    validationSchema: userValidationSchema,\n    enableReinitialize: true,\n    onSubmit: (values) => {\n      addNewUserMetadata(values);\n    },\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n    formik.resetForm();\n  };\n\n  const addNewUserMetadata = (values) => {\n    setAddUserAlert({\n      ...addUserAlert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n      loading: true,\n    });\n    (async () => {\n      try {\n        const user = await checkUserIDExistence(pubnubObject, values.user_id);\n        if (user && user.length) {\n          setAddUserAlert({\n            ...addUserAlert,\n            success: { status: false, msg: '' },\n            error: { status: true, msg: 'User ID already exists!' },\n            loading: false,\n          });\n        } else {\n          try {\n            const userData = await addUserMetadata(\n              pubnubObject,\n              values.name,\n              values.email,\n              values.user_id,\n              values.profile_url\n            );\n            handleClose();\n            setAddUserAlert({\n              ...addUserAlert,\n              success: { status: true, msg: 'User added successfully' },\n              error: { status: false, msg: '' },\n              loading: false,\n            });\n            isAdded(userData);\n          } catch (e) {\n            handleClose();\n            setAddUserAlert({\n              ...addUserAlert,\n              success: { status: false, msg: '' },\n              error: { status: true, msg: showError(e.status.errorData) },\n              loading: false,\n            });\n          }\n        }\n      } catch (e) {\n        setAddUserAlert({\n          ...addUserAlert,\n          success: { status: false, msg: '' },\n          error: { status: true, msg: e.message },\n          loading: false,\n        });\n      }\n    })();\n  };\n\n  return (\n    <div>\n      <Button testid=\"button_id\"\n        className={classes.joinChannelButton}\n        startIcon={<img src=\"images/plus.svg\" alt=\"add\" />}\n        onClick={handleClickOpen}\n      >\n        <Typography testid=\"add_user\" className={classes.buttonText}>Add user</Typography>\n      </Button>\n      <Dialog\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        className={classes.modalLayout}\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n          disableTypography\n        >\n          <Typography variant=\"h6\" className={classes.headingFont}>\n            Add User\n          </Typography>\n          {open ? (\n            <IconButton\n              aria-label=\"close\"\n              onClick={handleClose}\n              className={classes.closeButton}\n            >\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <AddUserForm\n          formik={formik}\n          userAlert={addUserAlert}\n          handleClose={handleClose}\n          buttonTitle={'ADD'}\n          disabled={false}\n        />\n      </Dialog>\n      {addUserAlert.error.status && (\n        <SnackBar msg={addUserAlert.error.msg} status={'info'} />\n      )}\n      {addUserAlert.success.status && (\n        <SnackBar msg={addUserAlert.success.msg} status={'success'} />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { DialogTitle, Dialog, Typography, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useStyles } from '../../style/createModerationModal';\nimport { editUserMetadata } from '../../services/pubnub';\nimport SnackBar from '../core/SnackBar';\nimport { showError } from '../../utils/helpers';\nimport { useFormik } from 'formik';\nimport AddUserForm from './AddUserForm';\nimport { userValidationSchema } from './AddUserMetadataModal';\n\nexport default function UpdateUserMetadataModal(props) {\n  const { pubnubObject, open, setOpen, data, isUpdated } = props;\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState(null);\n  const [UUID, setUUID] = useState('');\n  const [profileUrl, setProfileUrl] = useState(null);\n  const [updateUserAlert, setUpdateUserAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n    loading: false,\n  });\n  const classes = useStyles();\n\n  useEffect(() => {\n    setUserName(data.name);\n    setEmail(data.email);\n    setUUID(data.id);\n    setProfileUrl(data.profileUrl);\n  }, [data]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: !email ? '' : email,\n      name: userName,\n      user_id: UUID,\n      profile_url: !profileUrl ? '' : profileUrl,\n    },\n    enableReinitialize: true,\n    validationSchema: userValidationSchema,\n    onSubmit: (values) => {\n      updateUserMetadata(values);\n    },\n  });\n\n  const updateUserMetadata = (values) => {\n    setUpdateUserAlert({\n      ...updateUserAlert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n      loading: true,\n    });\n    (async () => {\n      try {\n        const userResponse = await editUserMetadata(\n          pubnubObject,\n          values.name,\n          values.email,\n          values.user_id,\n          values.profile_url\n        );\n        handleClose();\n        setUpdateUserAlert({\n          ...updateUserAlert,\n          success: { status: true, msg: 'User updated successfully' },\n          error: { status: false, msg: '' },\n          loading: false,\n        });\n        isUpdated(userResponse);\n      } catch (e) {\n        handleClose();\n        setUpdateUserAlert({\n          ...updateUserAlert,\n          success: { status: false, msg: '' },\n          error: { status: true, msg: showError(e.status.errorData) },\n          loading: false,\n        });\n      }\n    })();\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        className={classes.modalLayout}\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n          disableTypography\n        >\n          <Typography variant=\"h6\" className={classes.headingFont}>\n            Update User Metadata\n          </Typography>\n          {open ? (\n            <IconButton\n              aria-label=\"close\"\n              onClick={handleClose}\n              className={classes.closeButton}\n            >\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <AddUserForm\n          formik={formik}\n          userAlert={updateUserAlert}\n          handleClose={handleClose}\n          buttonTitle={'UPDATE'}\n          disabled={true}\n        />\n      </Dialog>\n      {updateUserAlert.error.status && (\n        <SnackBar msg={updateUserAlert.error.msg} status={'info'} />\n      )}\n      {updateUserAlert.success.status && (\n        <SnackBar msg={updateUserAlert.success.msg} status={'success'} />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  DialogTitle,\n  Dialog,\n  Typography,\n  IconButton,\n  TextField,\n  DialogActions,\n  Button,\n  CircularProgress,\n  DialogContent,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useStyles } from '../../style/createModerationModal';\nimport { setUserMetadata } from '../../services/pubnub';\nimport SnackBar from '../core/SnackBar';\nimport {\n  capitalizeFirstLetter,\n  showError,\n  selectedAccountsFromLS,\n} from '../../utils/helpers';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\n\nconst validationSchema = yup.object({\n  reason: yup.string().required('Reason is required'),\n});\n\nexport default function FlagUser(props) {\n  const { pubnub, open, setOpen, uuid, isUpdated, action } = props;\n  const [userID, setuserID] = useState('');\n  const [flagAlert, setFlagAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n    loading: false,\n  });\n  const classes = useStyles();\n  const selectedAcount = selectedAccountsFromLS();\n  const updatedAt = new Date();\n  const customMetaData = uuid.custom || {};\n\n  useEffect(() => {\n    setuserID(uuid.id);\n  }, [uuid]);\n\n  const handleClose = () => {\n    formik.resetForm();\n    setOpen(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      reason: '',\n    },\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      flagUser(values);\n    },\n  });\n\n  const flagUser = (values) => {\n    setFlagAlert({\n      ...flagAlert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n      loading: true,\n    });\n    customMetaData.reason = values.reason;\n    customMetaData.flaggedBy = selectedAcount && selectedAcount.email;\n    customMetaData.flaggedAt = updatedAt;\n    customMetaData.flag = action === 'flag' ? true : false;\n    (async () => {\n      try {\n        const userResponse = await setUserMetadata(\n          pubnub,\n          userID,\n          customMetaData\n        );\n        handleClose();\n        setFlagAlert({\n          ...flagAlert,\n          success: {\n            status: true,\n            msg: `User ${capitalizeFirstLetter(action)}ged successfully.`,\n          },\n          error: { status: false, msg: '' },\n          loading: false,\n        });\n        isUpdated(userResponse);\n      } catch (e) {\n        handleClose();\n        setFlagAlert({\n          ...flagAlert,\n          success: { status: false, msg: '' },\n          error: { status: true, msg: showError(e.status.errorData) },\n          loading: false,\n        });\n      }\n    })();\n  };\n\n  return (\n    <>\n      <Dialog\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        className={classes.modalLayout}\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n          disableTypography\n        >\n          <Typography variant=\"h6\" className={classes.headingFont}>\n            {capitalizeFirstLetter(action)} User\n          </Typography>\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            className={classes.closeButton}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <Typography testid=\"reason\" className={classes.subHeadingFont}>\n              Reason\n            </Typography>\n            <TextField\n              id=\"reason\"\n              name=\"reason\"\n              placeholder=\"Add Reason\"\n              variant=\"outlined\"\n              className={classes.inputBox}\n              autoComplete=\"off\"\n              onChange={formik.handleChange}\n              value={formik.values.reason}\n              error={formik.touched.reason && Boolean(formik.errors.reason)}\n              helperText={formik.touched.reason && formik.errors.reason}\n            />\n\n            <br />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              id=\"cancel\"\n              autoFocus\n              className={classes.cancelButton}\n              onClick={handleClose}\n            >\n              CANCEL\n            </Button>\n\n            <Button\n              id=\"submit\"\n              autoFocus\n              className={classes.addButton}\n              type=\"submit\"\n              color=\"primary\"\n              disabled={flagAlert.loading}\n              startIcon={\n                flagAlert.loading ? (\n                  <CircularProgress className={classes.loader} size={30} />\n                ) : null\n              }\n            >\n              <Typography className={classes.buttonText}>Submit</Typography>\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n      {flagAlert.error.status && (\n        <SnackBar msg={flagAlert.error.msg} status={'info'} />\n      )}\n      {flagAlert.success.status && (\n        <SnackBar msg={flagAlert.success.msg} status={'success'} />\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  DialogTitle,\n  Dialog,\n  Typography,\n  DialogActions,\n  Button,\n  DialogContent,\n} from '@material-ui/core';\nimport { useStyles } from '../../style/confirmDialog';\nimport SnackBar from '../core/SnackBar';\nimport { capitalizeFirstLetter, showError } from '../../utils/helpers';\nimport { setUserMetadata } from '../../services/pubnub';\nexport default function BanUser(props) {\n  const { pubnubObject, open, setOpen, uuid, action } = props;\n  const [UUID, setUUID] = useState('');\n  const [banAlert, setBanAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n  });\n  const classes = useStyles();\n  const customMetaData = uuid.custom || {};\n\n  useEffect(() => {\n    setUUID(uuid.id);\n  }, [uuid]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  customMetaData.ban = action === 'ban' ? true : false;\n  delete customMetaData.flag;\n  delete customMetaData.flaggedBy;\n  delete customMetaData.flaggedAt;\n  delete customMetaData.reason;\n\n  const handleBanClick = (values) => {\n    setBanAlert({\n      ...banAlert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n    });\n    (async () => {\n      try {\n        await setUserMetadata(pubnubObject, UUID, customMetaData);\n        handleClose();\n        setBanAlert({\n          ...banAlert,\n          success: {\n            status: true,\n            msg: `User ${capitalizeFirstLetter(action)}ned successfully`,\n          },\n          error: { status: false, msg: '' },\n        });\n      } catch (e) {\n        handleClose();\n        setBanAlert({\n          ...banAlert,\n          success: { status: false, msg: '' },\n          error: { status: true, msg: showError(e.status.errorData) },\n        });\n      }\n    })();\n  };\n\n  return (\n    <>\n      <Dialog\n        testid=\"DialogId\"\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"confirm-dialog\"\n        fullWidth\n        maxWidth=\"xs\"\n        className={classes.confirmDialog}\n      >\n        <DialogTitle id=\"confirm-dialog\">{props.title}</DialogTitle>\n        <DialogContent>{props.children}</DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n              handleBanClick();\n            }}\n            className={classes.confirmButton}\n          >\n            <Typography> Yes</Typography>\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            onClick={() => props.setOpen(false)}\n            className={classes.cancelButton}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {banAlert.error.status && (\n        <SnackBar msg={banAlert.error.msg} status={'info'} />\n      )}\n      {banAlert.success.status && (\n        <SnackBar msg={banAlert.success.msg} status={'success'} />\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { getUsers } from '../../services/pubnub';\nimport ListingTable from '../tables/ListingTable';\nimport { setLocalStorage } from '../../services/localStorage';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport { formatDate } from '../../utils/helpers';\nimport ConfirmDialog from '../core/ConfirmDialog';\nimport UpdateUserMetadataModal from './UpdateUserMetadataModal';\nimport FlagUser from './FlagUser';\nimport BanUser from './BanUser';\n\nexport default function UsersTable({\n  searchResult,\n  setSearchableData,\n  deleteUser,\n  data,\n  pubnub,\n  filterBy,\n}) {\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [userData, setUserData] = useState([]);\n  const [updatedData, setUpdatedData] = useState([]);\n  const [UUID, setUUID] = useState('');\n  const [tableCount, settableCount] = useState(0);\n  const [nextpage, setNextpage] = useState('');\n  const [previousPage, setpreviousPage] = useState('');\n  const [pageNumber, setPageNumber] = useState(0);\n  const [flagConfirmOpen, setFlagConfirmOpen] = useState(false);\n  const [action, setAction] = useState('');\n  const [banModalOpen, setBanModalOpen] = useState(false);\n\n  const headCells = [\n    {\n      id: 'name',\n      alignment: 'left',\n      label: 'USER NAME',\n      avatar: true,\n      user: true,\n    },\n    { id: 'email', alignment: 'left', label: 'EMAIL ID' },\n    { id: 'updated', alignment: 'left', label: 'UPDATED ON' },\n    { id: 'icons', alignment: 'left', icons: true, user: true },\n  ];\n\n  useEffect(() => {\n    setPageNumber(0);\n    fetchUsers(pubnub, '', '', filterBy);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, updatedData, filterBy]);\n\n  useEffect(() => {\n    if (searchResult.length) {\n      setUsers(searchResult);\n    }\n  }, [searchResult]);\n\n  useEffect(() => {\n    setSearchableData(users);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [users]);\n\n  const fetchUsers = (pubnubObject, next, prev, filter) => {\n    setUsers([]);\n    setLoading(true);\n    (async () => {\n      try {\n        const applicationUsers = await getUsers(\n          pubnubObject,\n          next,\n          prev,\n          filter\n        );\n        if (!applicationUsers.data.length) {\n          setLoading(false);\n          setMessage('No User Metadata Found');\n        }\n        settableCount(applicationUsers.totalCount);\n        setpreviousPage(applicationUsers.prev);\n        setNextpage(applicationUsers.next);\n        const usersList = [];\n        let selectedUser = {};\n        applicationUsers.data.map((user, index) => {\n          selectedUser = user;\n          selectedUser.updated = formatDate(user.updated);\n          selectedUser.uuid = user.id;\n          usersList.push(selectedUser);\n          return false;\n        });\n        setUsers(usersList);\n        setLocalStorage('PubNubUsers', usersList);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n        setMessage('No User Metadata Found');\n        setLocalStorage('PubNubUsers', []);\n      }\n    })();\n  };\n\n  const handleRowClick = () => {\n    // Update with User detail screen Route\n  };\n\n  const editRow = (event, row) => {\n    setModalOpen(true);\n    setUserData(row);\n  };\n\n  const deleteRow = (event, rowId) => {\n    setConfirmOpen(true);\n    setUUID(rowId);\n  };\n\n  const confirmDelete = () => {\n    deleteUser(UUID);\n  };\n\n  const isUpdated = (x) => {\n    setUpdatedData(x);\n  };\n\n  const getNewPage = (i) => {\n    if (pageNumber < i) {\n      setPageNumber(i);\n      fetchUsers(pubnub, nextpage, '', '');\n    } else {\n      setPageNumber(pageNumber - 1);\n      fetchUsers(pubnub, '', previousPage, '');\n    }\n  };\n\n  const flagUser = (event, rowId) => {\n    setFlagConfirmOpen(true);\n    setAction('flag');\n    setUUID(rowId);\n  };\n\n  const banUser = (event, rowId) => {\n    setBanModalOpen(true);\n    setAction('ban');\n    setUUID(rowId);\n  };\n\n  const unFlagUser = (event, rowId) => {\n    setFlagConfirmOpen(true);\n    setAction('unflag');\n    setUUID(rowId);\n  };\n\n  const unbanUser = (event, rowId) => {\n    setBanModalOpen(true);\n    setAction('unban');\n    setUUID(rowId);\n  };\n\n  return (\n    <>\n      <ListingTable\n        data={users}\n        headCells={headCells}\n        handleRowClick={handleRowClick}\n        message={message}\n        editRow={editRow}\n        deleteRow={deleteRow}\n        flagUser={flagUser}\n        banUser={banUser}\n        unbanUser={unbanUser}\n        unFlagUser={unFlagUser}\n        getNewPage={getNewPage}\n        tableCount={tableCount}\n        number={pageNumber}\n      />\n      {loading ? (\n        <Grid justify=\"center\" container>\n          <CircularProgress />\n        </Grid>\n      ) : null}\n      <ConfirmDialog\n        title=\"Are you sure?\"\n        open={confirmOpen}\n        setOpen={setConfirmOpen}\n        onConfirm={confirmDelete}\n        actionMessage={'Yes, Delete it'}\n      >\n        You want to delete this user?\n      </ConfirmDialog>\n      <UpdateUserMetadataModal\n        open={modalOpen}\n        setOpen={setModalOpen}\n        pubnubObject={pubnub}\n        data={userData}\n        isUpdated={isUpdated}\n      />\n      <BanUser\n        title=\"Are you sure?\"\n        open={banModalOpen}\n        setOpen={setBanModalOpen}\n        pubnubObject={pubnub}\n        uuid={UUID}\n        isUpdated={isUpdated}\n        action={action}\n      >\n        You want to {action} this user?\n      </BanUser>\n      <FlagUser\n        open={flagConfirmOpen}\n        setOpen={setFlagConfirmOpen}\n        uuid={UUID}\n        isUpdated={isUpdated}\n        pubnub={pubnub}\n        action={action}\n      >\n        You want to {action} this user?\n      </FlagUser>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  list: {\n    width: 400,\n  },\n  title: {\n    font: 'normal normal medium 28px/38px Proxima Nova',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#414141',\n    opacity: 1,\n  },\n  avatar: {\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    border: '1px solid #6387ED67',\n    borderRadius: '5px',\n    opacity: 1,\n    height: '50px',\n  },\n  listText: {\n    font: 'var(--unnamed-font-style-normal) normal medium var(--unnamed-font-size-16)/var(--unnamed-line-spacing-24) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#414141',\n    opacity: 1,\n  },\n  userType: {\n    font: 'var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-16)/var(--unnamed-line-spacing-24) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#6387ED',\n    opacity: 1,\n  },\n});\n","import React from 'react';\nimport { useStyles } from '../../style/drawer';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport {\n  Avatar,\n  Box,\n  Checkbox,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\n\nexport default function FilterUsers(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [isBanChecked, setIsBanChecked] = React.useState(false);\n  const [isFlagChecked, setIsFlagChecked] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    if (e.target.checked && e.target.value === 'ban') {\n      setIsFlagChecked(false);\n      setIsBanChecked(true);\n      props.isFiltered(e.target.value);\n    } else if (e.target.checked && e.target.value === 'flag') {\n      setIsBanChecked(false);\n      setIsFlagChecked(true);\n      props.isFiltered(e.target.value);\n    } else {\n      props.isFiltered('all');\n      setIsBanChecked(false);\n      setIsFlagChecked(false);\n    }\n  };\n\n  return (\n    <>\n      <Avatar\n        id=\"openDrawer\"\n        variant=\"square\"\n        onClick={handleClickOpen}\n        className={classes.avatar}\n      >\n        <IconButton>\n          <img src=\"images/filter.svg\" alt=\"filter\" />\n        </IconButton>\n      </Avatar>\n      <Drawer anchor=\"right\" open={open} onClose={handleClose}>\n        <div className={classes.list}>\n          <Box pl={3} pt={4} pr={1}>\n            <Grid justify=\"space-between\" container>\n              <Grid item>\n                <Typography className={classes.title}>Filters</Typography>\n              </Grid>\n              <Grid item>\n                <Button id=\"drawer\" onClick={handleClose}>\n                  <img src=\"images/times.svg\" alt=\"filter\" />\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box pl={3} pt={4}>\n            <Typography testid=\"UserType\" className={classes.userType}>\n              User Type\n            </Typography>\n          </Box>\n          <List>\n            <ListItem>\n              <ListItemIcon>\n                <Checkbox\n                  id=\"banCheck\"\n                  onChange={handleChange}\n                  name=\"banned_users\"\n                  value=\"ban\"\n                  color=\"primary\"\n                  checked={isBanChecked}\n                />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography testid=\"bannedUsers\" className={classes.listText}>\n                  Banned Users\n                </Typography>\n              </ListItemText>\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <Checkbox\n                  id=\"flagCheck\"\n                  onChange={handleChange}\n                  name=\"flagged_users\"\n                  value=\"flag\"\n                  color=\"primary\"\n                  checked={isFlagChecked}\n                />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography testid=\"flaggedUsers\" className={classes.listText}>\n                  Flagged Users\n                </Typography>\n              </ListItemText>\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport Helmet from 'react-helmet';\nimport { Grid, Typography, Box } from '@material-ui/core';\nimport { formatDate, showError, usersFromLS } from '../../utils/helpers';\nimport Search from '../core/Search';\nimport UsersTable from './UsersTable';\nimport AddUserMetadataModal from './AddUserMetadataModal';\nimport usePubNub from '../../utils/usePubNub';\nimport { deleteUserMetadata, getUserByName } from '../../services/pubnub';\nimport FilterUsers from './FilterUsers';\nimport SnackBar from '../core/SnackBar';\n\nfunction UsersListing() {\n  const [searchResult, setSearchResult] = useState([]);\n  const [dataAdded, setDataAdded] = useState([]);\n  const { pubnub } = usePubNub();\n  const [searched] = useState('');\n  const [filterBy, setFilterBy] = useState('');\n  const [userAlert, setUserAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n  });\n\n  const requestUserSearch = (searchedVal) => {\n    setUserAlert({\n      ...userAlert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n    });\n    (async () => {\n      setUserAlert({\n        ...userAlert,\n        success: { status: false, msg: '' },\n        error: { status: false, msg: '' },\n      });\n      try {\n        const filteredRows = await getUserByName(pubnub, searchedVal);\n        const usersList = [];\n        let selectedUser = {};\n        if (!filteredRows.length) {\n          setUserAlert({\n            ...userAlert,\n            success: { status: false, msg: '' },\n            error: { status: true, msg: 'No users found' },\n          });\n        }\n        filteredRows.map((user, index) => {\n          selectedUser = user;\n          selectedUser.updated = formatDate(user.updated);\n          usersList.push(selectedUser);\n          return false;\n        });\n        setSearchResult(usersList);\n      } catch (e) {\n        setUserAlert({\n          ...userAlert,\n          success: { status: false, msg: '' },\n          error: { status: true, msg: 'Failed to filter user' },\n        });\n      }\n    })();\n  };\n  const cancelUserSearch = () => {\n    setSearchResult(usersFromLS());\n  };\n\n  const setSearchableData = (usersData) => {\n    setSearchResult(usersData);\n  };\n\n  const deleteUser = (UUID) => {\n    if (UUID) {\n      (async () => {\n        try {\n          await deleteUserMetadata(pubnub, UUID);\n          setDataAdded([]);\n          setUserAlert({\n            ...userAlert,\n            success: { status: true, msg: 'User deleted successfully' },\n            error: { status: false, msg: '' },\n          });\n        } catch (e) {\n          setUserAlert({\n            ...userAlert,\n            success: { status: false, msg: '' },\n            error: { status: true, msg: showError(e.status.errorData) },\n          });\n        }\n      })();\n    }\n  };\n\n  const userAdded = (data) => {\n    setDataAdded(data);\n  };\n\n  const handleFilterChange = (value) => {\n    let filter = '';\n    if (value !== 'all') {\n      filter = `custom.${value} == true`;\n    }\n    setFilterBy(filter);\n  };\n\n  return (\n    <>\n      <Helmet title=\"Users\" />\n      <Grid justify=\"space-between\" container>\n        <Grid item sm={4}>\n          <Box pl={1}>\n            <Typography testid=\"title\" variant=\"h5\">\n              Users\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid item sm={8}>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n            <Box ml={2}>\n              <Search\n                searched={searched}\n                requestSearch={requestUserSearch}\n                cancelSearch={cancelUserSearch}\n                placeholder={'Search for user name'}\n              />\n            </Box>\n            <Box ml={2}>\n              <FilterUsers isFiltered={handleFilterChange} />\n            </Box>\n            <Box ml={2}>\n              <AddUserMetadataModal pubnubObject={pubnub} isAdded={userAdded} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <br />\n      <Grid container spacing={6}>\n        <Grid item xs={12}>\n          <UsersTable\n            searchResult={searchResult}\n            setSearchableData={setSearchableData}\n            deleteUser={deleteUser}\n            data={dataAdded}\n            pubnub={pubnub}\n            filterBy={filterBy}\n          />\n        </Grid>\n      </Grid>\n      {userAlert.error.status && (\n        <SnackBar msg={userAlert.error.msg} status={'info'} />\n      )}\n      {userAlert.success.status && (\n        <SnackBar msg={userAlert.success.msg} status={'success'} />\n      )}\n    </>\n  );\n}\n\nexport default UsersListing;\n","import React from 'react';\nimport UsersListing from '../../components/users/UsersListing';\nimport DashboardLayout from '../../layouts/Dashboard';\n\nconst Users = () => {\n  return (\n    <>\n      <DashboardLayout>\n        <UsersListing />\n      </DashboardLayout>\n    </>\n  );\n};\nexport default Users;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  header: {\n    opacity: 1,\n    background: '#F7F8FA 0% 0% no-repeat padding-box',\n    height: '50px',\n  },\n  messages: {\n    padding: theme.spacing(2),\n    opacity: 1,\n    border: '1px solid #F3F3F3',\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    boxShadow: '0px 3px 6px #00000014',\n    height: '57vh',\n    overflow: 'auto',\n  },\n  chat: {\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    borderRadius: '0px 10px 10px 10px',\n    opacity: 1,\n    height: 'auto',\n    width: 'auto',\n    border: '1px solid #DDDDDD',\n    marginBottom: '5px',\n    marginLeft: '8%',\n    maxWidth: '40%',\n  },\n  values: {\n    color: '#414141',\n    textAlign: 'left',\n    opacity: 1,\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-18)/var(--unnamed-line-spacing-23) var(--unnamed-font-family-proxima-nova)',\n  },\n  avatar: {\n    background: '#EACAFF',\n    color: '#BD59FF',\n    borderRadius: '8px',\n  },\n  appName: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    fontSize: '12px',\n    color: '#C2C2C2',\n    opacity: 1,\n  },\n  timeField: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 11px/13px var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#C2C2C2',\n    opacity: 1,\n    marginBottom: '10px',\n    marginLeft: '8%',\n  },\n  channelMember: {\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    borderRadius: '10px',\n    opacity: 1,\n    height: '48px',\n    width: '100%',\n    marginBottom: '20px',\n  },\n  user: {\n    font: 'var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-14)/var(--unnamed-line-spacing-17) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#4B5155',\n    opacity: 1,\n    marginBottom: '10px',\n    marginLeft: '3%',\n  },\n  chatText: {\n    font: 'var(--unnamed-font-style-normal) normal medium var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#414141',\n    marginBottom: '10px',\n    marginTop: '10px',\n    marginLeft: '20px',\n    marginRight: '20px',\n    wordBreak: 'break-word',\n    whiteSpace: 'pre-wrap',\n  },\n  members: {\n    font: 'var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-14)/var(--unnamed-line-spacing-17) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#4B5155',\n    opacity: 1,\n    margin: '10px 0px 10px 10px',\n  },\n  channelMembers: {\n    padding: theme.spacing(2),\n    opacity: 1,\n    border: '1px solid #F3F3F3',\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    boxShadow: '0px 3px 6px #00000014',\n    maxHeight: '74vh',\n    overflow: 'auto',\n  },\n  totalCount: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-12)/var(--unnamed-line-spacing-15) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#414141',\n    opacity: 1,\n    marginBottom: '10px',\n  },\n  userProfile: {\n    borderRadius: '8px',\n  },\n  totalUsers: {\n    background: '#C2C2C2 0% 0% no-repeat padding-box',\n    borderRadius: '5px',\n    opacity: 1,\n    font: 'var(--unnamed-font-style-normal) normal 600 11px/13px var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#FFFFFF',\n    height: 'auto',\n    width: '25px',\n  },\n  onlineUsers: {\n    background: '#76C00D 0% 0% no-repeat padding-box',\n    borderRadius: '5px',\n    opacity: 1,\n    font: 'var(--unnamed-font-style-normal) normal 600 11px/13px var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#FFFFFF',\n    height: 'auto',\n    width: '25px',\n  },\n  alertMessage: {\n    background: 'transparent',\n  },\n  messagesCount: {\n    background: '#E5EAF9 0% 0% no-repeat padding-box',\n    borderRadius: '0px 0px 5px 5px',\n    opacity: 1,\n    textTransform: 'none',\n  },\n  messagesCountFont: {\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-12)/16px var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'center',\n    color: '#6387ED',\n    opacity: 1,\n    textTransform: 'camelcase',\n  },\n  deletedChat: {\n    font: 'var(--unnamed-font-style-normal) normal medium var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'left',\n    color: '#414141',\n    marginBottom: '10px',\n    marginTop: '10px',\n    marginLeft: '20px',\n    marginRight: '20px',\n    textDecoration: 'line-through',\n  },\n  messageContainer: {\n    '& button': {\n      display: 'none',\n    },\n    '&:hover': {\n      '& button': {\n        display: 'inline-block',\n      },\n    },\n  },\n  activeToggled: {\n    background: '#6387ED 0% 0% no-repeat padding-box',\n    borderRadius: '5px',\n    opacity: 1,\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-12)/16px Graphik',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'center',\n    color: '#FFFFFF',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#6387ED',\n    },\n  },\n  disableToggled: {\n    background: '#E5EAF9 0% 0% no-repeat padding-box',\n    borderRadius: '5px',\n    opacity: 1,\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textAlign: 'center',\n    font: 'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-12)/16px Graphik',\n    color: '#6387ED',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#E5EAF9',\n    },\n  },\n  messageBox: {\n    background: '#F7F8FA 0% 0% no-repeat padding-box',\n    border: '1px solid #DBE5ED',\n    borderRadius: '8px 8px 0px 0px',\n    opacity: 1,\n    height: 'auto',\n    borderRight: '#6387ED',\n  },\n  editMessageHeader: {\n    font: 'var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    color: '#414141',\n    opacity: 1,\n    marginTop: '10px',\n    marginLeft: '20px',\n  },\n  editMessageFont: {\n    font: 'var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    color: '#414141',\n    opacity: 1,\n    marginTop: '10px',\n    marginLeft: '20px',\n    marginBottom: '10px',\n    wordBreak: 'break-word',\n    whiteSpace: 'pre-wrap',\n  },\n  image: {\n    maxWidth: '240px',\n    maxHeight: '165px',\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    border: '1px solid #DDDDDD',\n    borderRadius: '0px 10px 10px 10px',\n  },\n  imageIcon: {\n    position: 'absolute',\n    top: '10px',\n    right: '10px',\n  },\n  imageContainer: {\n    padding: '0px',\n    cursor: 'default',\n  },\n}));\n","import { Badge, withStyles } from '@material-ui/core';\n\nexport const OnlineBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#76C00D',\n    color: '#76C00D',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n}))(Badge);\n\nexport const OfflineBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: '#C2C2C2',\n    color: '#C2C2C2',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n}))(Badge);\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useStyles } from '../../style/confirmDialog';\nimport { Typography } from '@material-ui/core';\nimport { setUserMetadata } from '../../services/pubnub';\nimport SnackBar from '../core/SnackBar';\nimport {\n  capitalizeFirstLetter,\n  selectedChannelFromLS,\n} from '../../utils/helpers';\n\nconst UserAction = (props) => {\n  const classes = useStyles();\n  const [muteAlert, setMuteAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n  });\n  const selectedChannel = selectedChannelFromLS();\n  const customMetaData = props.user.custom || {};\n  let mutedChannels = props.user.custom && props.user.custom.mutedChannels;\n  let blockedChannels = props.user.custom && props.user.custom.blockedChannels;\n\n  const getMutedChannels = () => {\n    if (!mutedChannels) {\n      mutedChannels = selectedChannel;\n    } else {\n      let channels = mutedChannels.split(',');\n      if (props.action === 'mute') channels.push(selectedChannel);\n      else channels = channels.filter((item) => item !== selectedChannel);\n      mutedChannels = channels.join(',');\n    }\n    return mutedChannels;\n  };\n\n  const getBlockedChannels = () => {\n    if (!blockedChannels) {\n      blockedChannels = selectedChannel;\n    } else {\n      let channels = blockedChannels.split(',');\n      if (props.action === 'block') channels.push(selectedChannel);\n      else channels = channels.filter((item) => item !== selectedChannel);\n      blockedChannels = channels.join(',');\n    }\n    return blockedChannels;\n  };\n\n  const handleMuteClick = () => {\n    setMuteAlert({\n      ...muteAlert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n    });\n    if (props.action === 'mute' || props.action === 'unmute') {\n      let channels = getMutedChannels();\n      customMetaData.mutedChannels = channels;\n    }\n    if (props.action === 'block' || props.action === 'unblock') {\n      let channels = getBlockedChannels();\n      customMetaData.blockedChannels = channels;\n    }\n    (async () => {\n      try {\n        const response = await setUserMetadata(\n          props.pubnub,\n          props.user.id,\n          customMetaData\n        );\n        props.updated(response, props.action);\n        setMuteAlert({\n          ...muteAlert,\n          success: {\n            status: true,\n            msg: 'Successfully updated',\n          },\n          error: { status: false, msg: '' },\n        });\n      } catch (e) {\n        setMuteAlert({\n          ...muteAlert,\n          success: { status: false, msg: '' },\n          error: { status: true, msg: 'Failed to add metadata' },\n        });\n      }\n    })();\n  };\n\n  return (\n    <>\n      <Dialog testid=\"DialogId\"\n        open={props.open}\n        onClose={() => props.setOpen(false)}\n        aria-labelledby=\"confirm-dialog\"\n        fullWidth\n        maxWidth=\"xs\"\n        className={classes.confirmDialog}\n      >\n        <DialogTitle id=\"confirm-dialog\">{props.title}</DialogTitle>\n        <DialogContent>{props.children}</DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              props.setOpen(false);\n              handleMuteClick();\n            }}\n            className={classes.confirmButton}\n          >\n            <Typography>\n              Yes, {capitalizeFirstLetter(props.action)} them\n            </Typography>\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            onClick={() => props.setOpen(false)}\n            className={classes.cancelButton}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {muteAlert.error.status && (\n        <SnackBar msg={muteAlert.error.msg} status={'info'} />\n      )}\n      {muteAlert.success.status && (\n        <SnackBar msg={muteAlert.success.msg} status={'success'} />\n      )}\n    </>\n  );\n};\nexport default UserAction;\n","import React from 'react';\nimport { Waypoint } from 'react-waypoint';\nimport { Grid, CircularProgress } from '@material-ui/core';\n\nexport default function MembersLoader(props) {\n  return (\n    <>\n      {props.membersLength > 99 && props.membersLength < props.totalCount ? (\n        <Waypoint onEnter={props.fetchChannelsMembersOnScroll} />\n      ) : null}\n      {props.loading ? (\n        <Grid justify=\"center\" container>\n          <CircularProgress />\n        </Grid>\n      ) : null}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Avatar, Box, Grid, IconButton, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/messages\";\nimport { getChannelMembers, getOnlineMembers } from \"../../services/pubnub\";\nimport { OnlineBadge, OfflineBadge } from \"../../style/badge\";\nimport {\n  capitalizeFirstLetter,\n  formatProfileImageUrl,\n  checkMuteStatus,\n  checkBlockStatus,\n} from \"../../utils/helpers\";\nimport { LightTooltip } from \"../../style/tooltip\";\nimport UserAction from \"../users/UserAction\";\nimport MembersLoader from \"./MembersLoader\";\n\nexport default function Members(props) {\n  const classes = useStyles();\n  const [members, setMembers] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState(0);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [over, setOver] = useState(false);\n  const [selectedUser, setSelectedUser] = useState([]);\n  const [action, setAction] = useState(\"\");\n  const [nextPage, setNextPage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchOnlineMembers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.channelMembers]);\n\n  useEffect(() => {\n    setNextPage(props.page);\n  }, [props.page]);\n\n  /**\n   * Fetches online users of a channel\n   */\n  const fetchOnlineMembers = () => {\n    (async () => {\n      try {\n        const onlineMembersResponse = await getOnlineMembers(props.pubnub, props.channelName);\n        setOnlineUsers(onlineMembersResponse.length);\n        props.channelMembers.map((member, i) => {\n          props.channelMembers[i][\"mute\"] = false;\n          props.channelMembers[i][\"block\"] = false;\n          if (checkMuteStatus(member, props.channelName)) {\n            props.channelMembers[i][\"mute\"] = true;\n          }\n          if (checkBlockStatus(member, props.channelName)) {\n            props.channelMembers[i][\"block\"] = true;\n          }\n          onlineMembersResponse.map((onlineMember, j) => {\n            if (member.uuid.id === onlineMember.uuid) {\n              props.channelMembers[i][\"status\"] = \"online\";\n            }\n            return false;\n          });\n          return false;\n        });\n        let onlineUsersArray = [];\n        onlineMembersResponse.map((onlineMember, j) => {\n          let userObj = {\n            uuid: {\n              name: null,\n              profileUrl: null,\n              id: null,\n            },\n            status: \"online\",\n            actionsDisable: true,\n            toolTipTitle: \"User not a member of channel\",\n          };\n          let filterMember = props.channelMembers.filter(\n            (member) => member.uuid.id === onlineMember.uuid\n          );\n          if (!filterMember.length) {\n            userObj.uuid.id = onlineMember.uuid;\n            onlineUsersArray.push(userObj);\n          }\n          return false;\n        });\n\n        const setOnlineUsersArray = [...new Set(onlineUsersArray)];\n        const users = [...setOnlineUsersArray, ...props.channelMembers];\n        setMembers(users);\n      } catch (e) {}\n    })();\n  };\n\n  /**\n   * Handles clicking on a member to view use details in a card\n   */\n  const handleClick = (detail) => {\n    if (!over) props.selectedMemberDetail(detail);\n  };\n\n  /**\n   * Handles mute icon click to mute a user\n   */\n  const confirmMute = (event, user) => {\n    setAction(\"mute\");\n    setConfirmOpen(true);\n    setSelectedUser(user);\n  };\n\n  /**\n   * Handles unmute icon click to unmute a user\n   */\n  const confirmUnmute = (event, user) => {\n    setAction(\"unmute\");\n    setConfirmOpen(true);\n    setSelectedUser(user);\n  };\n\n  /**\n   * Handles block icon click to blcok a user\n   */\n  const confirmBlock = (event, user) => {\n    setAction(\"block\");\n    setConfirmOpen(true);\n    setSelectedUser(user);\n  };\n\n  /**\n   * Handles unblock icon click to unblock a user\n   */\n  const confirmUnblock = (event, user) => {\n    setAction(\"unblock\");\n    setConfirmOpen(true);\n    setSelectedUser(user);\n  };\n\n  const metadataUpdated = (userDetail, response) => {\n    let filteredArray = members.filter((item) => item.uuid.id !== userDetail.id);\n    let filteredMember = members.filter((row) => {\n      return row.uuid.id.includes(userDetail.id);\n    });\n    switch (response) {\n      case \"mute\":\n        filteredMember[0].mute = true;\n        break;\n      case \"unmute\":\n        filteredMember[0].mute = false;\n        break;\n      case \"block\":\n        filteredMember[0].block = true;\n        break;\n      case \"unblock\":\n        filteredMember[0].block = false;\n        break;\n      default:\n        break;\n    }\n    const memberIndex = members.findIndex((row) => {\n      return row.uuid.id.includes(userDetail.id);\n    });\n    filteredArray.splice(memberIndex, 0, filteredMember[0]);\n    setMembers(filteredArray);\n  };\n\n  /**\n   * Fetches other channel members on scrolling down\n   */\n  const fetchChannelsMembersOnScroll = () => {\n    setLoading(true);\n    (async () => {\n      try {\n        const channelMembers = await getChannelMembers(props.pubnub, props.channelName, nextPage);\n        setMembers((oldArray) => [...oldArray, ...channelMembers.data]);\n        setNextPage(channelMembers.next);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n      }\n    })();\n  };\n\n  return (\n    <>\n      <Grid>\n        <Typography className={classes.members}>Members</Typography>\n        <Grid container>\n          <Grid>\n            <Box mr={1} ml={1} mb={2}>\n              <Avatar variant=\"square\" className={classes.onlineUsers}>\n                {onlineUsers}\n              </Avatar>\n            </Box>\n          </Grid>\n          <Box>\n            <small className={classes.totalCount}>Online Users</small>\n          </Box>\n          <Grid>\n            <Box mr={1} mb={2} ml={1}>\n              <Avatar variant=\"square\" className={classes.totalUsers}>\n                {members.length}\n              </Avatar>\n            </Box>\n          </Grid>\n          <Box>\n            <small className={classes.totalCount}>Total Users</small>\n          </Box>\n        </Grid>\n        {members?.map((member, i) => {\n          return (\n            <Grid\n              justify=\"flex-start\"\n              container\n              className={classes.channelMember}\n              key={i}\n              onClick={() => handleClick(member)}\n            >\n              <Box mr={1}>\n                {member.status ? (\n                  <OnlineBadge\n                    variant=\"dot\"\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"right\",\n                    }}\n                  >\n                    <Avatar\n                      variant=\"square\"\n                      className={classes.userProfile}\n                      src={formatProfileImageUrl(member.uuid.profileUrl)}\n                    />\n                  </OnlineBadge>\n                ) : (\n                  <OfflineBadge\n                    variant=\"dot\"\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"right\",\n                    }}\n                  >\n                    <Avatar\n                      variant=\"square\"\n                      className={classes.userProfile}\n                      src={formatProfileImageUrl(member.uuid.profileUrl)}\n                    />\n                  </OfflineBadge>\n                )}\n              </Box>\n              <Grid item sm={6} xs={12} md={6}>\n                <small className={classes.values}>\n                  {!member.uuid.name\n                    ? member.uuid.id.substring(0, 12) + \"..\" || \"Unknown\"\n                    : capitalizeFirstLetter(member.uuid.name)}\n                </small>\n                <br />\n                <small className={classes.appName}>\n                  {!member.status ? \"offline\" : member.status}\n                </small>\n              </Grid>\n              <Box ml={1}>\n                {!member.mute ? (\n                  <>\n                    <LightTooltip title={member.toolTipTitle || \"Mute\"}>\n                      <span>\n                        <IconButton\n                          edge=\"start\"\n                          onClick={(event) => confirmMute(event, member.uuid)}\n                          onMouseOver={() => setOver(true)}\n                          onMouseOut={() => setOver(false)}\n                          disabled={member.actionsDisable}\n                        >\n                          <img\n                            src=\"images/unmute.svg\"\n                            alt=\"mute\"\n                            style={{ width: \"20px\", height: \"16px\" }}\n                          />\n                        </IconButton>\n                      </span>\n                    </LightTooltip>\n                  </>\n                ) : (\n                  <>\n                    <LightTooltip title=\"Unmute\">\n                      <span>\n                        <IconButton\n                          edge=\"start\"\n                          onClick={(event) => confirmUnmute(event, member.uuid)}\n                          onMouseOver={() => setOver(true)}\n                          onMouseOut={() => setOver(false)}\n                          disabled={member.actionsDisable}\n                        >\n                          <img src=\"images/mute.svg\" alt=\"unmute\" />\n                        </IconButton>\n                      </span>\n                    </LightTooltip>\n                  </>\n                )}\n                {!member.block ? (\n                  <>\n                    <LightTooltip title={member.toolTipTitle || \"Block\"}>\n                      <span>\n                        <IconButton\n                          edge=\"start\"\n                          onClick={(event) => confirmBlock(event, member.uuid)}\n                          onMouseOver={() => setOver(true)}\n                          onMouseOut={() => setOver(false)}\n                          disabled={member.actionsDisable}\n                        >\n                          <img src=\"images/unblock.svg\" alt=\"block\" />\n                        </IconButton>\n                      </span>\n                    </LightTooltip>\n                  </>\n                ) : (\n                  <>\n                    <LightTooltip title=\"Unblock\">\n                      <span>\n                        <IconButton\n                          edge=\"start\"\n                          onClick={(event) => confirmUnblock(event, member.uuid)}\n                          onMouseOver={() => setOver(true)}\n                          onMouseOut={() => setOver(false)}\n                          disabled={member.actionsDisable}\n                        >\n                          <img src=\"images/block.svg\" alt=\"unblock\" />\n                        </IconButton>\n                      </span>\n                    </LightTooltip>\n                  </>\n                )}\n              </Box>\n            </Grid>\n          );\n        })}\n      </Grid>\n      <UserAction\n        open={confirmOpen}\n        user={selectedUser}\n        title=\"Are you sure?\"\n        setOpen={setConfirmOpen}\n        pubnub={props.pubnub}\n        action={action}\n        updated={metadataUpdated}\n      >\n        You want to {action} this user?\n      </UserAction>\n      <MembersLoader\n        loading={loading}\n        membersLength={members.length}\n        fetchChannelsMembersOnScroll={fetchChannelsMembersOnScroll}\n        totalCount={props.totalCount}\n      />\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  sectionHeading: {\n    font: \"font: var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-18)/var(--unnamed-line-spacing-23) var(--unnamed-font-family-proxima-nova)\",\n    color: \"#414141\",\n    opacity: 1,\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    fontWeight: 700,\n  },\n  profilePicture: {\n    width: \"100%\",\n  },\n  name: {\n    fontSize: \"15px\",\n    marginTop: \"15px\",\n    marginBottom: \"25px\",\n    fontWeight: 700,\n    font: \"font: var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-18)/var(--unnamed-line-spacing-23) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"0px\",\n    color: \"#414141\",\n    opacity: 1,\n  },\n  label: {\n    color: \"#C2C2C2\",\n    fontSize: \"15px\",\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-12)/var(--unnamed-line-spacing-15) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"-1px\",\n  },\n  labelItem: {\n    fontSize: \"15px\",\n  },\n  containerRoot: {\n    padding: \"10px\",\n  },\n  closeIcon: {\n    background: \"transparent url(images/closeBg.svg) 0% 0% no-repeat padding-box;\",\n    padding: \"12px 12px 10px 12px\",\n    borderRadius: \"5px\",\n  },\n  blockIcon: {\n    background: \"transparent url(images/greyBg.svg) 0% 0% no-repeat padding-box;\",\n    padding: \"12px 12px 10px 12px\",\n    borderRadius: \"5px\",\n  },\n  online: {\n    height: \"10px\",\n    width: \"10px\",\n    marginLeft: \"2px\",\n    backgroundColor: \"#76C00D\",\n    borderRadius: \"50%\",\n    display: \" inline-block\",\n  },\n}));\n","import React, { useEffect, useState } from \"react\";\nimport { useStyles } from \"../../style/memberDetail\";\nimport { Box, Grid, Typography, IconButton } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport UserAction from \"../users/UserAction\";\nimport { LightTooltip } from \"../../style/tooltip\";\nimport { formatProfileImageUrl } from \"../../utils/helpers\";\n\nconst MemberDetail = ({ member, toggleMemberDetails, pubnub }) => {\n  const classes = useStyles();\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState([]);\n  const [action, setAction] = useState(\"\");\n  const [mute, setMute] = useState(false);\n  const [block, setBlock] = useState(false);\n\n  useEffect(() => {\n    if (member.block) setBlock(member.block);\n    if (member.mute) setMute(member.mute);\n  }, [member]);\n\n  const muteMember = (event, user) => {\n    setAction(\"mute\");\n    setDialogOpen(true);\n    setSelectedUser(user);\n  };\n\n  const unmuteMember = (event, user) => {\n    setAction(\"unmute\");\n    setDialogOpen(true);\n    setSelectedUser(user);\n  };\n\n  const blockUser = (event, user) => {\n    setAction(\"block\");\n    setDialogOpen(true);\n    setSelectedUser(user);\n  };\n\n  const unblockUser = (event, user) => {\n    setAction(\"unblock\");\n    setDialogOpen(true);\n    setSelectedUser(user);\n  };\n\n  const metadataUpdated = (userDetail, response) => {\n    switch (response) {\n      case \"mute\":\n        setMute(true);\n        break;\n      case \"unmute\":\n        setMute(false);\n        break;\n      case \"block\":\n        setBlock(true);\n        break;\n      case \"unblock\":\n        setBlock(false);\n        break;\n      default:\n        break;\n    }\n  };\n\n  if (member) {\n    return (\n      <>\n        <Grid container justify=\"flex-start\">\n          <Grid item>\n            <Grid container>\n              <Grid item>\n                <IconButton onClick={() => toggleMemberDetails(false)}>\n                  <img src=\"images/Button-Arrow.svg\" alt=\"toggle\" />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <Box pt={1} pl={1}>\n                  <Typography variant=\"body2\" className={classes.sectionHeading}>\n                    More Details\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"center\">\n          <Grid sm={6} md={6} item>\n            <img\n              src={formatProfileImageUrl(member.uuid.profileUrl)}\n              className={classes.profilePicture}\n              alt=\"profile\"\n            />\n          </Grid>\n          <Grid sm={12} md={12} item>\n            <Typography variant=\"h6\" align=\"center\" className={classes.name}>\n              {member.uuid.name || member.uuid.id}{\" \"}\n              {member.status && <span className={classes.online} />}\n            </Typography>\n          </Grid>\n          <Grid container justify=\"center\">\n            <Grid sm={4} md={4} lg={3} item>\n              {!mute ? (\n                <LightTooltip title=\"Mute\">\n                  <span>\n                    <IconButton\n                      aria-label=\"notification\"\n                      size=\"small\"\n                      onClick={(event) => muteMember(event, member.uuid)}\n                      disabled={member.actionsDisable}\n                    >\n                      <div className={classes.blockIcon}>\n                        <img\n                          src=\"images/unmute.svg\"\n                          alt=\"mute\"\n                          style={{ width: \"20px\", height: \"16px\" }}\n                        />\n                      </div>\n                    </IconButton>\n                  </span>\n                </LightTooltip>\n              ) : (\n                <LightTooltip title=\"UnMute\">\n                  <span>\n                    <IconButton\n                      aria-label=\"notification\"\n                      size=\"small\"\n                      onClick={(event) => unmuteMember(event, member.uuid)}\n                      disabled={member.actionsDisable}\n                    >\n                      <div className={classes.closeIcon}>\n                        <img src=\"images/mute.svg\" alt=\"unmute\" />\n                      </div>\n                    </IconButton>\n                  </span>\n                </LightTooltip>\n              )}\n            </Grid>\n            <Grid sm={4} md={4} lg={3} item>\n              {!block ? (\n                <LightTooltip title=\"Block\">\n                  <span>\n                    <IconButton\n                      aria-label=\"close\"\n                      size=\"small\"\n                      onClick={(event) => blockUser(event, member.uuid)}\n                      disabled={member.actionsDisable}\n                    >\n                      <div className={classes.blockIcon}>\n                        <img src=\"images/unblock.svg\" alt=\"block\" />\n                      </div>\n                    </IconButton>\n                  </span>\n                </LightTooltip>\n              ) : (\n                <LightTooltip title=\"UnBlock\">\n                  <span>\n                    <IconButton\n                      aria-label=\"close\"\n                      size=\"small\"\n                      onClick={(event) => unblockUser(event, member.uuid)}\n                      disabled={member.actionsDisable}\n                    >\n                      <div className={classes.closeIcon}>\n                        <img src=\"images/times-circle.svg\" alt=\"block\" />\n                      </div>\n                    </IconButton>\n                  </span>\n                </LightTooltip>\n              )}\n            </Grid>\n            <Grid></Grid>\n          </Grid>\n          <Grid container justify=\"flex-start\" spacing={2} className={classes.containerRoot}>\n            <Grid item sm={12} md={12}>\n              <Typography testid=\"nick_name\" className={classes.label}>\n                NICK NAME\n              </Typography>\n              <Typography className={classes.labelItem}>{member.uuid.name}</Typography>\n            </Grid>\n            <Grid item sm={12} md={12}>\n              <Typography testid=\"created_at\" className={classes.label}>\n                CREATED DATE\n              </Typography>\n              <Typography className={classes.labelItem}>\n                {moment(member.updated).format(\"MMMM DD, YYYY hh:mm a\")}\n              </Typography>\n            </Grid>\n            <Grid item sm={12} md={12}>\n              <Typography testid=\"email\" className={classes.label}>\n                EMAIL ADDRESS\n              </Typography>\n              <Typography className={classes.labelItem}>{member.uuid.email}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <UserAction\n          open={dialogOpen}\n          user={selectedUser}\n          title=\"Are you sure?\"\n          setOpen={setDialogOpen}\n          pubnub={pubnub}\n          action={action}\n          updated={metadataUpdated}\n        >\n          You want to {action} this user?\n        </UserAction>\n      </>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default MemberDetail;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useStyles } from '../../style/confirmDialog';\nimport { Typography } from '@material-ui/core';\nimport { deleteMessageAction } from '../../services/pubnub';\n\nconst UndoDelete = (props) => {\n  const { title, children, open, setOpen, pubnub, channel, message } = props;\n  const classes = useStyles();\n\n  const handleUndoClick = () => {\n    (async () => {\n      try {\n        await deleteMessageAction(\n          pubnub,\n          channel,\n          message.timetoken,\n          message.actionToken\n        );\n        props.updated(message.timetoken, message.actionToken, 'undo');\n      } catch (e) {}\n    })();\n  };\n\n  return (\n    <Dialog\n      id=\"dialog\"\n      open={open}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"confirm-dialog\"\n      fullWidth\n      maxWidth=\"xs\"\n      className={classes.confirmDialog}\n    >\n      <DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button\n          id=\"undo\"\n          onClick={() => {\n            setOpen(false);\n            handleUndoClick();\n          }}\n          className={classes.confirmButton}\n        >\n          <Typography> Yes</Typography>\n        </Button>\n\n        <Button\n          id=\"close\"\n          variant=\"contained\"\n          onClick={() => setOpen(false)}\n          className={classes.cancelButton}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default UndoDelete;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  TextField,\n  Button,\n  InputAdornment,\n  Box,\n  Typography,\n  IconButton,\n  Grid,\n} from \"@material-ui/core\";\nimport { addEditMessageAction, deleteMessageAction } from \"../../services/pubnub\";\nimport { useStyles } from \"../../style/messages\";\nimport SnackBar from \"../core/SnackBar\";\n\nconst EditMessage = (props) => {\n  const { pubnub, channel, message } = props;\n  const [text, setText] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [displayBox, setDisplayBox] = useState(false);\n  const [actionToken, setActionToken] = useState(\"\");\n  const classes = useStyles();\n  const [alertMessage, setAlertMessage] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n  });\n\n  useEffect(() => {\n    if (message.text) {\n      let token =\n        message.actions &&\n        message.actions.updated &&\n        message.actions.updated[Object.keys(message.actions.updated)[0]];\n      if (token) setActionToken(token[0].actionTimetoken);\n      setText(message.text);\n      setDisabled(false);\n      setDisplayBox(true);\n    }\n  }, [message]);\n\n  const updateMessage = () => {\n    setAlertMessage({\n      ...alertMessage,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n    });\n    (async () => {\n      try {\n        if (actionToken) {\n          await deleteMessageAction(pubnub, channel, message.timetoken, actionToken);\n        }\n        const response = await addEditMessageAction(pubnub, channel, message.timetoken, text);\n        setText(\"\");\n        setDisabled(true);\n        setDisplayBox(false);\n        props.updated(message.timetoken, message.actionToken, \"updated\", response);\n      } catch (e) {\n        setAlertMessage({\n          ...alertMessage,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: \"Failed to edit message\" },\n        });\n      }\n    })();\n  };\n\n  const handleInputChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const closeEditing = () => {\n    setDisplayBox(false);\n    setDisabled(true);\n    setText(\"\");\n    props.updated(message.timetoken, message.actionToken, \"updated\", \"\");\n  };\n  return (\n    <>\n      {displayBox ? (\n        <Box className={classes.messageBox}>\n          <Grid justify=\"space-between\" container>\n            <Grid item>\n              <Typography className={classes.editMessageHeader}>Edit Message</Typography>\n              <Typography className={classes.editMessageFont}>{message.text}</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton id=\"close\" onClick={closeEditing}>\n                <img src=\"images/close.svg\" alt=\"close\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Box>\n      ) : null}\n      {props.messagesLength ? (\n        <TextField\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Button onClick={updateMessage}>\n                  <img src=\"images/send-button.svg\" alt=\"edit\" />\n                </Button>\n              </InputAdornment>\n            ),\n          }}\n          id=\"message\"\n          name=\"message\"\n          placeholder=\"Enter your message here\"\n          variant=\"outlined\"\n          fullWidth\n          value={text}\n          onChange={handleInputChange}\n          autoComplete=\"off\"\n          disabled={disabled}\n        />\n      ) : null}\n      {alertMessage.error.status && <SnackBar msg={alertMessage.error.msg} status={\"info\"} />}\n    </>\n  );\n};\nexport default EditMessage;\n","/**\n * Displays Message content of a message in a selected channel\n */\nimport React from \"react\";\nimport { useStyles } from \"../../style/messages\";\nimport { Box, Grid, Typography, IconButton, Avatar } from \"@material-ui/core\";\nimport { LightTooltip } from \"../../style/tooltip\";\nimport { getModeratedMessageTooltip, getModeratedReasonTooltip } from \"../../utils/helpers\";\n\nconst MessageContent = (props) => {\n  const { message, confirmDelete, updateMessage, confirmUndo, index, toggledVal } = props;\n  const classes = useStyles();\n  return (\n    <>\n      {toggledVal === \"chat\" && (\n        <Grid container className={classes.messageContainer}>\n          {message.actions && (message.actions === \"deleted\" || message.actions.deleted) ? (\n            <>\n              <span\n                className={classes.chat}\n                style={{\n                  backgroundColor: index % 2 !== 0 ? \"#FFFFFF\" : \"#EEF3FF\",\n                }}\n              >\n                <Typography className={classes.deletedChat}>{message.text}</Typography>\n              </span>\n              <Box ml={2}>\n                <LightTooltip title=\"Undo\">\n                  <IconButton\n                    id=\"undoIcon\"\n                    edge=\"start\"\n                    onClick={(event) => confirmUndo(event, message)}\n                  >\n                    <img src=\"images/undo.svg\" alt=\"delete\" />\n                  </IconButton>\n                </LightTooltip>\n              </Box>\n            </>\n          ) : (\n            <>\n              <span\n                className={classes.chat}\n                style={{\n                  backgroundColor: index % 2 !== 0 ? \"#FFFFFF\" : \"#EEF3FF\",\n                }}\n              >\n                <Typography className={classes.chatText}>{message.text}</Typography>\n                {message.file && message.file.url && (\n                  <>\n                    <Avatar src={message.file.url} className={classes.image} />\n                  </>\n                )}\n              </span>\n\n              <Box ml={2}>\n                <LightTooltip title=\"Edit\">\n                  <IconButton\n                    id=\"updateIcon\"\n                    edge=\"start\"\n                    label=\"edit\"\n                    onClick={(event) => updateMessage(event, message)}\n                  >\n                    <img src=\"images/edit-message.svg\" alt=\"edit\" />\n                  </IconButton>\n                </LightTooltip>\n                <LightTooltip title=\"Delete\">\n                  <IconButton\n                    id=\"deleteIcon\"\n                    edge=\"start\"\n                    label=\"delete\"\n                    onClick={(event) => confirmDelete(event, message)}\n                  >\n                    <img src=\"images/delete-message.svg\" alt=\"delete\" />\n                  </IconButton>\n                </LightTooltip>\n              </Box>\n            </>\n          )}\n        </Grid>\n      )}\n      {toggledVal === \"banned\" && (\n        <Grid container>\n          <>\n            <span\n              className={classes.chat}\n              style={{\n                backgroundColor: index % 2 !== 0 ? \"#FFFFFF\" : \"#EEF3FF\",\n              }}\n            >\n              <Typography className={classes.chatText}>\n                <LightTooltip\n                  title={\n                    <>\n                      <Typography>{getModeratedReasonTooltip(message.reason)}</Typography>\n                      <br />\n                      <Typography>\n                        {getModeratedMessageTooltip(message.moderatedMessage)}\n                      </Typography>\n                    </>\n                  }\n                >\n                  <Typography className={classes.chatText}>{message.originalMessage}</Typography>\n                </LightTooltip>\n              </Typography>\n              {message.image && (\n                <>\n                  <IconButton className={classes.imageContainer}>\n                    <img className={classes.image} src={message.image} alt=\"sentImage\" />\n                    {message.imageReason && (\n                      <LightTooltip\n                        title={\n                          <>\n                            <Typography>{`Reason: ${\n                              message.imageReason[0] && message.imageReason[0].text\n                            }`}</Typography>\n                          </>\n                        }\n                        placement=\"right-start\"\n                      >\n                        <img\n                          src=\"images/info.svg\"\n                          alt=\"profilePicture\"\n                          className={classes.imageIcon}\n                        />\n                      </LightTooltip>\n                    )}\n                  </IconButton>\n                </>\n              )}\n            </span>\n          </>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default MessageContent;\n","/**\n * Displays Messages in a selected channel\n */\nimport React, { useState, useEffect, useRef } from 'react';\nimport {\n  Avatar,\n  Box,\n  Grid,\n  Typography,\n  CircularProgress,\n} from '@material-ui/core';\nimport { useStyles } from '../../style/messages';\nimport Alert from '@material-ui/lab/Alert';\nimport { formatUserName, formatProfileImageUrl } from '../../utils/helpers';\nimport ConfirmDialog from '../core/ConfirmDialog';\nimport { softDeleteMessage } from '../../services/pubnub';\nimport UndoDelete from './UndoDelete';\nimport EditMessage from './EditMessage';\nimport MessageContent from './MessageContent';\n\nexport default function Chat(props) {\n  const classes = useStyles();\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [selectedMessage, setSelectedMessage] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [undoConfirmOpen, setUndoConfirmOpen] = useState(false);\n\n  /**\n   * Handles delete icon click to confirm delete message action\n   */\n  const confirmDelete = (event, message) => {\n    setConfirmOpen(true);\n    setSelectedMessage(message);\n  };\n\n  /**\n   * Handles soft deleting a message in a channel\n   */\n  const deleteMessage = () => {\n    (async () => {\n      try {\n        const response = await softDeleteMessage(\n          props.pubnub,\n          props.channel,\n          selectedMessage.timetoken\n        );\n        props.updated(selectedMessage.timetoken, response.actionTimetoken);\n      } catch (e) {}\n    })();\n  };\n\n  /**\n   * Handles undo icon click to confirm recovering a message\n   */\n  const confirmUndo = (event, message) => {\n    setUndoConfirmOpen(true);\n    setSelectedMessage(message);\n  };\n\n  /**\n   * Handles edit icon click to edit a message\n   */\n  const updateMessage = (event, message) => {\n    props.setMessageToEdit(message);\n  };\n\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    setMessages(props.messages);\n    setTimeout(() => {\n      messagesEndRef.current?.scrollIntoView();\n    }, 100);\n  }, [props.messages]);\n\n  return (\n    <>\n      {messages.length || props.isLoading ? (\n        <Grid item className={classes.messages}>\n          {messages.map((message, n) => {\n            return (\n              <div key={n}>\n                {props.toggledVal === 'chat' && (\n                  <>\n                    <Grid container>\n                      <Box>\n                        <Avatar\n                          variant=\"square\"\n                          src={formatProfileImageUrl(message.profileUrl)}\n                        />\n                      </Box>\n                      <Typography className={classes.user}>\n                        {formatUserName(message.name)}\n                      </Typography>\n                    </Grid>\n                    <MessageContent\n                      id=\"messageContent\"\n                      message={message}\n                      confirmDelete={confirmDelete}\n                      updateMessage={updateMessage}\n                      confirmUndo={confirmUndo}\n                      index={n}\n                      toggledVal={props.toggledVal}\n                    />\n                    <Typography className={classes.timeField}>\n                      {message.time}\n                    </Typography>\n                  </>\n                )}\n                {props.toggledVal === 'banned' && (\n                  <>\n                    <Grid container>\n                      <Box>\n                        <Avatar\n                          variant=\"square\"\n                          src={formatProfileImageUrl(message.profileUrl)}\n                        />\n                      </Box>\n                      <Typography className={classes.user}>\n                        {formatUserName(message.name)}\n                      </Typography>\n                    </Grid>\n                    <MessageContent\n                      message={message}\n                      toggledVal={props.toggledVal}\n                      index={n}\n                    />\n                    <Typography className={classes.timeField}>\n                      {message.time}\n                    </Typography>\n                  </>\n                )}\n              </div>\n            );\n          })}\n          <div ref={messagesEndRef} />\n        </Grid>\n      ) : (\n        <Alert severity={'info'} className={classes.alertMessage}>\n          No recent messages found\n        </Alert>\n      )}\n\n      <ConfirmDialog\n        id=\"delete\"\n        title=\"Are you sure?\"\n        open={confirmOpen}\n        setOpen={setConfirmOpen}\n        onConfirm={deleteMessage}\n        actionMessage={'Yes, Delete it'}\n      >\n        You can always undo this action\n      </ConfirmDialog>\n      <UndoDelete\n        title=\"Are you sure?\"\n        open={undoConfirmOpen}\n        setOpen={setUndoConfirmOpen}\n        channel={props.channel}\n        pubnub={props.pubnub}\n        message={selectedMessage}\n        updated={props.updated}\n      >\n        You want to recover the message\n      </UndoDelete>\n      {props.isLoading ? (\n        <Grid justify=\"center\" container>\n          <Box pt={3}>\n            <CircularProgress />\n          </Box>\n        </Grid>\n      ) : null}\n      <EditMessage\n        message={props.messageToEdit}\n        channel={props.channel}\n        pubnub={props.pubnub}\n        updated={props.updated}\n        messagesLength={messages.length}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { getMessagesCount } from '../../services/pubnub';\nimport { useStyles } from '../../style/messages';\nimport SnackBar from '../core/SnackBar';\nimport { lastMidnightHours } from '../../utils/helpers';\n\nexport default function MessagesCount(props) {\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n  const [alert, setAlert] = useState({\n    success: { status: false, msg: '' },\n    error: { status: false, msg: '' },\n  });\n  const midnightTimeToken = lastMidnightHours();\n\n  useEffect(() => {\n    setAlert({\n      ...alert,\n      success: { status: false, msg: '' },\n      error: { status: false, msg: '' },\n    });\n    (async () => {\n      try {\n        const messagesCount = await getMessagesCount(\n          props.pubnub,\n          props.channelName,\n          midnightTimeToken\n        );\n        setCount(messagesCount);\n      } catch (e) {\n        setAlert({\n          ...alert,\n          success: { status: false, msg: '' },\n          error: { status: true, msg: e.message },\n        });\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.channelName]);\n\n  return (\n    <>\n      <Typography className={classes.messagesCountFont}>\n        Today({count})\n      </Typography>\n      {alert.error.status && <SnackBar msg={alert.error.msg} status={'info'} />}\n    </>\n  );\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { useStyles } from '../../style/messages';\n\nexport default function ToggleChat(props) {\n  const classes = useStyles();\n  return (\n    <>\n      <Button\n        id=\"chat\"\n        onClick={() => {\n          props.setToggledVal('chat');\n        }}\n        className={\n          props.toggledVal === 'chat'\n            ? classes.activeToggled\n            : classes.disableToggled\n        }\n      >\n        Chat\n      </Button>\n      <Button\n        id=\"ban\"\n        onClick={() => {\n          props.setToggledVal('banned');\n        }}\n        className={\n          props.toggledVal === 'banned'\n            ? classes.activeToggled\n            : classes.disableToggled\n        }\n      >\n        Banned\n      </Button>\n    </>\n  );\n}\n","/**\n * Fetches Messages and channel members of selected channel\n */\nimport React, { useEffect, useState, useRef } from 'react';\nimport Helmet from 'react-helmet';\nimport { Avatar, Box, Button, Grid } from '@material-ui/core';\nimport { useStyles } from '../../style/messages';\nimport {\n  fetchMessages,\n  getChannelMembers,\n  fetchChannelMetadata,\n} from '../../services/pubnub';\nimport { useLocation } from 'react-router';\nimport usePubNub from '../../utils/usePubNub';\nimport {\n  capitalizeFirstLetter,\n  capitalizeNameInitials,\n  checkChannelMember,\n  formatTimeToken,\n  formatBannedMessage,\n  getMessageFileUrl,\n  membersFromLS,\n  truncateChannelDescription,\n  getMessageText,\n} from '../../utils/helpers';\nimport Members from './Members';\nimport MemberDetail from './MemberDetail';\nimport Chat from './Chat';\nimport { setLocalStorage } from '../../services/localStorage';\nimport MessagesCount from './MessagesCount';\nimport ToggleChat from './ToggleChat';\n\nconst Messages = () => {\n  const firstUpdate = useRef(true);\n  const classes = useStyles();\n  const location = useLocation();\n  const { pubnub } = usePubNub();\n  const [messages, setMessages] = useState([]);\n  const [members, setMembers] = useState(membersFromLS());\n  const [channel, setChannel] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [memberDetails, setMemberDetails] = useState();\n  const [toggleMemberDetails, setToggleMemberDetails] = useState(false);\n  const [messageToEdit, setMessageToEdit] = useState([]);\n  const [toggledVal, setToggledVal] = useState('chat');\n  const [channelID, setChannelID] = useState('');\n  const [totalCount, setTotalCount] = useState(0);\n  const [page, setPage] = useState('');\n\n  useEffect(() => {\n    fetchChannelMembers();\n    setLocalStorage('PubNubSelectedChannel', location.state.channel);\n    setChannelID(location.state.channel);\n    (async () => {\n      try {\n        const channelResponse = await fetchChannelMetadata(\n          pubnub,\n          location.state.channel\n        );\n        setChannel(channelResponse);\n      } catch (e) {}\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (toggledVal === 'chat') {\n      setChannelID(location.state.channel);\n    } else if (toggledVal === 'banned') {\n      setChannelID('banned.' + location.state.channel);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggledVal]);\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n    } else {\n      if (channelID) fetchChannelMessages();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [members]);\n\n  useEffect(() => {\n    if (channelID && !loading) fetchChannelMessages();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channelID]);\n\n  /**\n   * Fetches channel members related to selected channel\n   */\n  const fetchChannelMembers = () => {\n    setLoading(true);\n    (async () => {\n      try {\n        const channelMembers = await getChannelMembers(\n          pubnub,\n          location.state.channel\n        );\n        setLocalStorage('PubNubChannelMembers', channelMembers.data);\n        setMembers(channelMembers.data);\n        setTotalCount(channelMembers.totalCount);\n        setPage(channelMembers.next);\n      } catch (e) {}\n    })();\n  };\n\n  /**\n   * Fetches channel messages related to selected channel\n   */\n  const fetchChannelMessages = () => {\n    setMessages([]);\n    (async () => {\n      try {\n        const channelMessages = await fetchMessages(pubnub, channelID);\n        const messagesList = [];\n        let messageObject = {};\n        let index = 0;\n        let messagesSet = [];\n        if (channelMessages) {\n          while (index <= members.length) {\n            index++;\n            // eslint-disable-next-line no-loop-func\n            channelMessages.map((channelMessage, j) => {\n              messageObject = channelMessage.message;\n              messageObject.time = formatTimeToken(channelMessage.timetoken);\n              messageObject.timetoken = channelMessage.timetoken;\n              messageObject.actions = channelMessage.actions;\n              messageObject.actionToken =\n                channelMessage.actions &&\n                channelMessage.actions.deleted &&\n                channelMessage.actions.deleted['.'][0].actionTimetoken;\n              messageObject.text = getMessageText(\n                channelMessage,\n                messageObject\n              );\n              let channelMember = checkChannelMember(members[index]);\n              if (channelMember === channelMessage.uuid) {\n                messageObject.name = capitalizeFirstLetter(\n                  members[index].uuid.name\n                );\n                messageObject.profileUrl = members[index].uuid.profileUrl;\n              }\n              formatBannedMessage(messageObject);\n              messagesSet = getMessageFileUrl(\n                messageObject,\n                channelMessage,\n                pubnub,\n                channelID\n              );\n              messagesList.push(messagesSet);\n              return false;\n            });\n          }\n        }\n\n        setMessages([...new Set(messagesList)]);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n      }\n    })();\n  };\n\n  /**\n   * Handles message updates action (edit, delte, undo delete)\n   */\n  const messageUpdate = (\n    messageToken,\n    actionToken,\n    action,\n    updatedResponse\n  ) => {\n    let filteredArray = messages.filter(\n      (item) => item.timetoken !== messageToken\n    );\n    let filteredMessage = messages.filter((row) => {\n      return row.timetoken.includes(messageToken);\n    });\n    if (action) {\n      if (action === 'undo') filteredMessage[0].actions = '';\n      if (action === 'updated' && updatedResponse) {\n        setMessageToEdit([]);\n        filteredMessage[0].text = updatedResponse.value;\n      } else if (action === 'updated') {\n        setMessageToEdit([]);\n      }\n    } else {\n      filteredMessage[0].actions = 'deleted';\n      filteredMessage[0].actionToken = actionToken;\n    }\n    const messageIndex = messages.findIndex((row) => {\n      return row.timetoken.includes(messageToken);\n    });\n    filteredArray.splice(messageIndex, 0, filteredMessage[0]);\n    setMessages(filteredArray);\n  };\n\n  useEffect(() => {\n    if (channelID) {\n      pubnub.unsubscribeAll();\n      pubnub.addListener({\n        message: ({ ...receivedMessage }) => {\n          let messageObject = {};\n          let filterMember =\n            members &&\n            members.filter(\n              (member) => member.uuid.id === receivedMessage.publisher\n            );\n          messageObject = receivedMessage.message;\n          if (filterMember.length) {\n            messageObject.name = filterMember[0].uuid.name;\n            messageObject.profileUrl = filterMember[0].uuid.profileUrl;\n          }\n          if (\n            messageObject.message &&\n            messageObject.message.file &&\n            messageObject.message.file.id &&\n            messageObject.message.file.name &&\n            !messageObject.message.file.url\n          ) {\n            const url = pubnub.getFileUrl({\n              channel: channelID,\n              id: messageObject.message.file.id,\n              name: messageObject.message.file.name,\n            });\n            messageObject.file.url = url;\n          }\n          messageObject.time = formatTimeToken(receivedMessage.timetoken);\n          messageObject.timetoken = receivedMessage.timetoken;\n          setMessages((oldArray) => [...oldArray, messageObject]);\n        },\n      });\n      pubnub.subscribe({ channels: [channelID] });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [members]);\n\n  const handleMemberDetails = (memberData) => {\n    setMemberDetails(memberData);\n    setToggleMemberDetails(true);\n  };\n\n  return (\n    <>\n      <Helmet title=\"Messages\" />\n      <Grid justify=\"space-between\" container spacing={1}>\n        <Grid item sm={9}>\n          <Grid justify=\"space-between\" container>\n            <Grid item sm={12} className={classes.header}>\n              <Grid justify=\"flex-start\" container>\n                <Box mr={1}>\n                  <Avatar className={classes.avatar} variant=\"square\">\n                    {capitalizeNameInitials(location.state.channel)}\n                  </Avatar>\n                </Box>\n                <Grid item sm={8} xs={12} md={8}>\n                  {toggledVal === 'chat' && (\n                    <small className={classes.values}>\n                      {location.state.channel} ({channel.name})\n                    </small>\n                  )}\n                  {toggledVal === 'banned' && (\n                    <small className={classes.values}>\n                      {location.state.channel} - Banned ({channel.name})\n                    </small>\n                  )}\n                  <br />\n                  <small className={classes.appName}>\n                    {truncateChannelDescription(channel.description)}\n                  </small>\n                </Grid>\n                <Grid item sm={3} md={3} lg={3}>\n                  <Grid justify=\"space-between\" container>\n                    <Grid item />\n                    <Grid item>\n                      <Box mt={1}>\n                        <ToggleChat\n                          toggledVal={toggledVal}\n                          setToggledVal={setToggledVal}\n                        />\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              {toggledVal === 'chat' && (\n                <Box mt={1}>\n                  <Grid justify=\"center\" container>\n                    <Button disabled className={classes.messagesCount}>\n                      <MessagesCount\n                        channelName={location.state.channel}\n                        pubnub={pubnub}\n                      />\n                    </Button>\n                  </Grid>\n                </Box>\n              )}\n            </Grid>\n          </Grid>\n          <Grid item sm={12}>\n            <Chat\n              messages={messages}\n              isLoading={loading}\n              pubnub={pubnub}\n              channel={location.state.channel}\n              updated={messageUpdate}\n              messageToEdit={messageToEdit}\n              setMessageToEdit={setMessageToEdit}\n              toggledVal={toggledVal}\n            />\n          </Grid>\n        </Grid>\n        <Grid item sm={3} className={classes.channelMembers}>\n          {!toggleMemberDetails && (\n            <Members\n              channelMembers={members}\n              pubnub={pubnub}\n              selectedMemberDetail={(details) => handleMemberDetails(details)}\n              channelName={location.state.channel}\n              totalCount={totalCount}\n              page={page}\n            />\n          )}\n          {toggleMemberDetails && (\n            <MemberDetail\n              toggleMemberDetails={(toggleValue) =>\n                setToggleMemberDetails(toggleValue)\n              }\n              member={memberDetails}\n              pubnub={pubnub}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Messages;\n","import React from 'react';\nimport Messages from '../../components/messages/Messages';\nimport DashboardLayout from '../../layouts/Dashboard';\n\nconst Overview = () => {\n  return (\n    <>\n      <DashboardLayout>\n        <Messages />\n      </DashboardLayout>\n    </>\n  );\n};\nexport default Overview;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  labelText: {\n    color: '#606060',\n  },\n  card: {\n    padding: '20px',\n  },\n  cancel: {\n    width: '150px',\n    margin: '3px',\n    height: '37px',\n    boxShadow: '0px 0px 0px white',\n    backgroundColor: 'white',\n    border: '1px solid #707070',\n    borderRadius: '8px',\n    opacity: 1,\n    font:'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13px/16px var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    color: '#707070',\n    fontSize: '13px',\n  },\n  save: {\n    background: '#6387ED 0% 0% no-repeat padding-box',\n    borderRadius: '8px',\n    opacity: 1,\n    color: 'white',\n    width: '150px',\n    margin: '8px',\n    height: '37px',\n    fontSize: '13px',\n    '&:hover': {\n      background: '#6387ED 0% 0% no-repeat padding-box',\n      color: 'white',\n    },\n  },\n\n  testText: {\n    font:'var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)',\n    letterSpacing: 'var(--unnamed-character-spacing-0)',\n    textDecoration: 'underline',\n    color: '#6387ED',\n    cursor: 'pointer',\n    opacity: 1,\n    '&:hover': {\n      background: '#E7EDFF',\n      color: '#6387ED',\n    },\n  },\n  loader: {\n    marginRight: '5px',\n    color:\"white\"\n  },\n  loaderLoading:{\n    marginRight: '5px'\n  },\n  rerouteBtn: {\n    textTransform: 'none',\n    marginLeft: '10px',\n    backgroundColor: '#FCF0EF',\n    color: '#FB6340',\n    '&:hover': {\n      textTransform: 'none',\n      marginLeft: '10px',\n      backgroundColor: '#FCF0EF',\n      color: '#FB6340',\n    },\n  },\n  rerouteIcon: {\n    marginRight: '5px',\n  },\n  infoIcon:{\n    padding:\"3px 0px 0px 5px\"\n  }\n}));\n","import React from \"react\";\nimport { Grid, Box, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/textModeration.js\";\n\nconst FilterCard = ({ state }) => {\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"flex-start\" spacing={3}>\n      <Grid item>\n        <Box className={!state.initialLoading ? classes.methodSelected : classes.methodNotSelected}>\n          <Grid container justify=\"center\">\n            <Box p={1}>\n              <img\n                alt=\"\"\n                src={\n                  !state.initialLoading\n                    ? \"images/automatic-profanity-selected.svg\"\n                    : \"images/automatic-detection.svg\"\n                }\n              />\n            </Box>\n          </Grid>\n          <Typography testid=\"autoDetection\" variant=\"body1\" align=\"center\">\n            Automatic Detection\n          </Typography>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FilterCard;\n","export const handleChange = ({ setState, state, name }) => (e, value) => {\n  if (e.target.name === 'channelId') {\n    setState({ ...state, channelOnChange: true, channelId: e.target.value });\n  } else if (e.target.name === 'toolForImageModeration') {\n    setState({ ...state, toolForImageModeration: e.target.value });\n  } else if (e.target.name === 'sightengineAPIUser') {\n    setState({\n      ...state,\n      sightengineAPIUser: e.target.value,\n      sightengineAPIUserError: false,\n    });\n  } else if (e.target.name === 'sightengineAPIKey') {\n    setState({\n      ...state,\n      sightengineAPIKey: e.target.value,\n      sightengineAPIKeyError: false,\n    });\n  } else if (e.target.name === 'sightengineWorkflowId') {\n    setState({\n      ...state,\n      sightengineWorkflowId: e.target.value,\n      sightengineWorkflowIdError: false,\n    });\n  } else if (e.target.name === 'reRouteMessages') {\n    setState({ ...state, reRouteMessages: e.target.checked });\n  } else if (name === 'sightengineRiskFactorThreshold') {\n    setState({ ...state, sightengineRiskFactorThreshold: value });\n  } else if (e.target.name === 'imageModerationToggle') {\n    setState({ ...state, imageModerationToggle: e.target.value });\n  } else if (name === 'applyToAllChannelIds') {\n    if (e.target.checked) {\n      setState((preValue) => ({\n        ...preValue,\n        applyToAllChannelIds: e.target.checked,\n        channelId: '*',\n      }));\n    } else {\n      setState({ ...state, applyToAllChannelIds: e.target.checked });\n    }\n  }\n};\n","import React from \"react\";\nimport {\n  Grid,\n  Button,\n  Box,\n  Card,\n  Typography,\n  TextField,\n  Select,\n  Checkbox,\n  CircularProgress,\n  FormControl,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../../../style/imageModeration\";\nimport Slider from \"../../core/SliderComponent\";\nimport { LightTooltip } from \"../../../style/tooltip\";\nimport { handleChange } from \"./ImageModerationHandler\";\nimport { constantBoolean } from \"../../../utils/helpers\";\n\nconst TooltipText = (\n  <>\n    <span>Please follow steps listed </span>\n    <a\n      style={{ fontWeight: 600, color: \"black\", textDecorationLine: \"none\" }}\n      href=\"https://sightengine.com/docs/image-moderation-workflows\"\n    >\n      here\n    </a>\n    <span> and input values</span>\n  </>\n);\n\nconst AutomaticImageModeration = ({ state, setState, handleSave }) => {\n  const classes = useStyles();\n  const checkForApplyToAllChannelIds = constantBoolean(state.applyToAllChannelIds);\n  const checkboxForReroute = constantBoolean(state.reRouteMessages);\n\n  if (!state.initialLoading) {\n    return (\n      <>\n        <Card className={classes.card}>\n          <Box>\n            <Grid container>\n              <Grid item>\n                <label testid=\"Channel_ID\" className={classes.labelText}>\n                  Channel ID\n                </label>\n              </Grid>\n              <Grid item>\n                <Box className={classes.infoIcon}>\n                  <LightTooltip title=\"Note: Please add a Channel ID or a Channel pattern. eg. channel.* OR pubNub. Channel ID pattern applies to BOTH text & image moderation if both are enabled.\">\n                    <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                  </LightTooltip>\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Box pt={1} mb={2}>\n              <TextField\n                id=\"channelId\"\n                variant=\"outlined\"\n                name=\"channelId\"\n                error={state.channelIdError}\n                disabled={checkForApplyToAllChannelIds || state.channelIdDisabled}\n                placeholder=\"channel ID\"\n                value={state.channelId}\n                onChange={handleChange({ setState, state })}\n                size=\"small\"\n                fullWidth\n              />\n            </Box>\n          </Box>\n          <Grid item>\n            <Grid container justify=\"flex-start\">\n              <Grid item>\n                <Checkbox\n                  id=\"checkBox\"\n                  checked={checkForApplyToAllChannelIds}\n                  onChange={handleChange({\n                    setState,\n                    state,\n                    name: \"applyToAllChannelIds\",\n                  })}\n                  disabled={state.channelIdDisabled}\n                />\n              </Grid>\n              <Grid item>\n                <Box pt={1} pl={1}>\n                  <Typography testid=\"Apply_All\" variant=\"body1\">\n                    Apply to All Channel IDs\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <br />\n          <Grid container justify=\"flex-start\">\n            <Grid item sm={12}>\n              <label id=\"SelectTool\" className={classes.labelText}>\n                Select third party tool for Automatic Detection\n              </label>\n              <Box pt={1} mb={2}>\n                <FormControl size=\"small\" fullWidth>\n                  <Select\n                    id=\"ImageModerationTool\"\n                    variant=\"outlined\"\n                    value={state.toolForImageModeration}\n                    name=\"toolForImageModeration\"\n                    onChange={handleChange({ setState, state })}\n                    MenuProps={{\n                      anchorOrigin: {\n                        vertical: \"bottom\",\n                        horizontal: \"left\",\n                      },\n                      getContentAnchorEl: null,\n                    }}\n                  >\n                    <MenuItem value=\"sightengine\">SightEngine</MenuItem>\n                  </Select>\n                </FormControl>\n              </Box>\n            </Grid>\n          </Grid>\n          <br />\n          <Box pt={1}>\n            <Grid container>\n              <Grid item>\n                <label testId=\"ApiUser\" className={classes.labelText}>\n                  Sightengine API User\n                </label>\n              </Grid>\n              <Grid item>\n                <Box className={classes.infoIcon}>\n                  <LightTooltip title={TooltipText} interactive>\n                    <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                  </LightTooltip>\n                </Box>\n              </Grid>\n            </Grid>\n            <Box pt={1} mb={2}>\n              <TextField\n                id=\"sightEngineAPIUser\"\n                variant=\"outlined\"\n                name=\"sightengineAPIUser\"\n                error={state.sightengineAPIUserError}\n                helperText={state.sightengineAPIUserError && \"Sightengine API User is required\"}\n                value={state.sightengineAPIUser}\n                onChange={handleChange({ setState, state })}\n                size=\"small\"\n                placeholder=\"Sightengine API User\"\n                fullWidth\n              />\n            </Box>\n          </Box>\n          <br />\n          <Box pt={1}>\n            <Grid container>\n              <Grid item>\n                <label testId=\"Api_Key\" className={classes.labelText}>\n                  Sightengine API Key\n                </label>\n              </Grid>\n              <Grid item>\n                <Box className={classes.infoIcon}>\n                  <LightTooltip title={TooltipText} interactive>\n                    <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                  </LightTooltip>\n                </Box>\n              </Grid>\n            </Grid>\n            <Box pt={1} mb={2}>\n              <TextField\n                id=\"apiKey\"\n                variant=\"outlined\"\n                name=\"sightengineAPIKey\"\n                error={state.sightengineAPIKeyError}\n                helperText={state.sightengineAPIKeyError && \"Sightengine API Key is required\"}\n                value={state.sightengineAPIKey}\n                onChange={handleChange({ setState, state })}\n                size=\"small\"\n                fullWidth\n                placeholder=\"Sightengine API Key\"\n              />\n            </Box>\n          </Box>\n          <br />\n          <Box pt={1}>\n            <Grid container>\n              <Grid item>\n                <label testId=\"workFlowId\" className={classes.labelText}>\n                  Sightengine Workflow ID\n                </label>\n              </Grid>\n              <Grid item>\n                <Box className={classes.infoIcon}>\n                  <LightTooltip title={TooltipText} interactive>\n                    <img src=\"images/info-circle.svg\" alt=\"info-circle\" />\n                  </LightTooltip>\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Box pt={1} mb={2}>\n              <TextField\n                id=\"sightEngineWorkflowId\"\n                name=\"sightengineWorkflowId\"\n                variant=\"outlined\"\n                size=\"small\"\n                error={state.sightengineWorkflowIdError}\n                helperText={\n                  state.sightengineWorkflowIdError && \"Sightengine Workflow ID is required\"\n                }\n                value={state.sightengineWorkflowId}\n                onChange={handleChange({ setState, state })}\n                fullWidth\n                placeholder=\"Sightengine Workflow ID\"\n              />\n            </Box>\n          </Box>\n          <br />\n          <Grid container justify=\"space-between\" spacing={6}>\n            <Grid item sm={6} xs={12} md={6} lg={6}>\n              <Box>\n                <label testId=\"riskFactor\" className={classes.labelText}>\n                  Sightengine Risk Factor\n                </label>\n                <Box pt={1}>\n                  <Slider\n                    id=\"riskFactorSlider\"\n                    value={state.sightengineRiskFactorThreshold}\n                    onChange={handleChange({\n                      setState,\n                      state,\n                      name: \"sightengineRiskFactorThreshold\",\n                    })}\n                  />\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n          <br />\n          <Grid container>\n            <Grid item>\n              <Grid container justify=\"flex-start\">\n                <Grid item>\n                  <Checkbox\n                    id=\"reRouteCheckBox\"\n                    name=\"reRouteMessages\"\n                    checked={checkboxForReroute}\n                    onChange={handleChange({ setState, state })}\n                  />\n                </Grid>\n                <Grid item>\n                  <Box pt={1} pl={1}>\n                    <Typography testid=\"reRouteMsg\" variant=\"body1\">\n                      Route messages to\n                    </Typography>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Box>\n                <Button className={classes.rerouteBtn}>\n                  <img src=\"images/reroute.svg\" className={classes.rerouteIcon} alt=\"reroute\" />\n                  {\"banned.\" + state.channelId}\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <br />\n          <Grid container justify=\"space-between\" spacing={3}>\n            <Grid item></Grid>\n            <Grid item>\n              <Button id=\"cancel\" className={classes.cancel} variant=\"contained\">\n                Cancel\n              </Button>\n              <Button\n                id=\"save\"\n                className={classes.save}\n                disabled={state.saveLoading}\n                onClick={handleSave}\n                variant=\"contained\"\n              >\n                {state.saveLoading ? (\n                  <CircularProgress\n                    size={25}\n                    thickness={4}\n                    color=\"primary\"\n                    className={classes.loader}\n                  />\n                ) : (\n                  <></>\n                )}\n                Save\n              </Button>\n            </Grid>\n          </Grid>\n        </Card>\n      </>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default AutomaticImageModeration;\n","import React, { useState, useEffect } from 'react';\nimport { Typography, Grid, CircularProgress } from '@material-ui/core';\nimport { useStyles } from '../../style/imageModeration.js';\nimport SwitchButton from '../core/SwitchButton';\nimport SnackBar from '../core/SnackBar';\nimport FilterCard from './FilterCard';\nimport AutomaticImageModeration from './automaticModeration/AutomaticImageModeration';\nimport { getCookie } from '../../services/localStorage';\nimport {\n  selectedAppFromLS,\n  constantBoolean,\n  pnFunctionFilterStatus,\n} from '../../utils/helpers';\n\nimport {\n  imageModerationCode,\n  handleImageModerationSave,\n  textModerationCode,\n} from '../../utils/imageModeration';\n\nimport { fetchPubNubFunction } from '../../services/pubnub';\nconst ImageModeration = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    applyToAllChannelIds: true,\n    initialLoading: true,\n    imageModerationToggle: '',\n    channelId: '*',\n    channelIdError: false,\n    sightengineAPIUserError: false,\n    sightengineAPIKeyError: false,\n    sightengineWorkflowIdError: false,\n    channelOnChange: false,\n    toolForImageModeration: 'sightengine',\n    sightengineAPIUser: '',\n    sightengineAPIKey: '',\n    sightengineWorkflowId: '',\n    sightengineRiskFactorThreshold: '',\n    reRouteMessages: '',\n    error: {\n      status: false,\n      msg: '',\n    },\n    successMsg: '',\n    errorMsg: '',\n    successStatus: false,\n    errorStatus: false,\n    saveLoading: false,\n    channelIdDisabled: false,\n  });\n  const checkForToggleSwitch = constantBoolean(state.imageModerationToggle);\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      imageModerationToggle: e.target.checked,\n    });\n  };\n\n  useEffect(() => {\n    const selectedApp = selectedAppFromLS();\n    const headerToken = getCookie('token');\n    (async () => {\n      if (selectedApp) {\n        try {\n          const fetchFunctionsResponse = await fetchPubNubFunction(\n            selectedApp.id,\n            headerToken\n          );\n          const textModeration = textModerationCode(\n            selectedApp,\n            fetchFunctionsResponse\n          );\n\n          const { findImageFunction, eventHandler } = imageModerationCode(\n            selectedApp,\n            fetchFunctionsResponse\n          );\n\n          if (findImageFunction.length && eventHandler.length > 0) {\n            const data = pnFunctionFilterStatus(eventHandler[0].code);\n            const {\n              imageModerationToggle,\n              toolForImageModeration,\n              sightengineAPIUser,\n              sightengineAPIKey,\n              applyToAllChannelIds,\n              sightengineWorkflowId,\n              sightengineRiskFactorThreshold,\n              reRouteMessages,\n            } = data;\n            setState((prevState) => ({\n              imageModerationToggle,\n              initialLoading: false,\n              channelId: eventHandler[0].channels,\n              toolForImageModeration,\n              applyToAllChannelIds,\n              sightengineAPIUser,\n              sightengineAPIKey,\n              sightengineWorkflowId,\n              sightengineRiskFactorThreshold,\n              reRouteMessages,\n              channelIdDisabled: textModeration.textModerationToggle,\n            }));\n          } else {\n            setState({\n              ...state,\n              initialLoading: false,\n              channelIdDisabled: textModeration.textModerationToggle,\n            });\n          }\n          if (\n            textModeration.textModerationToggle &&\n            textModeration.textChannelId &&\n            textModeration.textChannelId !== state.channelId\n          ) {\n            setState((previousState) => ({\n              ...previousState,\n              channelId: textModeration.textChannelId,\n              channelIdDisabled: textModeration.textModerationToggle,\n            }));\n          }\n        } catch (error) {\n          setState((prevState) => ({\n            initialLoading: false,\n          }));\n        }\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (state.channelOnChange) {\n      if (state.channelId.length === 0) {\n        setState((previousValue) => ({\n          ...previousValue,\n          errorStatus: true,\n          saveLoading: false,\n          channelIdError: true,\n          errorMsg: 'Channel name is required',\n          successMsg: '',\n          successStatus: false,\n        }));\n      } else {\n        setState((preValue) => ({\n          ...preValue,\n          errorStatus: false,\n          saveLoading: false,\n          errorMsg: '',\n          successMsg: '',\n          channelIdError: false,\n          successStatus: false,\n        }));\n      }\n    }\n  }, [state.channelId, state.applyToAllChannelIds, state.channelOnChange]);\n  const handleSave = async (e) => {\n    e.preventDefault();\n    if (state.errorStatus) {\n      return;\n    }\n    if (state.channelId.length === 0) {\n      return setState({\n        ...state,\n        errorStatus: true,\n        channelIdError: true,\n        errorMsg: 'Channel Id is required.',\n        successStatus: false,\n        successMsg: '',\n      });\n    }\n    if (!state.sightengineAPIUser.trim().length) {\n      return setState({\n        ...state,\n        sightengineAPIUserError: true,\n      });\n    }\n    if (!state.sightengineAPIKey.trim().length) {\n      return setState({\n        ...state,\n        sightengineAPIKeyError: true,\n      });\n    }\n    if (!state.sightengineWorkflowId.trim().length) {\n      return setState({\n        ...state,\n        sightengineWorkflowIdError: true,\n      });\n    }\n    setState((prevState) => ({\n      ...prevState,\n      saveLoading: true,\n    }));\n    const token = getCookie('token');\n    const app = selectedAppFromLS();\n    if (app) {\n      try {\n        await handleImageModerationSave(app, token, { state, setState });\n      } catch (error) {\n        setState({\n          ...state,\n          errorStatus: true,\n          saveLoading: false,\n          errorMsg: error.message,\n          successMsg: '',\n          successStatus: false,\n        });\n      }\n    }\n  };\n  return (\n    <>\n      {state.successStatus && (\n        <SnackBar status=\"success\" msg={state.successMsg} />\n      )}\n      {state.errorStatus && <SnackBar status=\"error\" msg={state.errorMsg} />}\n      <Typography testid=\"title\" variant=\"h6\" className={classes.title}>\n        Image Moderation\n        <SwitchButton checked={checkForToggleSwitch} onChange={handleChange} />\n      </Typography>\n      <br />\n      <Typography testid=\"subTitle\" className={classes.subTitle}>\n        Profanity detection method\n      </Typography>\n      <FilterCard state={state} />\n      {state.initialLoading && (\n        <Grid container justify=\"center\">\n          <CircularProgress\n            size={65}\n            thickness={4}\n            color=\"primary\"\n            className={classes.loaderLoading}\n          />\n        </Grid>\n      )}\n      <br />\n      <AutomaticImageModeration\n        state={state}\n        handleSave={handleSave}\n        setState={setState}\n      />\n      <br />\n    </>\n  );\n};\nexport default ImageModeration;\n","import React from 'react';\nimport DashboardLayout from '../../layouts/Dashboard';\nimport ImageModeration from '../../components/imageModeration/index';\n\nconst ImageModerationPage = () => {\n\n  return (\n    <>\n      <DashboardLayout>\n        <ImageModeration />\n      </DashboardLayout>\n    </>\n  );\n};\n\nexport default ImageModerationPage;\n","import React from \"react\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport Login from \"../pages/login\";\nimport Private from \"./PrivateRoute\";\nimport Auth from \"./AuthRoute\";\nimport Dashboard from \"../pages/dashboard\";\nimport TextModeration from \"../pages/textModeration\";\nimport Accounts from \"../pages/accounts\";\nimport Channels from \"../pages/channels\";\nimport Overview from \"../pages/overview\";\nimport Users from \"../pages/users\";\nimport Messages from \"../pages/messages\";\nimport ImageModeration from \"../pages/imageModeration\";\n\nconst Routes = () => (\n  <BrowserRouter basename=\"/moderation-dashboard\">\n    <Switch>\n      <Auth path=\"/\" exact component={Login} />\n      <Private path=\"/accounts\" exact component={Accounts} />\n      <Private path=\"/dashboard\" exact component={Dashboard} />\n      <Private path=\"/text-moderation\" exact component={TextModeration} />\n      <Private path=\"/channels\" exact component={Channels} />\n      <Private path=\"/overview\" exact component={Overview} />\n      <Private path=\"/users\" exact component={Users} />\n      <Private path=\"/channels/messages\" exact component={Messages} />\n      <Private path=\"/image-moderation\" exact component={ImageModeration} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { create } from 'jss';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\n\nimport Routes from './routes/Routes';\nconst jss = create({\n  ...jssPreset(),\n  insertionPoint: document.getElementById('jss-insertion-point'),\n});\n\nconst App = () => {\n  return (\n    <>\n      <StylesProvider jss={jss}>\n        <Routes />\n      </StylesProvider>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './style/global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}