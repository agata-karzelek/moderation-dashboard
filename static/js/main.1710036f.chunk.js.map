{"version":3,"sources":["layouts/Auth.js","style/loginForm.js","utils/axios.js","services/auth.js","services/localStorage.js","services/pubnub.js","components/login/LoginForm.js","pages/login/index.js","routes/PrivateRoute.js","routes/AuthRoute.js","style/myAccountDropdown.js","style/accountCard.js","utils/helpers.js","components/accounts/AccountCard.js","components/accounts/AccountList.js","components/core/header/MyAccountDropdown.js","style/header.js","components/core/header/Breadcrumb.js","components/core/header/Header.js","style/listingTable.js","style/tooltip.js","components/tables/TableIcons.js","components/tables/ListingPagination.js","components/tables/Markers.js","components/tables/ListingTable.js","components/applications/ApplicationTable.js","style/textModeration.js","components/core/Search.js","components/core/SnackBar.js","components/applications/AppsListing.js","pages/dashboard/index.js","style/sidebar.js","components/core/Sidebar.js","layouts/Dashboard.js","components/textModeration/wordListModeration/WordListHandler.js","components/textModeration/wordListModeration/WordListProfanityMethod.js","style/automaticProfanityMethod.js","style/slideBar.js","components/core/SliderComponent.js","components/textModeration/automaticModeration/AutomaticHandler.js","components/textModeration/automaticModeration/TisaneHandler.js","components/textModeration/automaticModeration/AutomaticProfanityMethod.js","components/textModeration/ModerationMethods.js","style/switchButton.js","components/core/SwitchButton.js","components/textModeration/FilterCard.js","utils/wordlist/index.js","utils/automaticTextModeration/index.js","utils/automaticTextModeration/filterConditionForAutomatic.js","utils/profanityFunction.js","utils/profanityFunctionForImage.js","components/imageModeration/CreateEventHandler.js","components/imageModeration/UpdateEventHandler.js","utils/imageModeration/index.js","components/textModeration/index.js","pages/textModeration/index.js","pages/accounts/index.js","style/confirmDialog.js","components/core/ConfirmDialog.js","style/createModerationModal.js","components/channels/AddChannelForm.js","components/channels/AddChannelMetadataModal.js","components/channels/UpdateChannelMetadataModal.js","components/channels/ChannelsTable.js","components/channels/JoinChannelModal.js","utils/usePubNub.js","components/channels/ChannelsListing.js","pages/channels/index.js","style/overview.js","components/overview/overviewGrid.js","pages/overview/index.js","components/users/AddUserForm.js","components/users/AddUserMetadataModal.js","components/users/UpdateUserMetadataModal.js","components/users/FlagUser.js","components/users/BanUser.js","components/users/UsersTable.js","style/drawer.js","components/users/FilterUsers.js","components/users/UsersListing.js","pages/users/index.js","style/messages.js","style/badge.js","components/users/UserAction.js","components/messages/MembersLoader.js","components/messages/Members.js","style/memberDetail.js","components/messages/MemberDetail.js","components/messages/UndoDelete.js","components/messages/EditMessage.js","components/messages/MessageContent.js","components/messages/Chat.js","components/messages/MessagesCount.js","components/messages/ToggleChat.js","components/messages/Messages.js","pages/messages/index.js","style/imageModeration.js","components/imageModeration/FilterCard.js","components/imageModeration/automaticModeration/ImageModerationHandler.js","components/imageModeration/automaticModeration/AutomaticImageModeration.js","components/imageModeration/index.js","pages/imageModeration/index.js","routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Auth","children","CssBaseline","useStyles","makeStyles","form","padding","margin","background","borderRadius","opacity","loginTextField","textfieldIcon","fontSize","maskPasswordIcon","cursor","root","display","backgroundImage","backgroundRepeat","backgroundSize","position","top","left","height","width","middle","verticalAlign","inner","marginLeft","marginRight","logSubtitle","font","textAlign","letterSpacing","color","button","fontWeight","textTransform","disabledButton","backgroundColor","logIconContainer","floatIcon","loader","axios","create","baseURL","validateStatus","status","signIn","credentials","a","post","signInResponse","data","Error","error","getCookie","key","cookie","get","setLocalStorage","value","localStorage","setItem","JSON","stringify","authenticate","next","token","set","expires","user","isAuth","getItem","parse","fetchAllAccounts","id","headers","accountsResponse","fetchAllApps","appsResponse","getChannels","pubnub","nextPage","prevPage","objects","getAllChannelMetadata","include","totalCount","limit","page","prev","sort","updated","channelsResponse","getUsers","filterBy","getAllUUIDMetadata","customFields","filter","usersResponse","addChannelMetadata","channelName","channelDescription","channel","setChannelMetadata","name","description","addChannelMetadataResponse","addUserMetadata","userName","email","uuid","profileUrl","setUUIDMetadata","addUserMetadataResponse","message","deleteChannelMetadata","removeChannelMetadata","deleteChannelMetadataResponse","deleteUserMetadata","removeUUIDMetadata","deleteUserMetadataResponse","editUserMetadata","editChannelMetadata","channelID","fetchMessages","channels","includeMeta","includeMessageActions","count","msgResponse","fetchPubNubFunction","keyId","fetchHandlerCode","functionResponse","payload","block","blockId","blockResponse","event_handlers","find","p","createPubNubFunction","code","beautify","indent_size","space_in_empty_paren","key_id","response","startPubNubFunction","block_id","stopPubNubFunction","createPubNubEventHandler","updatePubNubEventHandler","put","text","getUserByName","getChannelByName","getChannelMembers","UUIDFields","customUUIDFields","channelMembersResponse","getOnlineMembers","hereNow","fetchChannelMetadata","getChannelMetadata","getMessagesCount","midnightTimeToken","messageCounts","channelTimetokens","getChannelsOccupancy","channelsArray","includeUUIDs","includeState","checkChannelExistence","checkUserIDExistence","userID","softDeleteMessage","messageTimetoken","addMessageAction","action","type","deleteMessageAction","actionTimetoken","removeMessageAction","addEditMessageAction","setUserMetadata","metadata","custom","userResponse","LoginForm","classes","history","useHistory","Pubnub","generateUUID","useState","success","msg","loading","alert","setAlert","password","setCredentials","passwordIsMasked","setPasswordIsMasked","handleChange","e","target","handleSubmit","preventDefault","authSignInResponse","result","accountsResult","accounts","apps","push","togglePasswordMask","className","Grid","container","justify","item","xs","sm","md","logIcon","src","process","alt","Typography","align","onSubmit","spacing","alertCard","Alert","severity","TextField","variant","fullWidth","autoComplete","InputProps","startAdornment","InputAdornment","PersonOutlineOutlined","placeholder","required","onChange","autoFocus","endAdornment","RemoveRedEye","onClick","RemoveRedEyeOutlined","HttpsOutlined","Button","disabled","startIcon","CircularProgress","size","Login","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","AuthRoute","avatar","paperRoot","minWidth","zIndex","logoutIcon","cardRoot","checkIcon","avatarText","capitalizeFirstCharacter","split","map","word","toUpperCase","substring","join","selectedAccountsFromLS","appsFromLS","selectedAppFromLS","applicationsWithKeyFromLS","avatarStyle","index","account","capitalizeNameInitials","words","initials","length","formatDate","date","moment","Date","format","showError","errorData","filterFunction","filterEventHandler","filterImageFunction","pnFunctionFilterStatus","str","Function","getProfanityWordsByLanguage","profanityList","language","formatTimeToken","timeToken","unix","capitalizeFirstLetter","string","charAt","slice","formatProfileImageUrl","url","formatUserName","selectedChannelFromLS","combineLanguageWords","wordList","combinedWords","Object","values","reduce","c","groupLanguageWords","replace","constantBoolean","variable","getModeratedMessageTooltip","checkMuteStatus","member","mutedChannels","includes","checkBlockStatus","blockedChannels","getMessageFileUrl","messageObject","channelMessage","file","getFileUrl","formatBannedMessage","image","reason","imageReason","originalMessage","moderatedMessage","getMessageText","actions","keys","AccountCard","handleClick","MenuItem","testid","Avatar","style","noWrap","AccountList","selectedAccount","AccountListing","i","MyAccountDropdown","open","setOpen","prevOpen","useRef","anchorRef","handleClose","event","current","contains","handleListKeyDown","useEffect","focus","ref","undefined","endIcon","KeyboardArrowDownOutlined","prevOpenState","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","Box","pl","pr","Divider","clear","grow","flexGrow","boxShadow","headerMenu","verticalLine","borderLeft","Breadcrumb","keySet","Breadcrumbs","separator","NavigateNext","Link","RouterLink","currentPage","Header","setAccounts","AppBar","Toolbar","IconButton","edge","menuButton","tableRow","visibility","tableRowClickable","tablehead","borderBottom","headLabel","keyName","appName","icons","tableConatiner","scrollbarWidth","overflow","overflowX","table","borderCollapse","borderSpacing","alertMessage","tableCellIcon","whiteSpace","tablePagination","LightTooltip","withStyles","theme","tooltip","palette","common","white","shadows","Tooltip","TableIcons","row","isflagged","flag","isBanned","ban","isUser","title","unFlagUser","flagUser","banUser","unbanUser","label","viewRow","onMouseOver","setOver","onMouseOut","editRow","deleteRow","ListingPagination","tableCount","rowsPerPage","tableData","TablePagination","rowsPerPageOptions","onChangePage","handleChangePage","labelDisplayedRows","backIconButtonProps","nextIconButtonProps","Markers","flaggedBy","flaggedAt","compare","b","getComparator","order","orderBy","stableSort","array","comparator","stabilizedThis","el","ListingTable","headCells","React","setOrder","setOrderBy","setPage","over","number","tableSlice","sliceTableArray","EnhancedTableHead","prop","headOrder","headOrderBy","onRequestSort","TableHead","TableRow","headCell","TableCell","alignment","disablePadding","sortDirection","TableSortLabel","active","direction","property","newPage","getNewPage","TableContainer","tableContainer","Table","rowCount","TableBody","hover","handleRowClick","tabIndex","headcell","n","tableCell","mr","ml","pt","ApplicationTable","searchResult","applications","setApplications","appsList","keysList","keyWithAppName","app","appIndex","keyIndex","created","modified","properties","selectedApp","subscribe_key","search","shape","border","breakpoints","up","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transitions","searchInput","labelStyle","methodNotSelected","methodSelected","profanityCardRoot","cancelButton","saveButton","addButton","addButtonContainer","marginTop","defaultText","textDecoration","reroute","subTitle","paddingBottom","infoIcon","Search","searched","onRequestSearch","searchVal","requestSearch","cancelSearch","onCancelSearch","SnackBar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","AppsListing","setSearchResult","setSearched","appsAlert","setAppsAlert","requestKeySearch","searchedVal","filteredRows","publish_key","toLowerCase","Fragment","Helmet","lg","pb","testId","Dashboard","textModerationIcon","overviewIcon","channelIcon","settingsIcon","chatIcon","userIcon","drawer","flexShrink","listItemRoot","content","Sidebar","toolbar","List","ListItem","selected","ListItemIcon","HomeOutlined","ListItemText","SettingsOutlined","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","settingsItemRoot","DescriptionOutlined","ChatBubbleOutline","PersonOutlined","MailOutline","setState","setProfanityList","channelOnChange","wordListChannel","wordListLanguage","wordListModType","wordListCharacterToMaskWith","wordListReRouteMessages","checked","applyToAllChannelIdsWordlist","WordListProfanityMethod","handleSave","defaultWords","wordsListPatternError","wordsListMaskCharError","wordsListChannelError","checkboxForReroute","checkForApplyToAllChannelIds","Card","mb","Checkbox","FormControl","formControl","Select","MenuProps","getContentAnchorEl","inputProps","languageWords","multiline","rowsMax","maxLength","Chip","saveLoading","thickness","filterText","cancelButtonStyle","saveButtonStyle","testText","loaderStyle","SlideBar","thumb","valueLabel","track","rail","PrettoSlider","Slider","SliderComponent","marks","min","getAriaValueText","step","max","automaticDetection","toolForAutomaticDetection","automaticDetectionChannel","automaticDetectionReRouteMessages","automaticDetectionModType","siftNinjaRiskFactorThresholdVulgar","siftNinjaRiskFactorThresholdSexting","siftNinjaRiskFactorThresholdRacism","siftNinjaAccountName","siftNinjaChannelName","siftNinjaApiKey","automaticDetectionCharacterToMaskWith","applyToAllChannelIdsAutomatic","handleTisaneChange","tisaneApiKey","tisaneLanguage","tisaneRiskFactorThresholdBigotry","tisaneRiskFactorThresholdCyberBullying","tisaneRiskFactorThresholdCriminalActivity","tisaneRiskFactorThresholdSexualAdvances","tisaneRiskFactorThresholdProfanity","AutomaticProfanityMethod","automaticMaskCharError","automaticChannelError","TooltipText","textDecorationLine","href","interactive","ModerationMethods","wordListProfanity","automaticProfanity","SwitchButton","switchBase","transform","grey","focusVisible","Switch","focusVisibleClassName","disableRipple","FilterCard","regexForBanned","FilterConditionForWordList","textPnFnStatusdata","englishProfanity","hindiProfanity","frenchProfanity","spanishProfanity","portugeseProfanity","checkForWordListMaskWord","checkForWordListBlockMessage","checkForWordListReRouteMessages","English","Hindi","Portugese","French","Spanish","swearWords","regex","wordListMaskWordsAndReroute","wordListMaskWords","wordListBlockMessageAndReroute","wordListBlockMessage","getSelectedDetectionTool","selectedLanguage","getSelectedLanguage","Autodetect","FilterConditionForAutomatic","selectedDetectionTool","checkForAutomaticMaskMessage","checkForAutomaticBlockMessage","checkForAutomaticReRouteMessages","automaticMaskMessageAndReroute","automaticMaskMessage","automaticBlockMessageAndReroute","automaticBlockMessage","profanityFunction","textModerationToggle","english","hindi","spanish","french","portugese","checkForWordListProfanity","checkForAutomaticProfanity","profanityFunctionForImage","imageModerationToggle","toolForImageModeration","sightengineAPIUser","sightengineAPIKey","sightengineWorkflowId","sightengineRiskFactorThreshold","reRouteMessages","applyToAllChannelIds","checkForTextModeration","imageTypeFunction","imageFunction","textModerationPromise","imageModeration","filterConditions","channelId","config","log_level","output","prevState","previousStateValue","errorStatus","errorMsg","successMsg","successStatus","CreateEventHandler","eventHandler","uiPagecall","updatedConfig","previousState","previous","previousValue","UpdateEventHandler","textModerationCode","fetchFunctionsResponse","eventHandlerList","findTextModerationFunction","textChannelId","handleEventHandler","handleImageModerationSave","imageModerationCode","findImageFunction","isState","fetchFunctions","blockIdForImage","filterImageEventHandler","TextModeration","initialLoading","checkForTextModerationToogle","badWordsByLanguage","wordListValidationResult","test","trim","beforeState","before","prevStateValue","prevValue","preValue","headerToken","eventHandlers","path","fetch","then","r","TextModerationPage","Account","confirmButton","confirmDialog","ConfirmDialog","onConfirm","Dialog","maxWidth","DialogTitle","DialogContent","DialogActions","actionMessage","down","closeButton","right","joinChannelButton","buttonText","inputBox","modalLayout","uploadIcon","bottom","subHeadingFont","lineHeight","headingFont","addChannelButton","addChannelButtonFont","AddChannelForm","formik","touched","Boolean","errors","helperText","rows","channelAlert","buttonTitle","channelValidationSchema","yup","strict","matches","characters","checkValidChannelName","AddChannelMetadataModal","pubnubObject","isAdded","addChannelAlert","setAddChannelAlert","resetForm","useFormik","initialValues","validationSchema","addNewChannelMetadata","channelResponse","disableTypography","UpdateChannelMetadataModal","channelUpdated","setName","setDescription","setChannelID","updateChannelAlert","setUpdateChannelAlert","enableReinitialize","updateChannelMetadata","ChannelsTable","setSearchableData","deleteChannel","setChannels","setMessage","setLoading","confirmOpen","setConfirmOpen","modalOpen","setModalOpen","channelData","setChannelData","updatedChannel","setUpdatedChannel","settableCount","nextpage","setNextPage","previousPage","setpreviousPage","pageNumber","setPageNumber","fetchChannels","applicationChannels","channelsList","channelsIDs","selectedChannel","channelsOccupancy","forEach","channelIndex","occupancy","iconsClick","rowId","updatedChannelData","JoinChannelModal","setChannelName","setError","usePubNub","PubNub","subscribeKey","secretKey","secret_key","publishKey","_config","_addPnsdkSuffix","version","ChannelsListing","updatedData","setupdatedData","setChannelAlert","updatedChannelsData","channelsData","Channels","gridOne","gridTwo","headings","OverviewGrid","application","setApplication","secretKeyIsMasked","setSecretKeyIsMasked","repeat","Overview","AddUserForm","user_id","profile_url","userAlert","userValidationSchema","AddUserMetadataModal","addUserAlert","setAddUserAlert","addNewUserMetadata","userData","UpdateUserMetadataModal","isUpdated","setUserName","setEmail","UUID","setUUID","setProfileUrl","updateUserAlert","setUpdateUserAlert","updateUserMetadata","FlagUser","setuserID","flagAlert","setFlagAlert","selectedAcount","updatedAt","customMetaData","BanUser","banAlert","setBanAlert","UsersTable","deleteUser","users","setUsers","setUserData","setUpdatedData","setNextpage","flagConfirmOpen","setFlagConfirmOpen","setAction","banModalOpen","setBanModalOpen","fetchUsers","applicationUsers","usersList","selectedUser","x","list","listText","userType","FilterUsers","isBanChecked","setIsBanChecked","isFlagChecked","setIsFlagChecked","isFiltered","Drawer","anchor","UsersListing","dataAdded","setDataAdded","setFilterBy","setUserAlert","usersData","Users","header","messages","chat","marginBottom","timeField","channelMember","chatText","wordBreak","members","channelMembers","maxHeight","userProfile","totalUsers","onlineUsers","messagesCount","messagesCountFont","deletedChat","messageContainer","activeToggled","disableToggled","messageBox","borderRight","editMessageHeader","editMessageFont","objectFit","imageIcon","imageContainer","OnlineBadge","badge","paper","Badge","OfflineBadge","UserAction","muteAlert","setMuteAlert","handleMuteClick","getMutedChannels","getBlockedChannels","MembersLoader","membersLength","onEnter","fetchChannelsMembersOnScroll","Members","setMembers","setOnlineUsers","setSelectedUser","fetchOnlineMembers","onlineMembersResponse","onlineMember","j","onlineUsersArray","userObj","actionsDisable","toolTipTitle","setOnlineUsersArray","Set","detail","selectedMemberDetail","mute","userDetail","filteredArray","filteredMember","memberIndex","findIndex","splice","oldArray","sectionHeading","profilePicture","labelItem","containerRoot","closeIcon","blockIcon","online","MemberDetail","toggleMemberDetails","dialogOpen","setDialogOpen","setMute","setBlock","UndoDelete","timetoken","actionToken","EditMessage","setText","setDisabled","displayBox","setDisplayBox","setActionToken","setAlertMessage","messagesLength","MessageContent","confirmDelete","updateMessage","confirmUndo","toggledVal","deleted","Chat","selectedMessage","setSelectedMessage","setMessages","undoConfirmOpen","setUndoConfirmOpen","setMessageToEdit","messagesEndRef","setTimeout","scrollIntoView","isLoading","time","messageToEdit","MessagesCount","setCount","setHours","ToggleChat","setToggledVal","Messages","firstUpdate","useLocation","setChannel","memberDetails","setMemberDetails","setToggleMemberDetails","setTotalCount","fetchChannelMembers","fetchChannelMessages","channelMessages","messagesList","messagesSet","senderUuid","filterMember","handleMessage","publisher","pubnubListener","leaveChannel","removeListener","unsubscribeAll","addListener","subscribe","mt","messageToken","updatedResponse","filteredMessage","messageIndex","details","toggleValue","labelText","card","cancel","save","loaderLoading","sightengineAPIUserError","sightengineAPIKeyError","sightengineWorkflowIdError","AutomaticImageModeration","channelIdError","channelIdDisabled","ImageModeration","checkForToggleSwitch","textModeration","ImageModerationPage","Routes","basename","exact","Accounts","jss","jssPreset","insertionPoint","document","getElementById","App","StylesProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.1710036f.chunk.js","sourcesContent":["import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nconst Auth = ({ children }) => {\n  return (\n    <>\n      <CssBaseline />\n      {children}\n    </>\n  );\n};\n\nexport default Auth;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  form: {\n    padding: \"35px 5px 70px 5px\",\n    margin: \"5px\",\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    borderRadius: \"8px\",\n    opacity: 1,\n  },\n  loginTextField: {\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: \"8px\",\n      background: \"white\",\n      // border: \"0.8326995968818665px solid #E6E6E6\"\n    },\n    \"& .MuiOutlinedInput-adornedEnd\": {\n      background: \"white\",\n    },\n    \"& .MuiOutlinedInput-adornedStart\": {\n      background: \"white\",\n    },\n    opacity: 1,\n  },\n  textfieldIcon: {\n    opacity: 0.2,\n    fontSize: \"21px\",\n  },\n  maskPasswordIcon: {\n    cursor: \"pointer\",\n    opacity: 0.3,\n    fontSize: \"21px\",\n  },\n  root: {\n    display: \"table\",\n    backgroundImage: \"url(images/Bg.svg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"auto\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    height: \"100%\",\n    width: \"100%\",\n  },\n  middle: {\n    display: \"table-cell\",\n    verticalAlign: \"middle\",\n  },\n  inner: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"100%\",\n  },\n  logSubtitle: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13.32px/16px var(--unnamed-font-family-proxima-nova)\",\n    // letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"center\",\n    letterSpacing: \"0px\",\n    color: \"#414141\",\n    opacity: 0.6,\n  },\n  button: {\n    background: \"#6387ED 0% 0% no-repeat padding-box\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    width: \"100%\",\n    fontWeight: \"500\",\n    height: \"49px\",\n    textTransform: \"none\",\n    color: \"white\",\n    \"&:hover\": {\n      fontWeight: \"500\",\n      background: \"#6387ED 0% 0% no-repeat padding-box\",\n      color: \"white\",\n    },\n  },\n  disabledButton: {\n    color: \"white!important\",\n    backgroundColor: \"#9eb4f3\",\n  },\n  logIconContainer: {\n    textAlign: \"center\",\n    margin: \"0px 0px 10px 0px\",\n  },\n  floatIcon: {\n    backgroundColor: \"#ecebeb\",\n    borderRadius: \"0x 0px 0px 0px\",\n    padding: \"0px 0px 0px 0px\",\n  },\n  loader: {\n    color: \"white\",\n  },\n});\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://admin.pubnub.com/api\",\n  validateStatus: (status) => status < 500,\n});\n","import axios from \"../utils/axios\";\n\nexport async function signIn(credentials) {\n  const signInResponse = await axios.post(\"/me\", credentials);\n  if (signInResponse.status === 200) {\n    return signInResponse.data;\n  }\n  throw new Error(signInResponse.data.error || \"Something went wrong\");\n}\n","import cookie from \"js-cookie\";\n\nexport const setCookie = (key, value) => {\n  cookie.set(key, value, {\n    expires: 1,\n  });\n};\n\nexport const removeCookie = (key) => {\n  cookie.remove(key, {\n    expires: 1,\n  });\n};\n\nexport const getCookie = (key) => {\n  return cookie.get(key);\n};\n\nexport const setLocalStorage = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport const removeLocalStorage = (key) => {\n  localStorage.removeItem(key);\n};\n\nexport const authenticate = (data, next) => {\n  setCookie(\"token\", data.token);\n  setLocalStorage(\"user\", data.user);\n  next();\n};\n\nexport const signout = (next) => {\n  localStorage.clear();\n  next();\n};\n\nexport const isAuth = () => {\n  const cookieChecked = getCookie(\"token\");\n  if (cookieChecked) {\n    if (localStorage.getItem(\"user\")) {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    } else {\n      return false;\n    }\n  }\n};\n","import axios from \"../utils/axios\";\nimport beautify from \"js-beautify\";\n\n// To fetch all the PubNub accounts\nexport async function fetchAllAccounts(id, token) {\n  const accountsResponse = await axios.get(`/accounts?user_id=${id}`, {\n    headers: {\n      \"X-Session-Token\": `${token}`,\n    },\n  });\n  if (accountsResponse.status === 200) {\n    return accountsResponse.data;\n  }\n  throw new Error(\"Failed to fetch accounts\");\n}\n\n// To fetch all the Applications of an PubNub account.\nexport async function fetchAllApps(id, token) {\n  const appsResponse = await axios.get(`/apps?owner_id=${id}`, {\n    headers: {\n      \"X-Session-Token\": `${token}`,\n    },\n  });\n  if (appsResponse.status === 200) {\n    return appsResponse.data;\n  }\n  throw new Error(\"Failed to fetch applications\");\n}\n\n// To fetch all Channels of a PubNub application.\nexport async function getChannels(pubnub, nextPage, prevPage) {\n  const channelsResponse = await pubnub.objects.getAllChannelMetadata({\n    include: {\n      totalCount: true,\n    },\n    limit: 25,\n    page: {\n      next: nextPage,\n      prev: prevPage,\n    },\n    sort: { updated: \"desc\" },\n  });\n  if (channelsResponse.status === 200) {\n    return channelsResponse;\n  }\n  throw new Error(\"Failed to get PubNub channels\");\n}\n\n// To fetch all users of a PubNub application.\nexport async function getUsers(pubnub, nextPage, prevPage, filterBy) {\n  const usersResponse = await pubnub.objects.getAllUUIDMetadata({\n    include: {\n      totalCount: true,\n      customFields: true,\n    },\n    limit: 25,\n    page: {\n      next: nextPage,\n      prev: prevPage,\n    },\n    sort: { updated: \"desc\" },\n    filter: filterBy,\n  });\n  if (usersResponse.status === 200) {\n    return usersResponse;\n  }\n  throw new Error(\"Failed to get PubNub users\");\n}\n\n// To add channel metadata to a application keyset\nexport async function addChannelMetadata(pubnub, channelName, channelDescription, channel) {\n  const addChannelMetadataResponse = await pubnub.objects.setChannelMetadata({\n    channel,\n    data: {\n      name: channelName,\n      description: channelDescription,\n    },\n  });\n  if (addChannelMetadataResponse.status === 200) {\n    return addChannelMetadataResponse;\n  }\n  throw new Error(\"Failed to add channel metadata\");\n}\n\n// To add user metadata to a application keyset\nexport async function addUserMetadata(pubnub, userName, email, uuid, profileUrl) {\n  if (!email) email = null;\n  if (!profileUrl) profileUrl = null;\n  const addUserMetadataResponse = await pubnub.objects.setUUIDMetadata({\n    uuid,\n    data: {\n      name: userName,\n      email,\n      profileUrl,\n    },\n  });\n  if (addUserMetadataResponse.status === 200) {\n    return addUserMetadataResponse;\n  }\n  throw new Error(addUserMetadataResponse.message);\n}\n\n// To delete channel metadata\nexport async function deleteChannelMetadata(pubnub, channel) {\n  const deleteChannelMetadataResponse = await pubnub.objects.removeChannelMetadata({\n    channel: channel,\n  });\n  if (deleteChannelMetadataResponse.status === 200) {\n    return deleteChannelMetadataResponse;\n  }\n  throw new Error(\"Failed to add user metadata\");\n}\n\n// To delete user metadata\nexport async function deleteUserMetadata(pubnub, uuid) {\n  const deleteUserMetadataResponse = await pubnub.objects.removeUUIDMetadata({\n    uuid: uuid,\n  });\n  if (deleteUserMetadataResponse.status === 200) {\n    return deleteUserMetadataResponse;\n  }\n  throw new Error(\"Failed to add user metadata\");\n}\n\n// To edit user metadata\nexport async function editUserMetadata(pubnub, userName, email, uuid, profileUrl) {\n  if (!email) email = null;\n  if (!profileUrl) profileUrl = null;\n  const addUserMetadataResponse = await pubnub.objects.setUUIDMetadata({\n    uuid,\n    data: {\n      name: userName,\n      email,\n      profileUrl,\n    },\n  });\n  if (addUserMetadataResponse.status === 200) {\n    return addUserMetadataResponse;\n  }\n  throw new Error(\"Failed to edit user metadata\");\n}\n\n// To edit channel metadata\nexport async function editChannelMetadata(pubnub, channelName, channelDescription, channelID) {\n  const addChannelMetadataResponse = await pubnub.objects.setChannelMetadata({\n    channel: channelID,\n    data: {\n      name: channelName,\n      description: channelDescription,\n    },\n  });\n  if (addChannelMetadataResponse.status === 200) {\n    return addChannelMetadataResponse;\n  }\n  throw new Error(\"Failed to add channel metadata\");\n}\n\n//To fetch Messages\nexport async function fetchMessages(pubnub, channelName) {\n  const msgResponse = await pubnub.fetchMessages({\n    channels: [channelName],\n    includeMeta: true,\n    includeMessageActions: true,\n    count: 100,\n  });\n  if (msgResponse) {\n    return msgResponse.channels[channelName];\n  }\n  throw new Error(\"Failed to get messages\");\n}\n\n// --------- PubNub function -----------\n// To fetch all the PubNub functions of an Application.\nexport async function fetchPubNubFunction(keyId, token, fetchHandlerCode = false) {\n  const functionResponse = await axios.get(`/v1/blocks/key/${keyId}/block`, {\n    headers: {\n      \"X-Session-Token\": `${token}`,\n    },\n  });\n  if (functionResponse.status === 200) {\n    const data = functionResponse.data;\n\n    if (fetchHandlerCode) {\n      // PubNub Portal API no longer returns event handler's code, until you ask for a specific block\n      for (let block of data.payload) {\n        const blockId = block.id;\n        const blockResponse = await axios.get(`/v1/blocks/key/${keyId}/block/${blockId}`, {\n          headers: {\n            \"X-Session-Token\": `${token}`,\n          },\n        });\n        block.event_handlers = blockResponse.data.payload.find(\n          (p) => p.id === blockId\n        ).event_handlers;\n      }\n    }\n\n    return data;\n  }\n  throw new Error(\"Failed to fetch PubNub functions\");\n}\n\n// Start a PubNub function.\nexport async function createPubNubFunction(credentials, token) {\n  if (typeof credentials.code == \"string\") {\n    // Clean up indentation of function logic before sending to PubNub\n    credentials.code = beautify(credentials.code, {\n      indent_size: 4,\n      space_in_empty_paren: true,\n    });\n  }\n\n  const response = await axios.post(`/v1/blocks/key/${credentials.key_id}/block`, credentials, {\n    headers: {\n      \"X-Session-Token\": `${token}`,\n    },\n  });\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error(response.data.message || \"Something went wrong. Please try later\");\n}\n\n// // Start a PubNub function.\nexport async function startPubNubFunction(credentials, token) {\n  const response = await axios.post(\n    `v1/blocks/key/${credentials.key_id}/block/${credentials.block_id}/start`,\n    credentials,\n    {\n      headers: {\n        \"X-Session-Token\": `${token}`,\n      },\n    }\n  );\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error(response.data.error);\n}\n\n// //Stop a PubNub function\nexport async function stopPubNubFunction(credentials, token) {\n  const response = await axios.post(\n    `v1/blocks/key/${credentials.key_id}/block/${credentials.block_id}/stop`,\n    credentials,\n    {\n      headers: {\n        \"X-Session-Token\": `${token}`,\n      },\n    }\n  );\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error(response.data.error);\n}\n\n// Create a event handler\nexport async function createPubNubEventHandler(credentials, token) {\n  if (typeof credentials.code == \"string\") {\n    // Clean up indentation of function logic before sending to PubNub\n    credentials.code = beautify(credentials.code, {\n      indent_size: 4,\n      space_in_empty_paren: true,\n    });\n  }\n\n  const response = await axios.post(\n    `v1/blocks/key/${credentials.key_id}/event_handler`,\n    credentials,\n    {\n      headers: {\n        \"X-Session-Token\": `${token}`,\n      },\n    }\n  );\n  if (response.status === 200) {\n    return response.data;\n  }\n  if (response.data.message) {\n    throw new Error(response.data.message);\n  } else {\n    throw new Error(`PubNub create function request failed with code: ${response.status}`);\n  }\n}\n\nexport async function updatePubNubEventHandler(credentials, token) {\n  if (typeof credentials.code == \"string\") {\n    // Clean up indentation of function logic before sending to PubNub\n    credentials.code = beautify(credentials.code, {\n      indent_size: 4,\n      space_in_empty_paren: true,\n    });\n  }\n\n  const response = await axios.put(\n    `/v1/blocks/key/${credentials.key_id}/event_handler/${credentials.id}`,\n    credentials,\n    {\n      headers: {\n        \"X-Session-Token\": `${token}`,\n      },\n    }\n  );\n  if (response.status === 200) {\n    return response.data;\n  }\n  if (typeof response.data.message == \"string\") {\n    throw new Error(response.data.message);\n  } else if (typeof response.data.message.text == \"string\") {\n    throw new Error(response.data.message.text);\n  } else {\n    throw new Error(`PubNub update function request failed with code: ${response.status}`);\n  }\n}\n\n//To fetch user By name\nexport async function getUserByName(pubnub, userName) {\n  const usersResponse = await pubnub.objects.getAllUUIDMetadata({\n    filter: `name LIKE '*${userName}*'`,\n  });\n  if (usersResponse.status === 200) {\n    return usersResponse.data;\n  }\n  throw new Error(\"Failed to get PubNub users\");\n}\n\n//To fetch channel By name\nexport async function getChannelByName(pubnub, channelName) {\n  const usersResponse = await pubnub.objects.getAllChannelMetadata({\n    filter: `name LIKE '*${channelName}*'`,\n  });\n  if (usersResponse.status === 200) {\n    return usersResponse.data;\n  }\n  throw new Error(\"Failed to get PubNub users\");\n}\n\n//To fetch channel Members\nexport async function getChannelMembers(pubnub, channelName, nextPage) {\n  const channelMembersResponse = await pubnub.objects.getChannelMembers({\n    channel: channelName,\n    include: {\n      UUIDFields: true,\n      customUUIDFields: true,\n      totalCount: true,\n    },\n    limit: 100,\n    page: {\n      next: nextPage,\n    },\n  });\n  if (channelMembersResponse.status === 200) {\n    return channelMembersResponse;\n  }\n  throw new Error(\"Failed to get PubNub channel memebers\");\n}\n\n//To fetch online channel Members\nexport async function getOnlineMembers(pubnub, channelName) {\n  const response = await pubnub.hereNow({\n    channels: [channelName],\n  });\n  if (response) {\n    return response.channels[channelName][\"occupants\"];\n  }\n  throw new Error(\"Failed to get PubNub online members\");\n}\n\n// To fetch a channel detail\nexport async function fetchChannelMetadata(pubnub, channelName) {\n  const channelsResponse = await pubnub.objects.getChannelMetadata({\n    channel: channelName,\n  });\n  if (channelsResponse.status === 200) {\n    return channelsResponse.data;\n  }\n  throw new Error(\"Failed to get PubNub channel\");\n}\n\n//To fetch Total messages count of today\nexport async function getMessagesCount(pubnub, channelName, midnightTimeToken) {\n  const response = await pubnub.messageCounts({\n    channels: [channelName],\n    channelTimetokens: [midnightTimeToken],\n  });\n  if (response) {\n    return response.channels && response.channels[channelName];\n  }\n  throw new Error(\"Failed to get total messages Count\");\n}\n\n// To get number of online users in a channel\nexport async function getChannelsOccupancy(pubnub, channelsArray) {\n  const response = await pubnub.hereNow({\n    channels: channelsArray,\n    includeUUIDs: false,\n    includeState: false,\n  });\n  if (response) {\n    return response.channels || [];\n  }\n  throw new Error(\"Failed to get online users\");\n}\n\n//To check if channel already exists\nexport async function checkChannelExistence(pubnub, channel) {\n  const response = await pubnub.objects.getAllChannelMetadata({\n    filter: 'id == \"' + channel + '\"',\n  });\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error(\"Failed to get PubNub channel\");\n}\n\n//To check if user ID already exists\nexport async function checkUserIDExistence(pubnub, userID) {\n  const response = await pubnub.objects.getAllUUIDMetadata({\n    filter: 'id == \"' + userID + '\"',\n  });\n  if (response.status === 200) {\n    return response.data;\n  }\n  throw new Error(\"Failed to get PubNub user\");\n}\n\n//To delete a message\nexport async function softDeleteMessage(pubnub, channel, messageTimetoken) {\n  const response = await pubnub.addMessageAction({\n    channel,\n    messageTimetoken,\n    action: {\n      type: \"deleted\",\n      value: \".\",\n    },\n  });\n  if (response) {\n    return response.data;\n  }\n  throw new Error(\"Failed to delete the message\");\n}\n\n//To undo delete action\nexport async function deleteMessageAction(pubnub, channel, messageTimetoken, actionTimetoken) {\n  const response = await pubnub.removeMessageAction({\n    channel,\n    messageTimetoken,\n    actionTimetoken,\n  });\n  if (response) {\n    return response.data;\n  }\n  throw new Error(\"Failed to undo delete action\");\n}\n\n//To add edit Message action\nexport async function addEditMessageAction(pubnub, channel, messageTimetoken, value) {\n  const response = await pubnub.addMessageAction({\n    channel,\n    messageTimetoken,\n    action: {\n      type: \"updated\",\n      value,\n    },\n  });\n  if (response) {\n    return response.data;\n  }\n  throw new Error(\"Failed to undo delete action\");\n}\n\n//To set Metadata of a user\nexport async function setUserMetadata(pubnub, uuid, metadata) {\n  const userResponse = await pubnub.objects.setUUIDMetadata({\n    uuid: uuid,\n    data: {\n      custom: metadata,\n    },\n  });\n  if (userResponse.status === 200) {\n    return userResponse.data;\n  }\n  throw new Error(\"Failed to set metadata of PubNub user\");\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Button, TextField, Typography, CircularProgress } from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {\n  PersonOutlineOutlined,\n  HttpsOutlined,\n  RemoveRedEyeOutlined,\n  RemoveRedEye,\n} from \"@material-ui/icons\";\nimport { useStyles } from \"../../style/loginForm\";\nimport { signIn } from \"../../services/auth\";\nimport { authenticate, setLocalStorage } from \"../../services/localStorage\";\nimport { fetchAllAccounts, fetchAllApps } from \"../../services/pubnub\";\n\nimport Alert from \"@material-ui/lab/Alert\";\nimport Pubnub from \"pubnub\";\n\nconst LoginForm = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const uuid = Pubnub.generateUUID();\n\n  const [alert, setAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n    loading: false,\n  });\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n  const [passwordIsMasked, setPasswordIsMasked] = useState(true);\n\n  const handleChange = (type) => (e) => {\n    switch (type) {\n      case \"email\":\n        setCredentials({ ...credentials, email: e.target.value });\n        break;\n      case \"password\":\n        setCredentials({ ...credentials, password: e.target.value });\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setAlert({ ...alert, loading: true });\n      const authSignInResponse = await signIn(credentials);\n      const { user, token } = authSignInResponse.result;\n      setAlert({\n        ...alert,\n        success: { status: true, msg: \"Successfully Authenticated\" },\n        error: { status: false, msg: \"\" },\n      });\n      authenticate({ user, token }, async () => {\n        try {\n          let accountsResult = await fetchAllAccounts(user.id, token);\n          let apps = await fetchAllApps(accountsResult.result.accounts[0].id, token);\n          setLocalStorage(\"PubNubAccounts\", accountsResult.result.accounts);\n          setLocalStorage(\"PubNubSelectedAccount\", accountsResult.result.accounts[0]);\n          setLocalStorage(\"PubNubApplications\", apps);\n          setLocalStorage(\"uuid\", uuid);\n          setAlert({\n            ...alert,\n            success: { status: true, msg: \"\" },\n            error: { status: false, msg: \"\" },\n            loading: false,\n          });\n          history.push(\"/dashboard\");\n        } catch (err) {\n          throw new Error(err);\n        }\n      });\n    } catch (err) {\n      setAlert({\n        ...alert,\n        error: { status: true, msg: err.message },\n        loading: false,\n        success: { status: false, msg: \"\" },\n      });\n    }\n  };\n\n  const togglePasswordMask = () => {\n    setPasswordIsMasked((prev) => !prev);\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <div className={classes.middle}>\n          <div className={classes.inner}>\n            <Grid container justify=\"center\">\n              <Grid item xs={12} sm={6} md={4}>\n                <div className={classes.form}>\n                  <Grid container justify=\"center\">\n                    <Grid item sm={12} md={12} xs={12}>\n                      <div className={classes.logIconContainer}>\n                        <span className={classes.logIcon}>\n                          <img\n                            src={process.env.PUBLIC_URL + \"/images/Pubnub logo.svg\"}\n                            alt=\"Pubnub Logo\"\n                            width={160}\n                          />\n                        </span>\n                      </div>\n                    </Grid>\n                    <Grid item sm={12} md={12} xs={12}>\n                      <Typography className={classes.logSubtitle} align=\"center\">\n                        Login with your PubNub account to continue\n                      </Typography>\n                    </Grid>\n                  </Grid>\n\n                  <form onSubmit={handleSubmit}>\n                    <Grid container justify=\"center\" spacing={3}>\n                      <Grid xs={10} sm={12} md={10} item>\n                        <div className={classes.alertCard}>\n                          {alert.success.status && (\n                            <Alert severity=\"success\">{alert.success.msg}</Alert>\n                          )}\n                          {alert.error.status && <Alert severity=\"error\">{alert.error.msg}</Alert>}\n                        </div>\n                        <br />\n                        <br />\n                      </Grid>\n                      <Grid xs={10} sm={12} md={10} item>\n                        <TextField\n                          type=\"text\"\n                          variant=\"outlined\"\n                          name=\"email\"\n                          fullWidth\n                          autoComplete=\"email\"\n                          className={classes.loginTextField}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <PersonOutlineOutlined className={classes.textfieldIcon} />\n                              </InputAdornment>\n                            ),\n                          }}\n                          placeholder=\"E-mail address\"\n                          required\n                          onChange={handleChange(\"email\")}\n                          value={credentials.email}\n                          autoFocus\n                        />\n                      </Grid>\n                      <Grid xs={10} sm={12} md={10} item>\n                        <TextField\n                          type={passwordIsMasked ? \"password\" : \"text\"}\n                          autoComplete=\"password\"\n                          variant=\"outlined\"\n                          className={classes.loginTextField}\n                          name=\"password\"\n                          InputProps={{\n                            endAdornment: (\n                              <InputAdornment position=\"end\">\n                                {passwordIsMasked ? (\n                                  <RemoveRedEye\n                                    className={classes.maskPasswordIcon}\n                                    onClick={togglePasswordMask}\n                                  />\n                                ) : (\n                                  <RemoveRedEyeOutlined\n                                    className={classes.textfieldIcon}\n                                    onClick={togglePasswordMask}\n                                  />\n                                )}\n                              </InputAdornment>\n                            ),\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <HttpsOutlined className={classes.textfieldIcon} />\n                              </InputAdornment>\n                            ),\n                          }}\n                          fullWidth\n                          placeholder=\"Password\"\n                          required\n                          onChange={handleChange(\"password\")}\n                          value={credentials.password}\n                        />\n                      </Grid>\n                    </Grid>\n                    <br />\n\n                    <Grid container justify=\"center\">\n                      <Grid item sm={12} md={10} xs={10}>\n                        <Button\n                          className={classes.button}\n                          fullWidth\n                          classes={{ disabled: classes.disabledButton }}\n                          disabled={alert.loading}\n                          type=\"submit\"\n                          startIcon={\n                            alert.loading ? (\n                              <CircularProgress className={classes.loader} size={30} />\n                            ) : null\n                          }\n                        >\n                          {alert.loading ? \"Submitting\" : \"LOGIN TO CONTINUE\"}\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </form>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport Auth from \"../../layouts/Auth\";\nimport LoginForm from \"../../components/login/LoginForm\";\n\nconst Login = () => {\n  return (\n    <>\n      <Auth>\n        <LoginForm />\n      </Auth>\n    </>\n  );\n};\nexport default Login;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuth } from \"../services/localStorage\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuth() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  ></Route>\n);\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuth } from \"../services/localStorage\";\n\nconst AuthRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuth() ? (\n        <Redirect\n          to={{\n            pathname: \"/dashboard\",\n            state: { from: props.location },\n          }}\n        />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  ></Route>\n);\n\nexport default AuthRoute;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  avatar: {\n    backgroundColor: \"#FCF0EF\",\n    color: \"#E66E68\",\n    borderRadius: \"8px\",\n    margin: \"0px 5px 0px 0px\",\n  },\n  button: {\n    textTransform: \"none\",\n    fontSize: \"15px\",\n  },\n  paperRoot: {\n    minWidth: \"250px\",\n    zIndex: 2,\n  },\n  logoutIcon: {\n    color: \"#C2C2C2\",\n  },\n});\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  cardRoot: {\n    cursor: \"pointer\",\n  },\n  checkIcon: {\n    color: \"#C2C2C2\",\n  },\n  email: {\n    fontSize: \"12px\",\n  },\n  avatarText: {\n    fontSize: \"12px\",\n  },\n  avatar: {},\n});\n","import moment from \"moment\";\n\nexport const capitalizeFirstCharacter = (name) => {\n  let words = name.split(\" \");\n  return words\n    .map((word) => {\n      return word[0].toUpperCase() + word.substring(1);\n    })\n    .join(\" \");\n};\n\nexport const accountsFromLS = () => {\n  if (localStorage.getItem(\"PubNubAccounts\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubAccounts\"));\n  } else {\n    return false;\n  }\n};\n\nexport const selectedAccountsFromLS = () => {\n  if (localStorage.getItem(\"PubNubSelectedAccount\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubSelectedAccount\"));\n  } else {\n    return false;\n  }\n};\n\nexport const appsFromLS = () => {\n  if (localStorage.getItem(\"PubNubApplications\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubApplications\"));\n  } else {\n    return false;\n  }\n};\n\nexport const selectedAppFromLS = () => {\n  if (localStorage.getItem(\"PubNubSelectedApp\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubSelectedApp\"));\n  } else {\n    return false;\n  }\n};\n\nexport const applicationsWithKeyFromLS = () => {\n  if (localStorage.getItem(\"PubNubApplicationsWithKey\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubApplicationsWithKey\"));\n  } else {\n    return false;\n  }\n};\n\nexport const avatarStyle = (index, account) => {\n  if (index % 5 === 0) {\n    return {\n      backgroundColor: \"#FCF0EF\",\n      width: \"30px\",\n      height: \"30px\",\n      color: \"#E66E68\",\n      borderRadius: \"8px\",\n    };\n  } else if (index % 3 === 0) {\n    return {\n      backgroundColor: \"#FFFABB\",\n      width: \"30px\",\n      height: \"30px\",\n      color: \"#FFD502\",\n      borderRadius: \"8px\",\n    };\n  } else if (index % 2 === 0) {\n    return {\n      backgroundColor: \"#CAFFE6\",\n      width: \"30px\",\n      height: \"30px\",\n      color: \"#34F89C\",\n      borderRadius: \"8px\",\n    };\n  } else if (index % 1 === 0) {\n    return {\n      backgroundColor: \"#CAF0FF\",\n      width: \"30px\",\n      height: \"30px\",\n      color: \"#3BC8FF\",\n      borderRadius: \"8px\",\n    };\n  } else if (index === account().email) {\n    return {\n      color: \"#6387ED\",\n    };\n  }\n};\n\nexport const channelsFromLS = () => {\n  if (localStorage.getItem(\"PubNubChannels\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubChannels\"));\n  } else {\n    return false;\n  }\n};\n\nexport const capitalizeNameInitials = (name) => {\n  if (name) {\n    let words = name.split(\" \"),\n      initials = words[0].substring(0, 1).toUpperCase();\n    if (words.length > 1) {\n      initials += words[words.length - 1].substring(0, 1).toUpperCase();\n      return initials;\n    }\n    return words[0].substring(0, 2).toUpperCase();\n  }\n  return false;\n};\n\nexport const usersFromLS = () => {\n  if (localStorage.getItem(\"PubNubUsers\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubUsers\"));\n  } else {\n    return false;\n  }\n};\n\nexport const formatDate = (date) => {\n  if (date) {\n    return moment(new Date(date)).format(\"MMMM Do YYYY, h:mm a\");\n  }\n  return null;\n};\n\nexport const truncateString = (string, index) => {\n  // if (\n  //   (string && string.length > 20 && index === \"id\") ||\n  //   (string && string.length > 20 && index === \"description\")\n  // ) {\n  //   return string.substring(0, 18) + \"...\";\n  // }\n  if (string && string.length > 50) {\n    return string.substring(0, 48) + \"...\";\n  }\n  return string || \"-\";\n};\n\nexport const fetchWords = (path) => {\n  return fetch(path)\n    .then((r) => r.text())\n    .then((text) => {\n      return text;\n    });\n};\n\nexport const reload = () => window.location.reload();\n\nexport const showError = (errorData) => {\n  if (errorData.message === \"Forbidden\") {\n    return \"Not permitted to Access manager\";\n  }\n  if (errorData.message) {\n    return \"Method not allowed\";\n  }\n  return errorData.error.message;\n};\n\nexport const checkValidChannelName = (name) => {\n  // eslint-disable-next-line no-useless-escape\n  const characters = [\",\", \":\", \"*\", \"/\", \"\\\\\"];\n  for (let index = 0; index <= characters.length; index++) {\n    if (name && name.includes(characters[index])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const filterFunction = (data, key) => {\n  if (data) return data.payload.filter((item) => item.name === `KEY-${key.id}`);\n};\n\nexport const filterEventHandler = (data, block) => {\n  if (data) return data.filter((item) => item.name === `BLOCK-${block[0].id}`);\n};\n\nexport const filterImageFunction = (data, key) => {\n  if (data) return data.payload.filter((item) => item.name === `KEY-${key.id}-IMAGE-MODERATION`);\n};\n\nexport const filterImageEventHandler = (data, block) => {\n  if (data) return data.filter((item) => item.name === `BLOCK-${block[0].id}-IMAGE-MODERATION`);\n};\n\nexport const pnFunctionFilterStatus = (str) => {\n  // eslint-disable-next-line no-new-func\n  return new Function(\"return \" + str)()();\n};\n\nexport const getProfanityWordsByLanguage = (profanityList, language) => {\n  return profanityList[language];\n};\n\nexport const sliceTableArray = (tableData, page, rowsPerPage) => {\n  if (tableData.length > rowsPerPage) {\n    return tableData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  }\n  return tableData;\n};\n\nexport const formatTimeToken = (timeToken) => {\n  if (timeToken) return moment.unix(timeToken / 10000000).format(\"LT\");\n  return null;\n};\n\nexport const capitalizeFirstLetter = (string) => {\n  if (string) return string.charAt(0).toUpperCase() + string.slice(1);\n  return null;\n};\n\nexport const formatProfileImageUrl = (url) => {\n  if (url) return url;\n  return process.env.PUBLIC_URL + \"/images/default-user.svg\";\n};\n\nexport const formatUserName = (name) => {\n  if (name) return name;\n  return \"Unknown\";\n};\n\nexport const selectedChannelFromLS = () => {\n  if (localStorage.getItem(\"PubNubSelectedChannel\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubSelectedChannel\"));\n  } else {\n    return false;\n  }\n};\n\nexport const truncateChannelDescription = (string) => {\n  if (string && string.length > 70) {\n    return string.substring(0, 68) + \"...\";\n  }\n  return string;\n};\n\nexport const uuidFromLS = () => {\n  if (localStorage.getItem(\"uuid\")) {\n    return JSON.parse(localStorage.getItem(\"uuid\"));\n  } else {\n    return false;\n  }\n};\n\nexport const combineLanguageWords = (wordList) => {\n  const combinedWords = Object.values(wordList).filter((item) => item.length !== 0);\n  if (combinedWords.length > 0) {\n    return combinedWords\n      .reduce((a, c) => a + \",\" + c)\n      .split(\",\")\n      .join(\"|\");\n  }\n  return \"\";\n};\n\nexport function groupLanguageWords(words) {\n  if (words) {\n    return words\n      .split(\",\")\n      .join(\"|\")\n      .replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  }\n  return words;\n}\n\nexport function constantBoolean(variable) {\n  return typeof variable === \"string\" ? variable === \"true\" : variable;\n}\n\nexport const lastMidnightHours = () => {\n  const date = new Date();\n  const timeToken = date.setHours(0, 0, 0, 0);\n  return timeToken * 10000;\n};\n\nexport const checkChannelMember = (member) => {\n  if (member) return member.uuid.id;\n  return false;\n};\n\nexport const membersFromLS = () => {\n  if (localStorage.getItem(\"PubNubChannelMembers\")) {\n    return JSON.parse(localStorage.getItem(\"PubNubChannelMembers\"));\n  } else {\n    return false;\n  }\n};\n\nexport const getModeratedMessageTooltip = (message) => {\n  if (message) return \"Moderated message: \" + message;\n  return null;\n};\n\nexport const getModeratedReasonTooltip = (reason) => {\n  if (reason) return \"Reason: \" + reason;\n  return null;\n};\n\nexport const checkMuteStatus = (member, channel) => {\n  if (\n    member &&\n    member.uuid.custom &&\n    member.uuid.custom.mutedChannels &&\n    member.uuid.custom.mutedChannels.includes(channel)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const checkBlockStatus = (member, channel) => {\n  if (\n    member &&\n    member.uuid.custom &&\n    member.uuid.custom.blockedChannels &&\n    member.uuid.custom.blockedChannels.includes(channel)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const getMessageFileUrl = (messageObject, channelMessage, pubnub, channelID) => {\n  if (\n    channelMessage.message &&\n    channelMessage.message.file &&\n    channelMessage.message.file.id &&\n    channelMessage.message.file.name &&\n    !channelMessage.message.file.url\n  ) {\n    const url = pubnub.getFileUrl({\n      channel: channelID,\n      id: channelMessage.message.file.id,\n      name: channelMessage.message.file.name,\n    });\n    messageObject.file.url = url;\n  }\n  return messageObject;\n};\n\nexport const formatBannedMessage = (messageObject) => {\n  if (messageObject.file && messageObject.file.url) messageObject.image = messageObject.file.url;\n\n  if (messageObject.file && messageObject.file.reason)\n    messageObject.imageReason = messageObject.file.reason;\n\n  if (messageObject.message && messageObject.message.originalMessage)\n    messageObject.originalMessage = messageObject.message.originalMessage;\n\n  if (messageObject.message && messageObject.message.moderatedMessage)\n    messageObject.moderatedMessage = messageObject.message.moderatedMessage;\n\n  if (messageObject.message && messageObject.message.reason)\n    messageObject.reason = messageObject.message.reason;\n\n  return messageObject;\n};\n\nexport const getMessageText = (channelMessage, messageObject) => {\n  return (\n    (channelMessage.actions &&\n      channelMessage.actions.updated &&\n      Object.keys(channelMessage.actions.updated)[0]) ||\n    messageObject.text ||\n    (messageObject.message && messageObject.message.text)\n  );\n};\n","import React from \"react\";\nimport { MenuItem, Avatar, Grid, Typography } from \"@material-ui/core\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport { useStyles } from \"../../style/accountCard\";\nimport { capitalizeFirstCharacter, avatarStyle, selectedAccountsFromLS } from \"../../utils/helpers\";\n\nconst AccountCard = ({ account, handleClick, index }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <MenuItem testid={`${index}`} onClick={() => handleClick(account)}>\n        <Grid container>\n          <Grid item xs={2} sm={2}>\n            <Avatar className={classes.avatar} style={avatarStyle(index)} variant=\"square\">\n              <Typography testid=\"capitalChar\" className={classes.avatarText}>\n                {account && account.email\n                  ? capitalizeFirstCharacter(account.email.slice(0, 2))\n                  : null}\n              </Typography>\n            </Avatar>\n          </Grid>\n          <Grid item xs={9} sm={9}>\n            <Typography testid=\"email\" noWrap className={classes.email}>\n              {account.email}\n            </Typography>\n          </Grid>\n          <Grid item xs={1} sm={1}>\n            <CheckCircleIcon\n              style={avatarStyle(account.email, selectedAccountsFromLS)}\n              className={classes.checkIcon}\n            />\n          </Grid>\n        </Grid>\n      </MenuItem>\n    </>\n  );\n};\n\nexport default AccountCard;\n","import React from \"react\";\nimport AccountCard from \"./AccountCard\";\nimport { fetchAllApps } from \"../../services/pubnub\";\nimport { getCookie, setLocalStorage } from \"../../services/localStorage\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AccountList = ({ accounts }) => {\n  const token = getCookie(\"token\");\n  const history = useHistory();\n\n  const handleClick = async (selectedAccount) => {\n    try {\n      let apps = await fetchAllApps(selectedAccount.id, token);\n      setLocalStorage(\"PubNubSelectedAccount\", selectedAccount);\n      setLocalStorage(\"PubNubApplications\", apps);\n      history.push(\"/dashboard\");\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  function AccountListing() {\n    return accounts.map((account, i) => {\n      return <AccountCard account={account} key={i} handleClick={handleClick} index={i} />;\n    });\n  }\n\n  return <AccountListing />;\n};\n\nexport default AccountList;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  ClickAwayListener,\n  Grow,\n  Paper,\n  Popper,\n  MenuItem,\n  Avatar,\n  Box,\n  Divider,\n  MenuList,\n} from \"@material-ui/core\";\nimport { KeyboardArrowDownOutlined } from \"@material-ui/icons\";\nimport { useStyles } from \"../../../style/myAccountDropdown\";\nimport { signout } from \"../../../services/localStorage\";\nimport AccountList from \"../../accounts/AccountList\";\nimport { capitalizeFirstCharacter, selectedAccountsFromLS } from \"../../../utils/helpers\";\n\nexport default function MyAccountDropdown({ accounts }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const prevOpen = useRef(open);\n  const anchorRef = useRef(null);\n  const history = useHistory();\n\n  const handleToggle = () => {\n    setOpen((prevOpenState) => !prevOpenState);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div>\n      <div>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? \"menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          className={classes.button}\n          endIcon={<KeyboardArrowDownOutlined />}\n          onClick={handleToggle}\n        >\n          <Avatar className={classes.avatar} variant=\"square\">\n            {capitalizeFirstCharacter(selectedAccountsFromLS().email.slice(0, 2))}\n          </Avatar>\n          {selectedAccountsFromLS().email}\n        </Button>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n          className={classes.paperRoot}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                    <AccountList accounts={accounts} />\n                    <Box pl={2} pr={2}>\n                      <Divider />\n                    </Box>\n                    <MenuItem onClick={() => signout(() => history.push(\"/\"))}>\n                      <img src={process.env.PUBLIC_URL + \"/images/sign-out.svg\"} alt=\"Signout\" />\n                      <Box pl={1}>\n                        <small>Logout</small>\n                      </Box>\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  grow: {\n    flexGrow: 1,\n  },\n  root: {\n    backgroundColor: \"white\",\n    boxShadow:\n      \"0px 0px 0px 0px rgb(0 0 0 / 0%), 0px 0px 0px 1px rgb(0 0 0 / 4%), 0px 0px 0px 0px rgb(0 0 0 / 0%)\",\n  },\n  headerMenu: {\n    color: \"black\",\n    margin: \"15px\",\n  },\n  button: {\n    textTransform: \"none\",\n    fontSize: \"15px\",\n  },\n  verticalLine: {\n    marginLeft: \"10px\",\n    marginRight: \"20px\",\n    borderLeft: \"2px solid lightgrey\",\n    height: \"20px\",\n  },\n});\n","import React from \"react\";\nimport { NavigateNext } from \"@material-ui/icons\";\nimport { Breadcrumbs, Link, Typography } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { selectedAppFromLS } from \"../../../utils/helpers\";\n\nexport default function Breadcrumb(props) {\n  const keySet = selectedAppFromLS();\n  return (\n    <div>\n      <Breadcrumbs separator={<NavigateNext fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        <Link color=\"primary\" component={RouterLink} to=\"/dashboard\">\n          <Typography variant=\"body2\">Applications</Typography>\n        </Link>\n        {props.currentPage ? (\n          <Link color=\"primary\" component={RouterLink} to=\"/overview\">\n            <Typography color=\"primary\" variant=\"body2\">\n              {keySet && keySet.name}\n            </Typography>\n          </Link>\n        ) : (\n          <Typography color=\"inherit\" variant=\"body2\">\n            {keySet && keySet.name}\n          </Typography>\n        )}\n        {props.currentPage ? (\n          <Typography color=\"inherit\" variant=\"body2\">\n            {props.currentPage}\n          </Typography>\n        ) : null}\n      </Breadcrumbs>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, Link as RouterLink } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Grid,\n  Breadcrumbs,\n  Typography,\n  Link,\n} from \"@material-ui/core\";\nimport MyAccountDropdown from \"./MyAccountDropdown\";\nimport { useStyles } from \"../../../style/header\";\nimport { accountsFromLS, selectedAppFromLS, selectedChannelFromLS } from \"../../../utils/helpers\";\nimport Breadcrumb from \"./Breadcrumb\";\nimport { NavigateNext } from \"@material-ui/icons\";\n\nexport default function Header() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [accounts, setAccounts] = useState([]);\n  const keySet = selectedAppFromLS();\n  const channelName = selectedChannelFromLS();\n\n  useEffect(() => {\n    setAccounts(accountsFromLS());\n  }, []);\n\n  const showBreadcrumbs = () => {\n    if (history.location.pathname === \"/dashboard\") {\n      return (\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          <Typography color=\"inherit\" variant=\"body2\">\n            Applications\n          </Typography>\n        </Breadcrumbs>\n      );\n    } else if (history.location.pathname === \"/channels\") {\n      return <Breadcrumb currentPage={\"Channels\"} />;\n    } else if (history.location.pathname === \"/overview\") {\n      return <Breadcrumb currentPage={\"\"} />;\n    } else if (history.location.pathname === \"/users\") {\n      return <Breadcrumb currentPage={\"Users\"} />;\n    } else if (history.location.pathname === \"/text-moderation\") {\n      return <Breadcrumb currentPage={\"Text Moderation\"} />;\n    } else if (history.location.pathname === \"/image-moderation\") {\n      return <Breadcrumb currentPage={\"Image Moderation\"} />;\n    } else if (history.location.pathname === \"/channels/messages\") {\n      return (\n        <Breadcrumbs separator={<NavigateNext fontSize=\"small\" />} aria-label=\"breadcrumb\">\n          <Link color=\"primary\" component={RouterLink} to=\"/dashboard\">\n            <Typography variant=\"body2\">Applications</Typography>\n          </Link>\n          <Link color=\"primary\" component={RouterLink} to=\"/overview\">\n            <Typography color=\"primary\" variant=\"body2\">\n              {keySet && keySet.name}\n            </Typography>\n          </Link>\n          <Link color=\"primary\" component={RouterLink} to=\"/channels\">\n            <Typography color=\"primary\" variant=\"body2\">\n              Channels\n            </Typography>\n          </Link>\n          <Typography color=\"inherit\" variant=\"body2\">\n            {channelName}\n          </Typography>\n        </Breadcrumbs>\n      );\n    }\n  };\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n          <IconButton\n            id=\"toDashboard\"\n            edge=\"start\"\n            onClick={() => history.push(\"/dashboard\")}\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <img src={process.env.PUBLIC_URL + \"/images/Pubnub logo.svg\"} width={90} alt=\"\" />\n          </IconButton>\n          <div className={classes.verticalLine} />\n          {showBreadcrumbs()}\n          <div className={classes.grow} />\n          <Grid item className={classes.headerMenu}>\n            <MyAccountDropdown accounts={accounts} />\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  tableRow: {\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    margin: \"10px\",\n    boxShadow: \"0px 1px 3px 0px rgb(0 0 0 / 8%)\",\n    opacity: 1,\n    \"& button\": {\n      visibility: \"hidden\",\n    },\n    \"&:hover\": {\n      \"& button\": {\n        visibility: \"visible\",\n      },\n    },\n  },\n  tableRowClickable: {\n    cursor: \"pointer\",\n  },\n  tablehead: {\n    \"& .MuiTableHead-root\": {\n      // backgroundColor:\"#fafafa\",\n      // backgroundColor:\"grey\"\n    },\n    \"& .MuiTableRow-root\": {\n      backgroundColor: \"#fafafa\",\n      borderBottom: \"0px solid white\",\n    },\n    \"& .MuiTableCell-head\": {\n      minWidth: \"180px\",\n    },\n  },\n\n  headLabel: {\n    fontSize: \"11px\",\n    fontWeight: \"600\",\n  },\n  keyName: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-20)/var(--unnamed-line-spacing-24) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#414141\",\n    opacity: \"1\",\n  },\n  appName: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    fontSize: \"12px\",\n    // font: \"normal normal normal 16px/19px Proxima Nova\",\n    // letterSpacing: \"0px\",\n    color: \"#C2C2C2\",\n    opacity: 1,\n  },\n  icons: {\n    padding: \"0px\",\n  },\n  tableConatiner: {\n    scrollbarWidth: \"none\",\n    overflow: \"auto\",\n    overflowX: \"hidden\",\n  },\n  table: {\n    borderCollapse: \"separate\",\n    borderSpacing: \"0 10px\",\n  },\n  alertMessage: {\n    background: \"transparent\",\n  },\n  tableCellIcon: {\n    width: \"1px\",\n    whiteSpace: \"nowrap\",\n  },\n  tablePagination: {\n    \"& .MuiTablePagination-actions\": {\n      background: \"#E7EDFF 0% 0% no-repeat padding-box\",\n      borderRadius: \"5px\",\n      opacity: 1,\n    },\n  },\n});\n","import { Tooltip } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nexport const LightTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    boxShadow: theme.shadows[1],\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-14)/var(--unnamed-line-spacing-17) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#414141\",\n    opacity: 1,\n  },\n}))(Tooltip);\n","import React from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/listingTable\";\nimport { LightTooltip } from \"../../style/tooltip\";\n\nexport default function TableIcons(props) {\n  const { row } = props;\n  const classes = useStyles();\n  const isflagged = props.row && props.row.custom && props.row.custom.flag;\n  const isBanned = props.row && props.row.custom && props.row.custom.ban;\n\n  return (\n    <div>\n      {(() => {\n        if (props.isUser && !isflagged && !isBanned) {\n          return (\n            <LightTooltip title=\"Flag\">\n              <IconButton\n                edge=\"start\"\n                className={classes.icons}\n                onClick={(event) => props.flagUser(event, row)}\n              >\n                <img src={process.env.PUBLIC_URL + \"/images/flag.svg\"} alt=\"flag\" />\n              </IconButton>\n            </LightTooltip>\n          );\n        } else if (props.isUser && !isBanned) {\n          return (\n            <LightTooltip title=\"Unflag\">\n              <IconButton\n                edge=\"start\"\n                className={classes.icons}\n                onClick={(event) => props.unFlagUser(event, row)}\n              >\n                <img src={process.env.PUBLIC_URL + \"/images/flag.svg\"} alt=\"flag\" />\n              </IconButton>\n            </LightTooltip>\n          );\n        }\n      })()}\n\n      {(() => {\n        if (props.isUser && !isBanned) {\n          return (\n            <LightTooltip title=\"Ban\">\n              <IconButton\n                edge=\"start\"\n                className={classes.icons}\n                onClick={(event) => props.banUser(event, row)}\n              >\n                <img src={process.env.PUBLIC_URL + \"/images/ban.svg\"} alt=\"block\" />\n              </IconButton>\n            </LightTooltip>\n          );\n        } else if (props.isUser) {\n          return (\n            <LightTooltip title=\"Unban\">\n              <IconButton\n                edge=\"start\"\n                className={classes.icons}\n                onClick={(event) => props.unbanUser(event, row)}\n              >\n                <img src={process.env.PUBLIC_URL + \"/images/ban.svg\"} alt=\"block\" />\n              </IconButton>\n            </LightTooltip>\n          );\n        }\n      })()}\n\n      {!props.isUser ? (\n        <LightTooltip title=\"View\">\n          <IconButton\n            edge=\"start\"\n            label=\"view\"\n            className={classes.icons}\n            onClick={(event) => props.viewRow(event, row.id)}\n          >\n            <img src={process.env.PUBLIC_URL + \"/images/watch.svg\"} alt=\"view\" />\n          </IconButton>\n        </LightTooltip>\n      ) : null}\n      <LightTooltip title=\"Edit\">\n        <IconButton\n          edge=\"start\"\n          className={classes.icons}\n          onMouseOver={() => props.setOver(true)}\n          onMouseOut={() => props.setOver(false)}\n          onClick={(event) => props.editRow(event, row)}\n        >\n          <img src={process.env.PUBLIC_URL + \"/images/edit.svg\"} alt=\"edit\" />\n        </IconButton>\n      </LightTooltip>\n      <LightTooltip title=\"Delete\">\n        <IconButton\n          edge=\"start\"\n          label=\"delete\"\n          className={classes.icons}\n          onMouseOver={() => props.setOver(true)}\n          onMouseOut={() => props.setOver(false)}\n          onClick={(event) => props.deleteRow(event, row.id)}\n        >\n          <img src={process.env.PUBLIC_URL + \"/images/delete.svg\"} alt=\"delete\" />\n        </IconButton>\n      </LightTooltip>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { TablePagination } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/listingTable\";\n\nexport default function ListingPagination(props) {\n  const classes = useStyles();\n  const tableCount =\n    props.tableCount > props.rowsPerPage ? props.tableCount : props.tableData.length;\n\n  return props.tableData.length ? (\n    <TablePagination\n      className={classes.tablePagination}\n      rowsPerPageOptions={[props.rowsPerPage]}\n      component=\"div\"\n      count={tableCount}\n      page={props.page}\n      rowsPerPage={props.rowsPerPage}\n      onChangePage={props.handleChangePage}\n      labelDisplayedRows={({ from, to, count }) => `${from}-${to} of ${count}`}\n      backIconButtonProps={{\n        color: \"primary\",\n      }}\n      nextIconButtonProps={{\n        color: \"primary\",\n      }}\n    />\n  ) : null;\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { LightTooltip } from \"../../style/tooltip\";\nimport { formatDate } from \"../../utils/helpers\";\n\nexport default function Markers(props) {\n  const isflagged = props.row && props.row.custom && props.row.custom.flag;\n  const isBanned = props.row && props.row.custom && props.row.custom.ban;\n  return (\n    <>\n      {props.isUser && isflagged ? (\n        <LightTooltip\n          title={\n            <>\n              <Typography>{`Reason: ${props.row.custom.reason}`}</Typography>\n              <br />\n              <Typography>{`Flagged By: ${props.row.custom.flaggedBy}`}</Typography>\n              <br />\n              <Typography>{`Flagged At: ${formatDate(props.row.custom.flaggedAt)}`}</Typography>\n            </>\n          }\n        >\n          <img src={process.env.PUBLIC_URL + \"/images/flagged.svg\"} alt=\"flagged\" />\n        </LightTooltip>\n      ) : null}\n      {props.isUser && isBanned ? (\n        <img src={process.env.PUBLIC_URL + \"/images/banned.svg\"} alt=\"banned\" />\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  Grid,\n  TableRow,\n  Box,\n  Avatar,\n  TableSortLabel,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../../style/listingTable\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { capitalizeNameInitials, sliceTableArray, truncateString } from \"../../utils/helpers\";\nimport TableIcons from \"./TableIcons\";\nimport ListingPagination from \"./ListingPagination\";\nimport Markers from \"./Markers\";\n\nfunction compare(a, b) {\n  if ((!!a && !b) || a > b) {\n    return -1;\n  }\n  if ((!!b && !a) || b > a) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => compare(a[orderBy], b[orderBy])\n    : (a, b) => -compare(a[orderBy], b[orderBy]);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function ListingTable(props) {\n  const headCells = props.headCells;\n  const tableData = props.data;\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"\");\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage] = React.useState(25);\n  const [over, setOver] = React.useState(false);\n\n  React.useEffect(() => {\n    setPage(props.number);\n  }, [props.number]);\n\n  const handleChangePage = (event, newPage) => {\n    if (tableData.length <= rowsPerPage) {\n      props.getNewPage(newPage);\n    }\n    setPage(newPage);\n  };\n\n  let tableSlice = sliceTableArray(tableData, page, rowsPerPage);\n\n  function EnhancedTableHead(prop) {\n    const { headOrder, headOrderBy, onRequestSort } = prop;\n\n    const createSortHandler = (property) => (event) => {\n      onRequestSort(event, property);\n    };\n\n    return (\n      <TableHead className={classes.tablehead}>\n        <TableRow>\n          {headCells.map((headCell) => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.alignment}\n              padding={headCell.disablePadding ? \"none\" : \"default\"}\n              sortDirection={headOrderBy === headCell.id ? headOrder : false}\n            >\n              <TableSortLabel\n                className={classes.headLabel}\n                active={headOrderBy === headCell.id}\n                direction={headOrderBy === headCell.id ? headOrder : \"asc\"}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n\n  const avatarStyle = (index) => {\n    if (index % 5 === 0) {\n      return {\n        backgroundColor: \"#FFFABB\",\n        color: \"#FFD502\",\n        borderRadius: \"8px\",\n      };\n    } else if (index % 3 === 0) {\n      return {\n        backgroundColor: \"#FCF0EF\",\n        color: \"#E66E68\",\n        borderRadius: \"8px\",\n      };\n    } else if (index % 2 === 0) {\n      return {\n        backgroundColor: \"#CAFFE6\",\n        color: \"#34F89C\",\n        borderRadius: \"8px\",\n      };\n    } else {\n      return {\n        backgroundColor: \"#CAF0FF\",\n        color: \"#3BC8FF\",\n        borderRadius: \"8px\",\n      };\n    }\n  };\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <div>\n      <ListingPagination\n        tableCount={props.tableCount}\n        handleChangePage={handleChangePage}\n        page={page}\n        tableData={tableData}\n        rowsPerPage={rowsPerPage}\n      />\n      <TableContainer className={classes.tableContainer}>\n        <Table\n          aria-labelledby=\"tableTitle\"\n          size={\"medium\"}\n          aria-label=\"enhanced table\"\n          className={classes.table}\n        >\n          <EnhancedTableHead\n            headOrder={order}\n            headOrderBy={orderBy}\n            onRequestSort={handleRequestSort}\n            rowCount={tableData.length}\n          />\n          {(() => {\n            if (tableData.length) {\n              return (\n                <TableBody>\n                  {stableSort(tableSlice, getComparator(order, orderBy)).map((row, index) => {\n                    return (\n                      <TableRow\n                        hover={!!props.handleRowClick}\n                        className={`\n                          ${classes.tableRow}\n                          ${!!props.handleRowClick ? classes.tableRowClickable : \"\"}\n                        `}\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={`${row.id}-${index}`}\n                        onClick={(event) =>\n                          props.handleRowClick && props.handleRowClick(event, row, over)\n                        }\n                      >\n                        {headCells.map((headcell, n) => {\n                          if (headcell.avatar) {\n                            return (\n                              <TableCell\n                                key={`${row.id}-${index}-${n}`}\n                                align=\"left\"\n                                className={classes.tableCell}\n                              >\n                                <Grid container>\n                                  <Box mr={1}>\n                                    <Avatar\n                                      variant=\"square\"\n                                      style={avatarStyle(index)}\n                                      src={row.profileUrl}\n                                    >\n                                      {capitalizeNameInitials(row.name)}\n                                    </Avatar>\n                                  </Box>\n                                  <Box>\n                                    <small className={classes.keyName}>{row.name}</small>\n                                    <br />\n                                    <small className={classes.appName}>\n                                      {row.appName || row.uuid || row.id}\n                                    </small>\n                                  </Box>\n                                  <Box ml={1} pt={1}>\n                                    <Markers isUser={headcell.user} row={row} />\n                                  </Box>\n                                </Grid>\n                              </TableCell>\n                            );\n                          } else if (headcell.icons) {\n                            return (\n                              <TableCell\n                                key={`${row.id}-${index}-${n}`}\n                                align=\"left\"\n                                className={classes.tableCellIcon}\n                              >\n                                <TableIcons\n                                  row={row}\n                                  editRow={props.editRow}\n                                  deleteRow={props.deleteRow}\n                                  viewRow={props.viewRow}\n                                  isUser={headcell.user}\n                                  flagUser={props.flagUser}\n                                  banUser={props.banUser}\n                                  unFlagUser={props.unFlagUser}\n                                  unbanUser={props.unbanUser}\n                                  setOver={setOver}\n                                />\n                              </TableCell>\n                            );\n                          }\n                          return (\n                            <TableCell\n                              key={`${row.id}-${index}-${n}`}\n                              align=\"left\"\n                              className={classes.tableCell}\n                            >\n                              {truncateString(row[headcell.id], headcell.id)}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              );\n            } else {\n              return props.message ? (\n                <TableBody>\n                  <TableRow>\n                    <TableCell>\n                      <Alert severity={\"info\"} className={classes.alertMessage}>\n                        {props.message}\n                      </Alert>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              ) : null;\n            }\n          })()}\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { setLocalStorage } from \"../../services/localStorage\";\nimport { useHistory } from \"react-router-dom\";\nimport ListingTable from \"../tables/ListingTable\";\nimport { appsFromLS } from \"../../utils/helpers\";\nimport moment from \"moment\";\n\nexport default function ApplicationTable({ searchResult }) {\n  const [applications, setApplications] = useState([]);\n  const history = useHistory();\n\n  const headCells = [\n    {\n      id: \"name\",\n      alignment: \"left\",\n      label: \"NAME\",\n      avatar: true,\n    },\n    { id: \"publish_key\", alignment: \"left\", label: \"PUBLISH KEY\" },\n    { id: \"subscribe_key\", alignment: \"left\", label: \"SUBSCRIBE KEY\" },\n    { id: \"created\", alignment: \"left\", label: \"CREATED ON\" },\n  ];\n\n  useEffect(() => {\n    const appsList = (appsFromLS() && appsFromLS().result) || [];\n    const keysList = [];\n    let keyWithAppName = {};\n    appsList.map((app, appIndex) => {\n      app.keys.map((key, keyIndex) => {\n        keyWithAppName = key;\n        keyWithAppName.appName = app.name;\n        keyWithAppName.created =\n          key.created && moment(new Date(key.created * 1000)).format(\"MMMM Do YYYY, h:mm a\");\n        keyWithAppName.modified =\n          key.modified && moment(new Date(key.modified * 1000)).format(\"MMMM Do YYYY, h:mm a\");\n        keyWithAppName.name = key.properties.name;\n        keysList.push(keyWithAppName);\n        return false;\n      });\n      return false;\n    });\n    setApplications(keysList);\n    setLocalStorage(\"PubNubApplicationsWithKey\", keysList);\n  }, []);\n\n  useEffect(() => {\n    if (searchResult.length) {\n      setApplications(searchResult);\n    }\n  }, [searchResult]);\n\n  const handleRowClick = (event, row) => {\n    try {\n      const selectedApp = applications.filter(function (app) {\n        return app.subscribe_key === row.subscribe_key;\n      });\n      setLocalStorage(\"PubNubSelectedApp\", selectedApp[0]);\n      history.push(\"/overview\");\n    } catch (n) {\n      throw new Error(n);\n    }\n  };\n\n  return (\n    <ListingTable\n      data={applications}\n      headCells={headCells}\n      handleRowClick={handleRowClick}\n      message={\"No data Found\"}\n      number={0}\n    />\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    font: \"var(--unnamed-font-style-normal) normal medium var(--unnamed-font-size-26)/var(--unnamed-line-spacing-31) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    color: \"#414141\",\n    fontSize: \"20px\",\n    // paddingLeft: '20px',\n    // fontWeight: 600,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"white\",\n    // padding:\"3px\",\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    border: \"1px solid #e8eaf6\",\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  searchInput: {\n    background: \" #FFFFFF 0% 0% no-repeat padding-box\",\n\n    borderRadius: \"5px\",\n    opacity: 1,\n  },\n\n  labelStyle: {\n    color: \"#606060\",\n  },\n\n  methodNotSelected: {\n    background: \"white\",\n    cursor: \"pointer\",\n    boxShadow: \"0px 3px 6px #00000014\",\n    border: \"0px solid #6387ED\",\n    borderRadius: \"10px\",\n    color: \"black\",\n    opacity: 1,\n    padding: \"20px 0px 20px 0px\",\n    width: \"170px\",\n  },\n  methodSelected: {\n    background: \"#E7EDFF 0% 0% no-repeat padding-box\",\n    cursor: \"pointer\",\n    boxShadow: \"0px 3px 6px #00000014\",\n    border: \"1px solid #6387ED\",\n    borderRadius: \"10px\",\n    color: \"#6387ED\",\n    opacity: 1,\n    padding: \"20px 0px 20px 0px\",\n    width: \"170px\",\n  },\n\n  profanityCardRoot: {\n    padding: \"20px\",\n  },\n\n  cancelButton: {\n    width: \"150px\",\n    margin: \"3px\",\n    height: \"37px\",\n    boxShadow: \"0px 0px 0px white\",\n    backgroundColor: \"white\",\n    border: \"1px solid #707070\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13px/16px var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    color: \"#707070\",\n    fontSize: \"13px\",\n  },\n  saveButton: {\n    background: \"#6387ED 0% 0% no-repeat padding-box\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    color: \"white\",\n    width: \"150px\",\n    margin: \"8px\",\n    height: \"37px\",\n    fontSize: \"13px\",\n    \"&:hover\": {\n      background: \"#6387ED 0% 0% no-repeat padding-box\",\n      color: \"white\",\n    },\n  },\n  addButton: {\n    fontSize: \"17px\",\n  },\n  addButtonContainer: {\n    marginTop: \"3px\",\n    background: \"#E7EDFF\",\n    color: \"#6387ED\",\n    opacity: 1,\n    \"&:hover\": {\n      background: \"#E7EDFF\",\n      color: \"#6387ED\",\n    },\n  },\n  defaultText: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textDecoration: \"underline\",\n    color: \"#6387ED\",\n    cursor: \"pointer\",\n    opacity: 1,\n    \"&:hover\": {\n      background: \"#E7EDFF\",\n      color: \"#6387ED\",\n    },\n  },\n\n  loader: {\n    marginRight: \"5px\",\n  },\n  reroute: {\n    textTransform: \"none\",\n    marginLeft: \"8px\",\n    backgroundColor: \"#FCF0EF\",\n    color: \"#FB6340\",\n    marginTop: \"5px\",\n  },\n  subTitle: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-18)/var(--unnamed-line-spacing-23) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#606060\",\n    opacity: 1,\n    paddingBottom: \"12px\",\n  },\n  infoIcon: {\n    padding: \"3px 0px 0px 5px\",\n  },\n}));\n","import React from \"react\";\nimport { useStyles } from \"../../style/textModeration\";\nimport SearchBar from \"material-ui-search-bar\";\n\nexport default function Search(props) {\n  const classes = useStyles();\n\n  const handleChange = (searchVal) => {\n    if (!searchVal) {\n      props.cancelSearch();\n    }\n  };\n  return (\n    <SearchBar\n      id=\"searchBar\"\n      value={props.searched}\n      onRequestSearch={(searchVal) => props.requestSearch(searchVal)}\n      onChange={(searchVal) => handleChange(searchVal)}\n      onCancelSearch={() => props.cancelSearch()}\n      placeholder={props.placeholder}\n      className={classes.searchInput}\n      searchIcon={\n        <>\n          <img src={process.env.PUBLIC_URL + \"/images/search.svg\"} alt=\"\" />\n        </>\n      }\n      disabled={props.disabled}\n      autoComplete=\"off\"\n    />\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction SnackBar({ status, msg }) {\n  const [open, setOpen] = React.useState(true);\n  useEffect(() => {\n    setOpen(true);\n  }, [status]);\n\n  function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  }\n\n  return (\n    <Snackbar\n      id=\"snackBar\"\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      open={open}\n      autoHideDuration={9000}\n      onClose={handleClose}\n    >\n      <Alert onClose={handleClose} severity={status}>\n        {msg}\n      </Alert>\n    </Snackbar>\n  );\n}\nexport default SnackBar;\n","import React, { useState, useEffect } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Grid, Typography, Box } from \"@material-ui/core\";\nimport ApplicationTable from \"./ApplicationTable\";\nimport { applicationsWithKeyFromLS } from \"../../utils/helpers\";\nimport Search from \"../core/Search\";\nimport SnackBar from \"../core/SnackBar\";\n\nfunction AppsListing() {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searched, setSearched] = useState(\"\");\n  const [appsAlert, setAppsAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n  });\n\n  const requestKeySearch = (searchedVal) => {\n    setAppsAlert({\n      ...appsAlert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n    });\n    const filteredRows = applicationsWithKeyFromLS().filter((row) => {\n      return (\n        row.publish_key.toLowerCase().includes(searchedVal.toLowerCase()) ||\n        row.subscribe_key.toLowerCase().includes(searchedVal.toLowerCase())\n      );\n    });\n    if (!filteredRows.length) {\n      setAppsAlert({\n        ...appsAlert,\n        success: { status: false, msg: \"\" },\n        error: { status: true, msg: \"No applications found\" },\n      });\n    }\n    setSearchResult(filteredRows);\n  };\n  const cancelKeySearch = () => {\n    setSearched(\"\");\n    requestKeySearch(searched);\n  };\n\n  useEffect(() => {\n    setSearchResult(applicationsWithKeyFromLS());\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Helmet title=\"Applications\" />\n      <Grid justify=\"center\" container>\n        <Grid item sm={11} md={11} lg={11}>\n          <Grid justify=\"space-between\" container spacing={0}>\n            <Grid item sm={8} md={8} xs={12}>\n              <Box pl={1} pt={4} pb={2}>\n                <Typography testid=\"AppListingHeader\" variant=\"h5\">\n                  Applications\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item sm={4} md={4} xs={12}>\n              <Box pl={8} pt={4} pb={2}>\n                <Search\n                  testId=\"AppListingSearchText\"\n                  searched={searched}\n                  requestSearch={requestKeySearch}\n                  cancelSearch={cancelKeySearch}\n                  placeholder={\"Search for publish or subscribe key\"}\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <br />\n      <Grid container spacing={0} justify=\"center\">\n        <Grid item xs={12} sm={11} md={11} lg={11}>\n          <ApplicationTable searchResult={searchResult} />\n        </Grid>\n      </Grid>\n      {appsAlert.error.status && <SnackBar msg={appsAlert.error.msg} status={\"info\"} />}\n      {appsAlert.success.status && <SnackBar msg={appsAlert.success.msg} status={\"success\"} />}\n    </React.Fragment>\n  );\n}\n\nexport default AppsListing;\n","import React from \"react\";\nimport Header from \"../../components/core/header/Header\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport AppsListing from \"../../components/applications/AppsListing\";\n\nconst Dashboard = () => {\n  return (\n    <>\n      <CssBaseline />\n      <Header />\n      <AppsListing />\n    </>\n  );\n};\nexport default Dashboard;\n","import { makeStyles } from \"@material-ui/core/styles\";\nconst drawerWidth = 220;\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    padding: \"10px\",\n  },\n  textModerationIcon: {\n    color: \"#00e676\",\n  },\n  overviewIcon: {\n    color: \"#673ab7\",\n  },\n  channelIcon: {\n    color: \"#e91e63\",\n  },\n  settingsIcon: {\n    color: \"#f44336\",\n  },\n  chatIcon: {\n    color: \"#ffc400\",\n  },\n  userIcon: {\n    color: \"#00e5ff\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"xs\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  listItemRoot: {\n    minWidth: \"40px\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Collapse,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../../style/sidebar\";\nimport {\n  DescriptionOutlined,\n  HomeOutlined,\n  MailOutline,\n  ChatBubbleOutline,\n  PersonOutlined,\n  SettingsOutlined,\n  ExpandMore,\n  ExpandLess,\n} from \"@material-ui/icons\";\n\nfunction Sidebar({ content }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <List disablePadding={true}>\n        <ListItem\n          id=\"overviewItem\"\n          onClick={() => history.push(\"/overview\")}\n          selected={history.location.pathname === \"/overview\"}\n          button\n        >\n          <ListItemIcon className={classes.listItemRoot}>\n            <HomeOutlined className={classes.overviewIcon} />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"body2\">Overview</Typography>\n          </ListItemText>\n        </ListItem>\n\n        <ListItem id=\"settingsItem\" button onClick={handleClick}>\n          <ListItemIcon className={classes.listItemRoot}>\n            <SettingsOutlined className={classes.settingsIcon} />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"body2\">Settings</Typography>\n          </ListItemText>\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem\n              button\n              onClick={() => history.push(\"/text-moderation\")}\n              selected={history.location.pathname === \"/text-moderation\"}\n            >\n              <ListItemIcon className={classes.settingsItemRoot}>\n                <DescriptionOutlined className={classes.textModerationIcon} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography variant=\"body2\">Text Moderation</Typography>\n              </ListItemText>\n            </ListItem>\n\n            <ListItem button onClick={() => history.push(\"/image-moderation\")}>\n              <ListItemIcon className={classes.settingsItemRoot}>\n                <ChatBubbleOutline className={classes.chatIcon} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography variant=\"body2\">Image Moderation</Typography>\n              </ListItemText>\n            </ListItem>\n          </List>\n        </Collapse>\n\n        <ListItem\n          id=\"usersItem\"\n          button\n          onClick={() => history.push(\"/users\")}\n          selected={history.location.pathname === \"/users\"}\n        >\n          <ListItemIcon className={classes.listItemRoot}>\n            <PersonOutlined className={classes.userIcon} />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"body2\">Users</Typography>\n          </ListItemText>\n        </ListItem>\n\n        <ListItem\n          id=\"channelsItem\"\n          button\n          onClick={() => history.push(\"/channels\")}\n          selected={history.location.pathname === \"/channels\"}\n        >\n          <ListItemIcon className={classes.listItemRoot}>\n            <MailOutline className={classes.channelIcon} />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography variant=\"body2\">Channels</Typography>\n          </ListItemText>\n        </ListItem>\n      </List>\n    </div>\n  );\n  return (\n    <div className={classes.root}>\n      <nav className={classes.drawer}>{drawer}</nav>\n      <main className={classes.content}>{content}</main>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Header from \"../components/core/header/Header\";\nimport Sidebar from \"../components/core/Sidebar\";\n\nconst Dashboard = ({ children }) => {\n  return (\n    <>\n      <CssBaseline />\n      <Header />\n      <Sidebar content={children} />\n    </>\n  );\n};\n\nexport default Dashboard;\n","export const handleChange =\n  ({ setState, state, profanityList, setProfanityList, name }) =>\n  (e) => {\n    if (e.target.name === \"wordListChannel\") {\n      setState({\n        ...state,\n        channelOnChange: true,\n        wordList: { ...state.wordList, wordListChannel: e.target.value },\n      });\n    } else if (e.target.name === \"wordListLanguage\") {\n      setState({\n        ...state,\n        wordList: { ...state.wordList, wordListLanguage: e.target.value },\n      });\n    } else if (e.target.name === \"wordListLanguageWords\") {\n      setProfanityList({\n        ...profanityList,\n        [state.wordList.wordListLanguage]: e.target.value,\n      });\n    } else if (e.target.name === \"wordListModtype\") {\n      setState({\n        ...state,\n        wordList: { ...state.wordList, wordListModType: e.target.value },\n      });\n    } else if (e.target.name === \"wordListCharacterToMaskWith\") {\n      setState({\n        ...state,\n        wordList: {\n          ...state.wordList,\n          wordListCharacterToMaskWith: e.target.value,\n        },\n      });\n    } else if (e.target.name === \"wordListRerouteMessage\") {\n      setState({\n        ...state,\n        wordList: {\n          ...state.wordList,\n          wordListReRouteMessages: e.target.checked,\n        },\n      });\n    } else if (name === \"applyToAllChannelIdsWordlist\") {\n      if (e.target.checked) {\n        setState({\n          ...state,\n          wordList: {\n            ...state.wordList,\n            wordListChannel: \"*\",\n            applyToAllChannelIdsWordlist: e.target.checked,\n          },\n        });\n      } else {\n        setState({\n          ...state,\n          wordList: {\n            ...state.wordList,\n            applyToAllChannelIdsWordlist: e.target.checked,\n          },\n        });\n      }\n    }\n  };\n","import React from \"react\";\nimport {\n  Grid,\n  Button,\n  Box,\n  Card,\n  Chip,\n  Typography,\n  TextField,\n  Select,\n  Checkbox,\n  CircularProgress,\n  FormControl,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { getProfanityWordsByLanguage, constantBoolean } from \"../../../utils/helpers\";\nimport { useStyles } from \"../../../style/textModeration.js\";\nimport { handleChange } from \"./WordListHandler\";\nimport { LightTooltip } from \"../../../style/tooltip\";\n\nconst WordListProfanityMethod = ({\n  handleSave,\n  defaultWords,\n  state,\n  setState,\n  profanityList,\n  setProfanityList,\n}) => {\n  const classes = useStyles();\n  const languageList = [\"English\", \"Hindi\", \"Spanish\", \"Portugese\", \"French\"];\n\n  const {\n    wordListChannel,\n    wordListLanguage,\n    wordListModType,\n    wordsListPatternError,\n    wordListReRouteMessages,\n    wordsListMaskCharError,\n    wordsListChannelError,\n    applyToAllChannelIdsWordlist,\n    wordListCharacterToMaskWith,\n  } = state.wordList;\n\n  const checkboxForReroute = constantBoolean(wordListReRouteMessages);\n  const checkForApplyToAllChannelIds = constantBoolean(applyToAllChannelIdsWordlist);\n\n  return (\n    <>\n      <Card className={classes.profanityCardRoot}>\n        <Grid container>\n          <Grid item>\n            <label testId=\"Channel_Id\" className={classes.labelStyle}>\n              Channel ID\n            </label>\n          </Grid>\n          <Grid item>\n            <Box className={classes.infoIcon}>\n              <LightTooltip title=\"Note: Please add a Channel ID or a Channel pattern. eg. channel.* OR pubNub. Channel ID pattern applies to BOTH text & image moderation if both are enabled.\">\n                <img src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"} alt=\"info-circle\" />\n              </LightTooltip>\n            </Box>\n          </Grid>\n        </Grid>\n        <Box pt={1} mb={2}>\n          <TextField\n            id=\"channelId\"\n            placeholder=\"Channel\"\n            name=\"wordListChannel\"\n            disabled={checkForApplyToAllChannelIds}\n            error={wordsListChannelError}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            value={wordListChannel}\n            onChange={handleChange({\n              setState,\n              state,\n              profanityList,\n              setProfanityList,\n            })}\n          />\n        </Box>\n        <Grid item>\n          <Grid container justify=\"flex-start\">\n            <Grid item>\n              <Checkbox\n                id=\"allChannelIdcheckBox\"\n                checked={checkForApplyToAllChannelIds}\n                onChange={handleChange({\n                  setState,\n                  state,\n                  name: \"applyToAllChannelIdsWordlist\",\n                })}\n              />\n            </Grid>\n            <Grid item>\n              <Box pt={1}>\n                <Typography testid=\"allChannelIdText\" variant=\"body1\">\n                  Apply to All Channel IDs\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"flex-start\">\n          <Grid item sm={5}>\n            <label testId=\"language\" className={classes.labelStyle}>\n              Language\n            </label>\n            <Box pt={1} mb={2}>\n              <FormControl\n                className={classes.formControl}\n                size=\"small\"\n                placeholder=\"Langauge\"\n                fullWidth\n              >\n                <Select\n                  id=\"wordListLanguage\"\n                  variant=\"outlined\"\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    },\n                    getContentAnchorEl: null,\n                  }}\n                  name=\"wordListLanguage\"\n                  value={wordListLanguage}\n                  onChange={handleChange({\n                    setState,\n                    state,\n                    profanityList,\n                    setProfanityList,\n                  })}\n                  inputProps={{ \"aria-label\": \"Without label\" }}\n                >\n                  {languageList.map((language, index) => {\n                    return (\n                      <MenuItem value={language} key={index}>\n                        {language}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"space-between\">\n          <Grid item>\n            <Grid container>\n              <Grid item>\n                <label testId=\"WordList\" className={classes.labelStyle}>\n                  Word List\n                </label>\n              </Grid>\n              <Grid item>\n                <Box className={classes.infoIcon}>\n                  <LightTooltip title=\"Note: Please add comma after a every word. No spaces are allowed\">\n                    <img\n                      src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                      alt=\"info-circle\"\n                    />\n                  </LightTooltip>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography\n              testid=\"defaultWordsLabel\"\n              align=\"right\"\n              className={classes.defaultText}\n              onClick={() => defaultWords(wordListLanguage)}\n            >\n              Use Default words\n            </Typography>\n          </Grid>\n        </Grid>\n        <Box pt={1} mb={2}>\n          <TextField\n            id=\"defaultWordsBox\"\n            placeholder=\"comma,separated,list,of,words\"\n            className={classes.languageWords}\n            multiline\n            error={wordsListPatternError}\n            rowsMax={6}\n            name=\"wordListLanguageWords\"\n            value={getProfanityWordsByLanguage(profanityList, wordListLanguage)}\n            onChange={handleChange({\n              setState,\n              state,\n              profanityList,\n              setProfanityList,\n            })}\n            fullWidth\n            variant=\"outlined\"\n          />\n        </Box>\n        <br />\n        <br />\n        <Grid container justify=\"flex-start\" spacing={6}>\n          <Grid item sm={6} md={6}>\n            <label testId=\"MaskOrBlock\" className={classes.labelStyle}>\n              When Profanity is detected\n            </label>\n            <Box pt={1} mb={2}>\n              <FormControl className={classes.formControl} size=\"small\" fullWidth>\n                <Select\n                  id=\"MaskOrBlockOption\"\n                  variant=\"outlined\"\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    },\n                    getContentAnchorEl: null,\n                  }}\n                  name=\"wordListModtype\"\n                  onChange={handleChange({\n                    setState,\n                    state,\n                    profanityList,\n                    setProfanityList,\n                  })}\n                  value={wordListModType}\n                  inputProps={{ \"aria-label\": \"Without label\" }}\n                >\n                  <MenuItem value=\"Mask-word\">Mask Word</MenuItem>\n                  <MenuItem value=\"Block-message\">Block Message</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n          <Grid item sm={6} md={6}>\n            {wordListModType === \"Mask-word\" && (\n              <>\n                <Grid container>\n                  <Grid item>\n                    <label testId=\"maskLabel\" className={classes.label}>\n                      Set a masking character\n                    </label>\n                  </Grid>\n                  <Grid item>\n                    <Box className={classes.infoIcon}>\n                      <LightTooltip title=\"Note: Default value will be *\">\n                        <img\n                          src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                          alt=\"info-circle\"\n                        />\n                      </LightTooltip>\n                    </Box>\n                  </Grid>\n                </Grid>\n\n                <Box pt={1}>\n                  <TextField\n                    id=\"maskChar\"\n                    size=\"small\"\n                    placeholder=\"Set\"\n                    inputProps={{ maxLength: 1 }}\n                    error={wordsListMaskCharError}\n                    className={classes.languageWords}\n                    value={wordListCharacterToMaskWith}\n                    onChange={handleChange({\n                      setState,\n                      state,\n                      profanityList,\n                      setProfanityList,\n                    })}\n                    fullWidth\n                    name=\"wordListCharacterToMaskWith\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n              </>\n            )}\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"flex-start\">\n          <Grid item>\n            <Grid container>\n              <Grid item>\n                <Checkbox\n                  id=\"reRouteCheckBox\"\n                  name=\"wordListRerouteMessage\"\n                  onChange={handleChange({\n                    setState,\n                    state,\n                    profanityList,\n                    setProfanityList,\n                  })}\n                  checked={checkboxForReroute}\n                />\n              </Grid>\n              <Grid item>\n                <Box pt={1}>\n                  <Typography testid=\"ReRouteLabel\" variant=\"body1\">\n                    Route messages to\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Box>\n              <Chip className={classes.reroute} label={\"banned.\" + wordListChannel} />\n            </Box>\n          </Grid>\n        </Grid>\n\n        <br />\n        <Grid container justify=\"space-between\" spacing={2}>\n          <Grid item></Grid>\n          <Grid item>\n            <Button\n              id=\"save\"\n              disabled={state.saveLoading}\n              className={classes.saveButton}\n              onClick={handleSave}\n              variant=\"contained\"\n            >\n              {state.saveLoading ? (\n                <CircularProgress\n                  size={25}\n                  thickness={4}\n                  color=\"primary\"\n                  className={classes.loader}\n                />\n              ) : (\n                <></>\n              )}\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n    </>\n  );\n};\n\nexport default WordListProfanityMethod;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  filterText: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 24px/16px Graphik\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#606060\",\n    opacity: 1,\n    fontSize: \"18px\",\n  },\n  label: {\n    color: \"#606060\",\n  },\n  cardRoot: {\n    padding: \"20px\",\n  },\n  cancelButtonStyle: {\n    width: \"150px\",\n    margin: \"3px\",\n    height: \"37px\",\n    boxShadow: \"0px 0px 0px white\",\n    backgroundColor: \"white\",\n    border: \"1px solid #707070\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13px/16px var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    color: \"#707070\",\n    fontSize: \"13px\",\n  },\n  saveButtonStyle: {\n    background: \"#6387ED 0% 0% no-repeat padding-box\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    color: \"white\",\n    width: \"150px\",\n    margin: \"8px\",\n    height: \"37px\",\n    fontSize: \"13px\",\n    \"&:hover\": {\n      background: \"#6387ED 0% 0% no-repeat padding-box\",\n      color: \"white\",\n    },\n  },\n\n  testText: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textDecoration: \"underline\",\n    color: \"#6387ED\",\n    cursor: \"pointer\",\n    opacity: 1,\n    \"&:hover\": {\n      background: \"#E7EDFF\",\n      color: \"#6387ED\",\n    },\n  },\n  loaderStyle: {\n    marginRight: \"5px\",\n  },\n  reroute: {\n    textTransform: \"none\",\n    marginLeft: \"8px\",\n    backgroundColor: \"#FCF0EF\",\n    color: \"#FB6340\",\n    marginTop: \"5px\",\n  },\n  infoIcon: {\n    padding: \"3px 0px 0px 5px\",\n  },\n}));\n","import { withStyles, makeStyles } from \"@material-ui/core/styles\";\nexport const SlideBar = withStyles({\n  root: {\n    color: \"#6387ED\",\n    height: 8,\n  },\n  thumb: {\n    height: 15,\n    width: 15,\n    backgroundColor: \"#6387ED\",\n    border: \"2px solid currentColor\",\n    marginTop: -4,\n    marginLeft: -4,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\",\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n});\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n","import React from \"react\";\nimport { useStyles, SlideBar } from \"../../style/slideBar\";\nimport { Slider } from \"@material-ui/core\";\n\nconst PrettoSlider = SlideBar(Slider);\n\nexport default function SliderComponent({ value, onChange, name }) {\n  const classes = useStyles();\n\n  const marks = [\n    {\n      value: 0,\n      label: name === \"tisane\" ? \"None\" : 0,\n    },\n    {\n      value: 0.25,\n      label: name === \"tisane\" ? \"Extreme\" : 0.25,\n    },\n    {\n      value: 0.5,\n      label: name === \"tisane\" ? \"High\" : 0.5,\n    },\n    {\n      value: 0.75,\n      label: name === \"tisane\" ? \"Medium\" : 0.75,\n    },\n    {\n      value: 1,\n      label: name === \"tisane\" ? \"Low\" : 1,\n    },\n  ];\n\n  function valuetext(values) {\n    return `${values}`;\n  }\n\n  return (\n    <div className={classes.root}>\n      <PrettoSlider\n        value={value}\n        min={0}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider\"\n        step={0.25}\n        marks={marks}\n        max={1}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n","export const handleChange =\n  ({ setState, state, name }) =>\n  (e, value) => {\n    if (e.target.name === \"toolForAutomaticDetection\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          toolForAutomaticDetection: e.target.value,\n        },\n      });\n    } else if (e.target.name === \"automaticDetectionChannel\") {\n      setState({\n        ...state,\n        channelOnChange: true,\n        automaticDetection: {\n          ...state.automaticDetection,\n          automaticDetectionChannel: e.target.value,\n        },\n      });\n    } else if (e.target.name === \"automaticDetectionReRouteMessages\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          automaticDetectionReRouteMessages: e.target.checked,\n        },\n      });\n    } else if (e.target.name === \"automaticDetectionModType\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          automaticDetectionModType: e.target.value,\n        },\n      });\n    } else if (name === \"riskFactorThresholdForVulgar\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaRiskFactorThresholdVulgar: value,\n        },\n      });\n    } else if (name === \"riskFactorThresholdForSexting\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaRiskFactorThresholdSexting: value,\n        },\n      });\n    } else if (name === \"riskFactorThresholdForRacism\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaRiskFactorThresholdRacism: value,\n        },\n      });\n    } else if (e.target.name === \"siftNinjaAccountName\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaAccountName: e.target.value,\n        },\n      });\n    } else if (e.target.name === \"siftNinjaChannelName\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaChannelName: e.target.value,\n        },\n      });\n    } else if (e.target.name === \"siftNinjaApiKey\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          siftNinjaApiKey: e.target.value,\n        },\n      });\n    } else if (e.target.name === \"automaticDetectionCharacterToMaskWith\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          automaticDetectionCharacterToMaskWith: e.target.value,\n        },\n      });\n    } else if (name === \"applyToAllChannelIdsAutomatic\") {\n      if (e.target.checked) {\n        setState({\n          ...state,\n          automaticDetection: {\n            ...state.automaticDetection,\n            automaticDetectionChannel: \"*\",\n            applyToAllChannelIdsAutomatic: e.target.checked,\n          },\n        });\n      } else {\n        setState({\n          ...state,\n          automaticDetection: {\n            ...state.automaticDetection,\n            applyToAllChannelIdsAutomatic: e.target.checked,\n          },\n        });\n      }\n    }\n  };\n","export const handleTisaneChange =\n  ({ setState, state, name }) =>\n  (e, value) => {\n    if (e.target.name === \"tisaneApiKey\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneApiKey: e.target.value,\n        },\n      });\n    } else if (e.target.name === \"tisaneLanguage\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneLanguage: e.target.value,\n        },\n      });\n    } else if (name === \"riskFactorThresholdForBigotry\") {\n      setState({\n        ...state,\n        channelOnChange: true,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneRiskFactorThresholdBigotry: value,\n        },\n      });\n    } else if (name === \"riskFactorThresholdForCyberBullying\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneRiskFactorThresholdCyberBullying: value,\n        },\n      });\n    } else if (name === \"riskFactorThresholdForCriminalActivity\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneRiskFactorThresholdCriminalActivity: value,\n        },\n      });\n    } else if (name === \"riskFactorThresholdForSexualAdvances\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneRiskFactorThresholdSexualAdvances: value,\n        },\n      });\n    } else if (name === \"riskFactorThresholdForProfanity\") {\n      setState({\n        ...state,\n        automaticDetection: {\n          ...state.automaticDetection,\n          tisaneRiskFactorThresholdProfanity: value,\n        },\n      });\n    }\n  };\n","import React from \"react\";\nimport {\n  Grid,\n  Button,\n  Box,\n  Card,\n  Chip,\n  Typography,\n  TextField,\n  Select,\n  Checkbox,\n  CircularProgress,\n  FormControl,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../../../style/automaticProfanityMethod\";\nimport Slider from \"../../core/SliderComponent\";\nimport { constantBoolean } from \"../../../utils/helpers\";\nimport { LightTooltip } from \"../../../style/tooltip\";\nimport { handleChange } from \"./AutomaticHandler\";\nimport { handleTisaneChange } from \"./TisaneHandler\";\n\nconst AutomaticProfanityMethod = ({ state, setState, handleSave }) => {\n  const {\n    toolForAutomaticDetection,\n    siftNinjaRiskFactorThresholdVulgar,\n    siftNinjaRiskFactorThresholdSexting,\n    siftNinjaRiskFactorThresholdRacism,\n    siftNinjaAccountName,\n    siftNinjaChannelName,\n    siftNinjaApiKey,\n    automaticMaskCharError,\n    automaticChannelError,\n    automaticDetectionChannel,\n    automaticDetectionReRouteMessages,\n    automaticDetectionModType,\n    applyToAllChannelIdsAutomatic,\n    automaticDetectionCharacterToMaskWith,\n    tisaneRiskFactorThresholdBigotry,\n    tisaneRiskFactorThresholdCyberBullying,\n    tisaneRiskFactorThresholdCriminalActivity,\n    tisaneRiskFactorThresholdSexualAdvances,\n    tisaneRiskFactorThresholdProfanity,\n    tisaneApiKey,\n    tisaneLanguage,\n  } = state.automaticDetection;\n\n  const classes = useStyles();\n  const checkboxForReroute = constantBoolean(automaticDetectionReRouteMessages);\n  const checkForApplyToAllChannelIds = constantBoolean(applyToAllChannelIdsAutomatic);\n\n  const TooltipText = (\n    <>\n      <span>Sign up with </span>\n      <a\n        style={{ fontWeight: 600, color: \"black\", textDecorationLine: \"none\" }}\n        href=\"https://tisane.ai/signup/\"\n      >\n        Tisane.ai\n      </a>\n      <span> locate your key under your </span>\n      <a\n        style={{ fontWeight: 600, color: \"black\", textDecorationLine: \"none\" }}\n        href=\"https://tisane.ai/developer/\"\n      >\n        Developer Profile.\n      </a>\n      <span> Use primary or secondary key. </span>\n    </>\n  );\n\n  const languageList = [\"Autodetect\", \"English\", \"Spanish\", \"Portugese\", \"French\"];\n\n  return (\n    <>\n      <Card className={classes.cardRoot}>\n        <Box>\n          <Grid container>\n            <Grid item>\n              <label testId=\"Channel_Id\" className={classes.label}>\n                Channel ID\n              </label>\n            </Grid>\n            <Grid item>\n              <Box className={classes.infoIcon}>\n                <LightTooltip title=\"Note: Please add a Channel ID or a Channel pattern. eg. channel.* OR pubNub. Channel ID pattern applies to BOTH text & image moderation if both are enabled.\">\n                  <img src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"} alt=\"info-circle\" />\n                </LightTooltip>\n              </Box>\n            </Grid>\n          </Grid>\n\n          <Box pt={1} mb={2}>\n            <TextField\n              id=\"channelId\"\n              variant=\"outlined\"\n              placeholder=\"Enter channel or channel pattern here Under18.*, Under18\"\n              size=\"small\"\n              fullWidth\n              disabled={checkForApplyToAllChannelIds}\n              error={automaticChannelError}\n              name=\"automaticDetectionChannel\"\n              value={automaticDetectionChannel}\n              onChange={handleChange({ setState, state })}\n            />\n          </Box>\n        </Box>\n        <Grid item>\n          <Grid container justify=\"flex-start\">\n            <Grid item>\n              <Checkbox\n                id=\"applyAll\"\n                checked={checkForApplyToAllChannelIds}\n                onChange={handleChange({\n                  setState,\n                  state,\n                  name: \"applyToAllChannelIdsAutomatic\",\n                })}\n              />\n            </Grid>\n            <Grid item>\n              <Box pt={1} pl={1}>\n                <Typography testId=\"applyAll_channel\" variant=\"body1\">\n                  Apply to All Channel IDs\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"flex-start\">\n          <Grid item sm={12}>\n            <label testId=\"SelectToolLabel\" className={classes.label}>\n              Select third party tool for Automatic Detection\n            </label>\n            <Box pt={1} mb={2}>\n              <FormControl size=\"small\" fullWidth>\n                <Select\n                  id=\"selectTool\"\n                  variant=\"outlined\"\n                  name=\"toolForAutomaticDetection\"\n                  value={toolForAutomaticDetection}\n                  onChange={handleChange({ setState, state })}\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    },\n                    getContentAnchorEl: null,\n                  }}\n                >\n                  <MenuItem value=\"tisane\">Tisane.ai</MenuItem>\n                  <MenuItem value=\"siftninja\">SiftNinja</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n        </Grid>\n        <br />\n        {toolForAutomaticDetection === \"siftninja\" && (\n          <>\n            <Box pt={1}>\n              <Grid container>\n                <Grid item>\n                  <label testid=\"accountName\" className={classes.label}>\n                    SiftNinja Account Name\n                  </label>\n                </Grid>\n                <Grid item>\n                  <Box className={classes.infoIcon}>\n                    <LightTooltip title=\"This option is only available for users who have an existing SiftNinja account\">\n                      <img\n                        src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                        alt=\"info-circle\"\n                      />\n                    </LightTooltip>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Box pt={1} mb={2}>\n                <TextField\n                  id=\"siftAccountName\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  placeholder=\"SiftNinja Account Name\"\n                  fullWidth\n                  name=\"siftNinjaAccountName\"\n                  value={siftNinjaAccountName}\n                  onChange={handleChange({ setState, state })}\n                />\n              </Box>\n            </Box>\n            <br />\n            <Box pt={1}>\n              <Grid container>\n                <Grid item>\n                  <label testId=\"siftChannelName\" className={classes.label}>\n                    SiftNinja Channel Name\n                  </label>\n                </Grid>\n                <Grid item>\n                  <Box className={classes.infoIcon}>\n                    <LightTooltip title=\"This option is only available for users who have an existing SiftNinja account\">\n                      <img\n                        src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                        alt=\"info-circle\"\n                      />\n                    </LightTooltip>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Box pt={1} mb={2}>\n                <TextField\n                  id=\"siftChannelName\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  name=\"siftNinjaChannelName\"\n                  placeholder=\"SiftNinja Channel Name\"\n                  value={siftNinjaChannelName}\n                  onChange={handleChange({ setState, state })}\n                />\n              </Box>\n            </Box>\n            <br />\n            <Box pt={1}>\n              <Grid container>\n                <Grid item>\n                  <label testid=\"siftApiKey\" className={classes.label}>\n                    SiftNinja API Key\n                  </label>\n                </Grid>\n                <Grid item>\n                  <Box className={classes.infoIcon}>\n                    <LightTooltip title=\"This option is only available for users who have an existing SiftNinja account\">\n                      <img\n                        src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                        alt=\"info-circle\"\n                      />\n                    </LightTooltip>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Box pt={1} mb={2}>\n                <TextField\n                  id=\"siftApiKey\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  name=\"siftNinjaApiKey\"\n                  placeholder=\"SiftNinja API key\"\n                  value={siftNinjaApiKey}\n                  onChange={handleChange({ setState, state })}\n                />\n                <Typography testid=\"connectivity\" align=\"right\" className={classes.testText}>\n                  Test Conectivity\n                </Typography>\n              </Box>\n            </Box>\n            <br />\n            <Grid container justify=\"space-between\" spacing={6}>\n              <Grid item sm={6} xs={12} md={6} lg={6}>\n                <Box>\n                  <label testid=\"vulgarRiskFactor\" className={classes.label}>\n                    SiftNinja Risk Factor Threshold For Vulgarity\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"vulgarRiskFactor\"\n                      name={toolForAutomaticDetection}\n                      value={siftNinjaRiskFactorThresholdVulgar}\n                      onChange={handleChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForVulgar\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={6} md={6} lg={6}>\n                <Box>\n                  <label testId=\"SextingRisk\" className={classes.label}>\n                    SiftNinja Risk Factor Threshold For Sexting\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"SextingRisk\"\n                      name={toolForAutomaticDetection}\n                      value={siftNinjaRiskFactorThresholdSexting}\n                      onChange={handleChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForSexting\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={6} md={6} lg={6}>\n                <Box>\n                  <label testid=\"racismRisk\" className={classes.label}>\n                    SiftNinja Risk Factor Threshold For Racism\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"racismRisk\"\n                      name={toolForAutomaticDetection}\n                      value={siftNinjaRiskFactorThresholdRacism}\n                      onChange={handleChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForRacism\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </>\n        )}\n        {toolForAutomaticDetection === \"tisane\" && (\n          <>\n            <Box pt={1}>\n              <Grid container>\n                <Grid item>\n                  <label testid=\"tisaneApiKey\" className={classes.label}>\n                    Tisane.ai API Key\n                  </label>\n                </Grid>\n                <Grid item>\n                  <Box className={classes.infoIcon}>\n                    <LightTooltip title={TooltipText} interactive>\n                      <img\n                        src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                        alt=\"info-circle\"\n                      />\n                    </LightTooltip>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Box pt={1} mb={2}>\n                <TextField\n                  id=\"tisaneApiKey\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  fullWidth\n                  name=\"tisaneApiKey\"\n                  value={tisaneApiKey}\n                  placeholder=\"Tisane.ai API key\"\n                  onChange={handleTisaneChange({ setState, state })}\n                />\n              </Box>\n            </Box>\n            <br />\n            <Grid container justify=\"flex-start\">\n              <Grid item sm={5}>\n                <label testid=\"lang\" className={classes.labelStyle}>\n                  Language\n                </label>\n                <Box pt={1} mb={2}>\n                  <FormControl\n                    className={classes.formControl}\n                    size=\"small\"\n                    placeholder=\"Langauge\"\n                    fullWidth\n                  >\n                    <Select\n                      id=\"lang\"\n                      variant=\"outlined\"\n                      MenuProps={{\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\",\n                        },\n                        getContentAnchorEl: null,\n                      }}\n                      value={tisaneLanguage}\n                      name=\"tisaneLanguage\"\n                      inputProps={{ \"aria-label\": \"Without label\" }}\n                      onChange={handleTisaneChange({ setState, state })}\n                    >\n                      {languageList.map((language, index) => {\n                        return (\n                          <MenuItem value={language} key={index}>\n                            {language}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                </Box>\n              </Grid>\n            </Grid>\n            <br />\n            <Grid container justify=\"space-between\" spacing={6}>\n              <Grid item sm={6} xs={12} md={6} lg={6}>\n                <Box pl={1}>\n                  <label testid=\"BigotryLevel\" className={classes.label}>\n                    Filter Level For Bigotry (Hate Speech)\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"BigotryLevel\"\n                      value={tisaneRiskFactorThresholdBigotry}\n                      name={toolForAutomaticDetection}\n                      onChange={handleTisaneChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForBigotry\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={6} md={6} lg={6}>\n                <Box pl={1}>\n                  <label testid=\"CyberBullying\" className={classes.label}>\n                    Filter Level For Personal Attacks (Cyberbullying)\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"CyberBullying\"\n                      value={tisaneRiskFactorThresholdCyberBullying}\n                      name={toolForAutomaticDetection}\n                      onChange={handleTisaneChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForCyberBullying\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={12} md={6} lg={6}>\n                <Box pl={1}>\n                  <label testid=\"criminalLevel\" className={classes.label}>\n                    Filter Level For Criminal Activity\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"criminalLevel\"\n                      value={tisaneRiskFactorThresholdCriminalActivity}\n                      name={toolForAutomaticDetection}\n                      onChange={handleTisaneChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForCriminalActivity\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={6} md={6} lg={6}>\n                <Box pl={1}>\n                  <label testid=\"sexualLevel\" className={classes.label}>\n                    Filter Level For Sexual Advances\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"sexualLevel\"\n                      value={tisaneRiskFactorThresholdSexualAdvances}\n                      name={toolForAutomaticDetection}\n                      onChange={handleTisaneChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForSexualAdvances\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item sm={6} xs={12} md={6} lg={6}>\n                <Box pl={1}>\n                  <label testid=\"ProfanityLevel\" className={classes.label}>\n                    Filter Level For Profanity\n                  </label>\n                  <Box pt={1}>\n                    <Slider\n                      id=\"ProfanityLevel\"\n                      value={tisaneRiskFactorThresholdProfanity}\n                      name={toolForAutomaticDetection}\n                      onChange={handleTisaneChange({\n                        setState,\n                        state,\n                        name: \"riskFactorThresholdForProfanity\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </>\n        )}\n\n        <Grid container justify=\"flex-start\" spacing={6}>\n          <Grid item sm={6} md={6}>\n            <label testid=\"blockOrMask\" className={classes.label}>\n              When profanity is detected\n            </label>\n            <Box pt={1} mb={2}>\n              <FormControl size=\"small\" fullWidth>\n                <Select\n                  id=\"blockOrMask\"\n                  variant=\"outlined\"\n                  value={automaticDetectionModType}\n                  name=\"automaticDetectionModType\"\n                  onChange={handleChange({ setState, state })}\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: \"bottom\",\n                      horizontal: \"left\",\n                    },\n                    getContentAnchorEl: null,\n                  }}\n                  inputProps={{ \"aria-label\": \"Without label\" }}\n                >\n                  <MenuItem value=\"mask-message\">Mask Message</MenuItem>\n                  <MenuItem value=\"block-message\">Block Message</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n          <Grid item sm={6} md={6}>\n            {automaticDetectionModType === \"mask-message\" && (\n              <>\n                <Grid container>\n                  <Grid item>\n                    <label testid=\"setChar\" className={classes.label}>\n                      Set a masking character\n                    </label>\n                  </Grid>\n                  <Grid item>\n                    <Box className={classes.infoIcon}>\n                      <LightTooltip title=\"Note: Default value will be *\">\n                        <img\n                          src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                          alt=\"info-circle\"\n                        />\n                      </LightTooltip>\n                    </Box>\n                  </Grid>\n                </Grid>\n                <Box pt={1}>\n                  <TextField\n                    id=\"setChar\"\n                    size=\"small\"\n                    placeholder=\"Set\"\n                    error={automaticMaskCharError}\n                    inputProps={{ maxLength: 1 }}\n                    className={classes.languageWords}\n                    value={automaticDetectionCharacterToMaskWith}\n                    name=\"automaticDetectionCharacterToMaskWith\"\n                    onChange={handleChange({ setState, state })}\n                    fullWidth\n                    variant=\"outlined\"\n                  />\n                </Box>\n              </>\n            )}\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container>\n          <Grid item>\n            <Grid container justify=\"flex-start\">\n              <Grid item>\n                <Checkbox\n                  id=\"reRoute\"\n                  name=\"automaticDetectionReRouteMessages\"\n                  onChange={handleChange({ setState, state })}\n                  checked={checkboxForReroute}\n                />\n              </Grid>\n              <Grid item>\n                <Box pt={1} pl={1}>\n                  <Typography testid=\"reRouteMsg\" variant=\"body1\">\n                    Route messages to\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Box>\n              <Chip className={classes.reroute} label={\"banned.\" + automaticDetectionChannel} />\n            </Box>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item></Grid>\n          <Grid item>\n            <Button\n              id=\"save\"\n              disabled={state.saveLoading}\n              className={classes.saveButtonStyle}\n              onClick={handleSave}\n              variant=\"contained\"\n            >\n              {state.saveLoading ? (\n                <CircularProgress\n                  size={25}\n                  thickness={4}\n                  color=\"primary\"\n                  className={classes.loaderStyle}\n                />\n              ) : (\n                <></>\n              )}\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n    </>\n  );\n};\n\nexport default AutomaticProfanityMethod;\n","import React from \"react\";\nimport WordListProfanityMethod from \"./wordListModeration/WordListProfanityMethod\";\nimport AutomaticProfanityMethod from \"./automaticModeration/AutomaticProfanityMethod\";\n\nconst ModerationMethods = ({\n  handleSave,\n  defaultWords,\n  state,\n  setState,\n  profanityList,\n  setProfanityList,\n}) => {\n  if (state.wordListProfanity === \"true\") {\n    return (\n      <WordListProfanityMethod\n        handleSave={handleSave}\n        defaultWords={defaultWords}\n        state={state}\n        setState={setState}\n        profanityList={profanityList}\n        setProfanityList={setProfanityList}\n      />\n    );\n  } else if (state.automaticProfanity === \"true\") {\n    return <AutomaticProfanityMethod state={state} setState={setState} handleSave={handleSave} />;\n  } else {\n    return <></>;\n  }\n};\n\nexport default ModerationMethods;\n","import { withStyles } from \"@material-ui/core/styles\";\nconst SwitchButton = withStyles((theme) => ({\n  root: {\n    width: 49,\n    height: 24,\n    padding: 0,\n    marginLeft: \"15px\",\n    margin: theme.spacing(0),\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(23px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#6387ED\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#52d869\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 22,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}));\n\nexport default SwitchButton;\n","import Switch from \"@material-ui/core/Switch\";\nimport SwitchButtonStyle from \"../../style/switchButton\";\n\nconst SwitchButton = SwitchButtonStyle(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport default SwitchButton;\n","import React from \"react\";\nimport { Grid, Box, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/textModeration.js\";\n\nconst FilterCard = ({ state, handleClick }) => {\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"flex-start\" spacing={3}>\n      <Grid item>\n        <Box\n          className={\n            state.wordListProfanity === \"true\" ? classes.methodSelected : classes.methodNotSelected\n          }\n          onClick={handleClick(\"wordListMethod\")}\n        >\n          <Grid container justify=\"center\">\n            <Box p={1}>\n              <img\n                alt=\"\"\n                src={\n                  state.wordListProfanity === \"true\"\n                    ? process.env.PUBLIC_URL + \"/images/selected-word-list.svg\"\n                    : process.env.PUBLIC_URL + \"/images/word-list-not-selected.svg\"\n                }\n              />\n            </Box>\n          </Grid>\n          <Typography variant=\"body1\" align=\"center\">\n            Word List\n          </Typography>\n        </Box>\n      </Grid>\n      <Grid item>\n        <Box\n          className={\n            state.automaticProfanity === \"true\" ? classes.methodSelected : classes.methodNotSelected\n          }\n          onClick={handleClick(\"automaticMethod\")}\n        >\n          <Grid container justify=\"center\">\n            <Box p={1}>\n              <img\n                alt=\"\"\n                src={\n                  state.automaticProfanity === \"true\"\n                    ? process.env.PUBLIC_URL + \"/images/automatic-profanity-selected.svg\"\n                    : process.env.PUBLIC_URL + \"/images/automatic-detection.svg\"\n                }\n              />\n            </Box>\n          </Grid>\n          <Typography testid=\"autoDetection\" variant=\"body1\" align=\"center\">\n            Automatic Detection\n          </Typography>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FilterCard;\n","import { combineLanguageWords, constantBoolean } from \"../helpers\";\n\nconst regexForBanned = `\"\\\\b(banned)\\\\b\"`.replace(/\\\\/g, \"\\\\\\\\\");\n\nexport function FilterConditionForWordList(textPnFnStatusdata, type = \"default\") {\n  let wordListCharacterToMaskWith,\n    wordListModType,\n    wordListReRouteMessages,\n    englishProfanity,\n    hindiProfanity,\n    frenchProfanity,\n    spanishProfanity,\n    portugeseProfanity;\n  if (type === \"default\") {\n    ({\n      wordListCharacterToMaskWith,\n      wordListModType,\n      wordListReRouteMessages,\n      englishProfanity,\n      hindiProfanity,\n      frenchProfanity,\n      spanishProfanity,\n      portugeseProfanity,\n    } = textPnFnStatusdata);\n  } else {\n    ({\n      wordListCharacterToMaskWith,\n      wordListModType,\n      wordListReRouteMessages,\n      englishProfanity,\n      hindiProfanity,\n      frenchProfanity,\n      spanishProfanity,\n      portugeseProfanity,\n    } = textPnFnStatusdata.wordList);\n  }\n\n  const checkForWordListMaskWord = wordListModType === \"Mask-word\";\n  const checkForWordListBlockMessage = wordListModType === \"Block-message\";\n  const checkForWordListReRouteMessages = constantBoolean(wordListReRouteMessages);\n  let profanityList = {};\n  if (textPnFnStatusdata.profanityList) {\n    profanityList = textPnFnStatusdata.profanityList;\n  } else {\n    profanityList = {\n      English: englishProfanity.split(\"|\").join(\",\"),\n      Hindi: hindiProfanity.split(\"|\").join(\",\"),\n      Portugese: portugeseProfanity.split(\"|\").join(\",\"),\n      French: frenchProfanity.split(\"|\").join(\",\"),\n      Spanish: spanishProfanity.split(\"|\").join(\",\"),\n    };\n  }\n\n  let swearWords = combineLanguageWords(profanityList).replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  let regex = `\"\\\\b(${swearWords})\\\\b\"`.replace(/\\\\/g, \"\\\\\\\\\");\n\n  if (checkForWordListMaskWord) {\n    if (checkForWordListReRouteMessages) {\n      return wordListMaskWordsAndReroute({\n        regex,\n        wordListCharacterToMaskWith,\n        type,\n      });\n    }\n    return wordListMaskWords({ regex, wordListCharacterToMaskWith, type });\n  }\n\n  if (checkForWordListBlockMessage) {\n    if (checkForWordListReRouteMessages) {\n      return wordListBlockMessageAndReroute({ regex, type });\n    }\n    return wordListBlockMessage({ regex, type });\n  }\n\n  if (type === \"default\") {\n    return `if(request && request.ok){\n        return request.ok();\n      }`;\n  }\n\n  return `return Promise.resolve(false)`;\n}\n\nfunction wordListMaskWords({ regex, wordListCharacterToMaskWith, type }) {\n  if (type === \"default\") {\n    return `if (request && request.ok) {\n      var badWords = new RegExp(${regex}, \"g\")\n      var bannedChannel = new RegExp(${regexForBanned}, \"g\");\n      if (\n        request.message &&\n        request.message.text &&\n        badWords.test(request.message.text) &&\n        !bannedChannel.test(request.channels[0])\n      ) {\n        var newString = request.message.text;\n        newString = newString.replace(badWords, ($1) => '${wordListCharacterToMaskWith}'.repeat($1.length));\n        request.message.text = newString;\n        return request.ok();\n      }\n        request.message.type = \"text\"\n        return request.ok();\n     }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    const badWords = new RegExp(${regex}, \"g\");\n    if (\n      message &&\n      message.text &&\n      badWords.test(message.text)\n    ) {\n      let newString = message.text;\n      newString = newString.replace(badWords, ($1) => '${wordListCharacterToMaskWith}'.repeat($1.length));\n      message.text = newString;\n      return resolve(true)\n    }\n    message.type = \"text\"\n      return resolve(true)\n   })`;\n}\n\nfunction wordListMaskWordsAndReroute({ regex, wordListCharacterToMaskWith, type }) {\n  if (type === \"default\") {\n    return `\n  if (request && request.ok) {\n    const pubnub = require('pubnub');\n    let badWords = new RegExp(${regex}, \"g\")\n    let bannedChannel = new RegExp(${regexForBanned}, \"g\");\n    if (\n      request.message &&\n      request.message.text &&\n      badWords.test(request.message.text) &&\n      !bannedChannel.test(request.channels[0])\n    ) {\n      const originalMessage = request.message.text;\n      const senderUuid = request.params.uuid;\n      const moderatedMessage = originalMessage.replace(badWords, ($1) => '${wordListCharacterToMaskWith}'.repeat($1.length));\n      request.message.text = moderatedMessage;\n      pubnub.publish({\n      \"channel\": 'banned.'+request.channels[0],\n      \"message\":{ \"type\":\"text\", originalMessage, moderatedMessage, senderUuid }\n      }).then((publishResponse) => {\n        console.log(publishResponse)\n      }).catch((err) => {\n          console.error(err);\n      });\n    }\n      request.message.type = \"text\"\n      return request.ok();\n   }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    const badWords = new RegExp(${regex}, \"g\");\n    if (\n      message &&\n      message.text &&\n      badWords.test(message.text)\n    ) {\n      originalMessage = message.text\n      moderatedMessage = originalMessage.replace(badWords, ($1) => '${wordListCharacterToMaskWith}'.repeat($1.length));\n      message.text = moderatedMessage;\n      textReouteFlag = true;\n      return resolve(true)\n    }\n    message.type = \"text\"\n      return resolve(true)\n   })`;\n}\n\nfunction wordListBlockMessage({ regex, type }) {\n  if (type === \"default\") {\n    return `if (request && request.ok) {\n    let badWords = new RegExp(${regex}, \"g\");\n    let bannedChannel = new RegExp(${regexForBanned}, \"g\");\n    if(badWords.test(request[\"message\"][\"text\"]) && !bannedChannel.test(request.channels[0])) {\n      console.log(\"Blocked message with word(s) from restricted word list\");\n       return request.abort(\"wordlist moderation blocked message\");\n   }\n      return request.ok();\n  }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    const badWords = new RegExp(${regex}, \"g\");\n    if (\n      message &&\n      message.text &&\n      badWords.test(message.text)\n    ) {\n      textBlockedFlag = true;\n      return resolve(true)\n    }\n    message.type = \"text\"\n      return resolve(true)\n   })`;\n}\n\nfunction wordListBlockMessageAndReroute({ regex, type }) {\n  if (type === \"default\") {\n    return `if (request && request.ok) {\n    const pubnub = require('pubnub');\n    let badWords = new RegExp(${regex}, \"g\")\n    let bannedChannel = new RegExp(${regexForBanned}, \"g\");\n    let message = request.message;\n    console.log(\"received wordlist based text moderation request: \", message);\n\n    if(badWords.test(message[\"text\"]) && !bannedChannel.test(request.channels[0])) {\n      console.log(\"Found word(s) from moderation list. Publishing to banned channel\");\n      pubnub.publish({\n      \"channel\": 'banned.'+request.channels[0],\n      \"message\": {\n        type: \"text\",\n        originalMessage: message.text,\n        senderUuid: request.params.uuid\n      }\n      }).then((publishResponse) => {\n        console.log(publishResponse)\n      }).catch((err) => {\n          console.error(err);\n      });\n       return request.abort(\"wordlist moderation blocked message\");\n   }\n      request.message.type = \"text\"\n      return request.ok();\n  }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    const badWords = new RegExp(${regex}, \"g\");\n    if (\n      message &&\n      message.text &&\n      badWords.test(message.text)\n    ) {\n      originalMessage = message.text;\n      textBlockedFlag = true;\n      textReouteFlag = true;\n      return resolve(true);\n    }\n    message.type = \"text\"\n      return resolve(true);\n   })`;\n}\n","export const getSelectedDetectionTool = (data) => {\n  if (data.toolForAutomaticDetection === \"tisane\") {\n    const selectedLanguage = getSelectedLanguage(data.tisaneLanguage);\n    return `const apiKey = '${data.tisaneApiKey}';\n      const abuseTypes = ['bigotry', 'personal_attack', 'criminal_activity', 'sexual_advances', 'profanity'];\n      const serverityTypeObject = {\n        extreme:0.25,\n        high:0.50,\n        medium:0.75,\n        low:1,\n        none:0\n      };\n      const abuseTypeObject = {\n        bigotry:${data.tisaneRiskFactorThresholdBigotry},\n        criminal_activity:${data.tisaneRiskFactorThresholdCriminalActivity},\n        sexual_advances:${data.tisaneRiskFactorThresholdSexualAdvances},\n        personal_attack:${data.tisaneRiskFactorThresholdCyberBullying},\n        profanity:${data.tisaneRiskFactorThresholdProfanity}\n      };\n      const url = \"https://api.tisane.ai/parse\";\n      const http_options = {\n        \"method\": \"POST\",\n        \"headers\": {\n          \"Ocp-Apim-Subscription-Key\": apiKey\n        },\n        \"body\": JSON.stringify({\n          \"language\": \"${selectedLanguage}\", // or whatever language you use\n          \"content\": message.text,\n          \"settings\": {\"snippets\": true, \"format\":\"dialogue\"}\n        }),\n        \"timeout\" : 5000\n    };\n\n    return xhr.fetch(url, http_options).then(response => {\n\n      const body = JSON.parse(response.body);\n      const thirdPartyResponse = (response.status === 200 ? body : { error: body });\n      let checkThresholdForThirdParty = false;\n      const reasons = [];\n      const serverityTypes = [];\n\n      // Check each abuse type returned against the threshold\n      if (thirdPartyResponse.abuse && Array.isArray(thirdPartyResponse.abuse) && thirdPartyResponse.abuse.length) {\n        console.log('text moderation abuse analysis: ', thirdPartyResponse.abuse);\n        thirdPartyResponse.abuse.forEach((element)=>{\n          serverityTypes.push(element.severity);\n          if (abuseTypeObject[element.type] !== 0) {\n            if (abuseTypes.includes(element.type) && abuseTypeObject[element.type] >= serverityTypeObject[element.severity]) {\n              const abuse = element.type.replace(/_/g, ' ');\n              reasons.push(abuse+'; '+ element.severity);\n              if (!checkThresholdForThirdParty) {\n                console.log(\"Message was flagged by automatic text moderation.\");\n                checkThresholdForThirdParty = true;\n              }\n            }\n          }\n        });\n      }`;\n  }\n  return `const accountName = '${data.siftNinjaAccountName}';\n  const channelName = '${data.siftNinjaChannelName}';\n  const apiKey = '${data.siftNinjaApiKey}'\n  const basicAuth = require('codec/auth');\n  const authorization = basicAuth.basic(accountName + '/' + channelName,apiKey);\n  const http_options = {\n    \"method\": \"POST\",\n    \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": authorization\n    },\n    \"body\": JSON.stringify({\n        \"text\": message.text,\n        \"user_id\": message.user_id,\n        \"user_display_name\": message.user_display_name\n    })\n  };\n  const reasons = [];\n  const url = \"https://\" + accountName + \".siftninja.com/api/v1/channel/\" + channelName + \"/sifted_data\";\n  return xhr.fetch(url, http_options).then(response => {\n\n  var body = JSON.parse(response.body);\n  var thirdPartyResponse = (response.status === 200 ? body : { error: body });\n\n  const vulgarity = thirdPartyResponse.tags.vulgar === null?0:thirdPartyResponse.tags.vulgar;\n  const racist = thirdPartyResponse.tags.racist === null?0:thirdPartyResponse.tags.racist;\n  const sexting = thirdPartyResponse.tags.sexting === null?0:thirdPartyResponse.tags.sexting;\n\n  console.log('Vulgarity score :', vulgarity, 'Racism score :', racist, 'Sexting score :', sexting);\n\n  const checkThresholdForThirdParty = vulgarity>'${data.siftNinjaRiskFactorThresholdVulgar}'\n  || racist>'${data.siftNinjaRiskFactorThresholdRacism}'\n  || sexting>'${data.siftNinjaRiskFactorThresholdSexting}';`;\n};\n\nconst getSelectedLanguage = (language) => {\n  const languages = {\n    Autodetect: \"*\",\n    English: \"en\",\n    Spanish: \"es\",\n    Portugese: \"pt\",\n    French: \"fr\",\n  };\n  return languages[language];\n};\n","import { constantBoolean } from \"../helpers\";\nimport { getSelectedDetectionTool } from \"./index\";\n\nconst regexForBanned = `\"\\\\b(banned)\\\\b\"`.replace(/\\\\/g, \"\\\\\\\\\");\n\nexport function FilterConditionForAutomatic(textPnFnStatusdata, type = \"default\") {\n  let automaticDetectionModType,\n    automaticDetectionReRouteMessages,\n    automaticDetectionCharacterToMaskWith,\n    selectedDetectionTool;\n\n  if (type === \"default\") {\n    ({\n      automaticDetectionModType,\n      automaticDetectionReRouteMessages,\n      automaticDetectionCharacterToMaskWith,\n    } = textPnFnStatusdata);\n    selectedDetectionTool = getSelectedDetectionTool(textPnFnStatusdata);\n  } else {\n    ({\n      automaticDetectionModType,\n      automaticDetectionReRouteMessages,\n      automaticDetectionCharacterToMaskWith,\n    } = textPnFnStatusdata.automaticDetection);\n    selectedDetectionTool = getSelectedDetectionTool(textPnFnStatusdata.automaticDetection);\n  }\n\n  const checkForAutomaticMaskMessage = automaticDetectionModType === \"mask-message\";\n  const checkForAutomaticBlockMessage = automaticDetectionModType === \"block-message\";\n  const checkForAutomaticReRouteMessages = constantBoolean(automaticDetectionReRouteMessages);\n\n  if (checkForAutomaticMaskMessage) {\n    if (checkForAutomaticReRouteMessages) {\n      return automaticMaskMessageAndReroute({\n        selectedDetectionTool,\n        automaticDetectionCharacterToMaskWith,\n        type,\n      });\n    }\n    return automaticMaskMessage({\n      selectedDetectionTool,\n      automaticDetectionCharacterToMaskWith,\n      type,\n    });\n  }\n\n  if (checkForAutomaticBlockMessage) {\n    if (checkForAutomaticReRouteMessages) {\n      return automaticBlockMessageAndReroute({\n        selectedDetectionTool,\n        type,\n      });\n    }\n    return automaticBlockMessage({\n      selectedDetectionTool,\n      type,\n    });\n  }\n\n  if (type === \"default\") {\n    return `if(request && request.ok){\n      return request.ok()\n    }`;\n  }\n\n  return `return Promise.resolve(false)`;\n}\n\nfunction automaticMaskMessage({\n  selectedDetectionTool,\n  automaticDetectionCharacterToMaskWith,\n  type,\n}) {\n  if (type === \"default\") {\n    return `if(request && request.ok){\n      const bannedChannel = new RegExp(${regexForBanned}, \"g\");\n      const console = require('console');\n      const xhr = require(\"xhr\");\n      const pubnub = require('pubnub');\n      let message = request.message;\n\n      if (!message.text) {\n        return request.ok();\n      }\n\n      if(bannedChannel.test(request.channels[0])){\n        console.log('Skipping moderation on message sent to banned channel: '  + request.channels[0]);\n        return request.ok();\n      }\n\n      console.log(\"received text moderation request: \", message);\n\n      ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n               message.text = message.text.replace(/[a-z-A-Z-!]/g, '${automaticDetectionCharacterToMaskWith}');\n               console.log(\"Replacing original text with a masked version of the message.\");\n              return request.ok(message);\n          }\n         request.message.type = \"text\";\n         return request.ok(message);\n\n     }).catch(err => {\n         var thirdPartyResponse = { error: err };\n         Object.assign(message, { thirdPartyResponse });\n\n         return request.ok(message);\n     });\n      }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n        message.text = message.text.replace(/[a-z-A-Z-!]/g, '${automaticDetectionCharacterToMaskWith}');\n        return resolve(true);\n    }\n    message.type = \"text\"\n    return resolve(true);\n    }).catch(err => {\n      var thirdPartyResponse = { error: err };\n      Object.assign(message, { thirdPartyResponse });\n      return reject(message);\n  })\n   })`;\n}\n\nfunction automaticMaskMessageAndReroute({\n  selectedDetectionTool,\n  automaticDetectionCharacterToMaskWith,\n  type,\n}) {\n  if (type === \"default\") {\n    return `if(request && request.ok) {\n      const bannedChannel = new RegExp(${regexForBanned}, \"g\");\n      const console = require('console');\n      const xhr = require(\"xhr\");\n      const pubnub = require('pubnub');\n      let message = request.message;\n\n      if (!message.text) {\n        return request.ok();\n      }\n\n      if(bannedChannel.test(request.channels[0])){\n        console.log('Skipping moderation on message sent to banned channel: '  + request.channels[0]);\n        return request.ok();\n      }\n\n      console.log(\"received text moderation request: \", message);\n      const originalMessage = message.text;\n      const senderUuid = request.params.uuid;\n\n      ${selectedDetectionTool}\n      if(checkThresholdForThirdParty){\n             const moderatedMessage = originalMessage.replace(/[a-z-A-Z-!]/g, '${automaticDetectionCharacterToMaskWith}');\n             let payload = {\"type\":\"text\", originalMessage, moderatedMessage, senderUuid};\n             if (reasons && reasons.length) {\n               payload.reason = reasons.join(\", \");\n             }\n              pubnub.publish({\n              \"channel\": 'banned.'+request.channels[0],\n              \"message\": payload\n              }).then((publishResponse) => {\n                console.log('Sending original message to banned.' + request.channels[0]);\n                console.log(publishResponse);\n              }).catch((err) => {\n                  console.error(err);\n              });\n             message.type = 'text';\n             message.text = moderatedMessage;\n             console.log('Sending moderated message to channel: ' + request.channels[0]);\n             return request.ok(message);\n         }\n        return request.ok(message);\n\n    }).catch(err => {\n        var thirdPartyResponse = { error: err };\n        Object.assign(message, { thirdPartyResponse });\n\n        return request.ok(message);\n    });\n\n     }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n      originalMessage = message.text;\n      moderatedMessage = message.text.replace(/[a-z-A-Z-!]/g, '${automaticDetectionCharacterToMaskWith}');\n      message.text = moderatedMessage;\n      textReouteFlag = true;\n      if (reasons && reasons.length) {\n        reasonForModeration = reasons.join(\", \");\n      }\n      return resolve(true);\n    }\n    message.type = \"text\";\n    return resolve(true);\n    }).catch(err => {\n      var thirdPartyResponse = { error: err };\n      Object.assign(message, { thirdPartyResponse });\n      return reject(message);\n  });\n   })`;\n}\n\nfunction automaticBlockMessage({ selectedDetectionTool, type }) {\n  if (type === \"default\") {\n    return `if(request && request.ok){\n    const bannedChannel = new RegExp(${regexForBanned}, \"g\");\n    const console = require('console');\n    const xhr = require(\"xhr\");\n    const pubnub = require('pubnub');\n    let message = request.message;\n\n    if (!message.text) {\n      return request.ok()\n    }\n\n    if(bannedChannel.test(request.channels[0])){\n      console.log('Skipping moderation on message sent to banned channel: '  + request.channels[0]);\n      return request.ok();\n    }\n\n    const originalMessage = message.text;\n    console.log(\"received text moderation request: \", message);\n\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n      console.log(\"automatic text moderation blocked message\");  \n      return request.abort();  \n    }\n  return request.ok(message);\n\n  }).catch(err => {\n      var thirdPartyResponse = { error: err };\n      Object.assign(message, { thirdPartyResponse });\n\n      return request.ok(message);\n  });\n\n   }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n       textBlockedFlag = true;\n       return resolve(true);\n    }\n    message.type = \"text\"\n    return resolve(true);\n  }).catch(err => {\n    var thirdPartyResponse = { error: err };\n    Object.assign(message, { thirdPartyResponse });\n    return reject(message);\n});\n   })`;\n}\n\nfunction automaticBlockMessageAndReroute({ selectedDetectionTool, type }) {\n  if (type === \"default\") {\n    return `if(request && request.ok){\n    const xhr = require(\"xhr\");\n    const console = require('console');\n    const pubnub = require('pubnub');\n    const bannedChannel = new RegExp(${regexForBanned}, \"g\");\n\n    let message = request.message;\n\n    if (!message.text) {\n      return request.ok()\n    }\n\n    if(bannedChannel.test(request.channels[0])){\n      console.log('Skipping moderation on message sent to banned channel: '  + request.channels[0]);\n      return request.ok();\n    }\n\n    const originalMessage = message.text;\n    const senderUuid = request.params.uuid;\n    console.log(\"received text moderation request: \", message);\n\n    ${selectedDetectionTool}\n\n         if(checkThresholdForThirdParty){\n              let payload = {\"type\":\"text\", originalMessage, senderUuid};\n              if (reasons && reasons.length) {\n                payload.reason = reasons.join(\", \");\n              }\n              console.log('Sending original message to banned.' + request.channels[0]);\n              pubnub.publish({\n               \"channel\": 'banned.'+request.channels[0],\n               \"message\": payload\n               }).then((publishResponse) => {\n                 console.log(publishResponse);\n               }).catch((err) => {\n                   console.error(err);\n               });\n               console.log(\"automatic text moderation blocked message\");  \n               return request.abort();  \n         }\n\n        console.log('Sending moderated message to channel: ' + request.channels[0]);\n        return request.ok(message);\n\n    }).catch(err => {\n        var thirdPartyResponse = { error: err };\n        Object.assign(message, { thirdPartyResponse });\n\n        return request.ok(message);\n    });\n\n     }`;\n  }\n\n  // using image modertaion\n  return `return new Promise((resolve, reject) => {\n    ${selectedDetectionTool}\n    if(checkThresholdForThirdParty){\n        originalMessage = message.text;\n        textBlockedFlag = true;\n        textReouteFlag = true;\n        if (reasons && reasons.length) {\n          reasonForModeration = reasons.join(\", \");\n        }\n        return resolve(true);\n    }\n    message.type = \"text\"\n    return resolve(true);\n  }).catch(err => {\n    var thirdPartyResponse = { error: err };\n    Object.assign(message, { thirdPartyResponse });\n    return reject(message);\n});\n   })`;\n}\n","import { groupLanguageWords, constantBoolean } from \"./helpers\";\n\nimport { FilterConditionForWordList } from \"./wordlist/index\";\nimport { FilterConditionForAutomatic } from \"./automaticTextModeration/filterConditionForAutomatic\";\n\nexport default function profanityFunction(data) {\n  const {\n    wordListModType,\n    wordListReRouteMessages,\n    applyToAllChannelIdsWordlist,\n    applyToAllChannelIdsAutomatic,\n    wordListCharacterToMaskWith,\n    automaticDetectionModType,\n    automaticDetectionReRouteMessages,\n    automaticDetectionCharacterToMaskWith,\n    toolForAutomaticDetection,\n    siftNinjaRiskFactorThresholdVulgar,\n    siftNinjaRiskFactorThresholdSexting,\n    siftNinjaRiskFactorThresholdRacism,\n    siftNinjaAccountName,\n    siftNinjaChannelName,\n    siftNinjaApiKey,\n    wordListProfanity,\n    automaticProfanity,\n    textModerationToggle,\n    tisaneRiskFactorThresholdBigotry,\n    tisaneRiskFactorThresholdCyberBullying,\n    tisaneRiskFactorThresholdCriminalActivity,\n    tisaneRiskFactorThresholdSexualAdvances,\n    tisaneRiskFactorThresholdProfanity,\n    tisaneApiKey,\n    tisaneLanguage,\n  } = data;\n\n  let english = data.profanityList[\"English\"];\n  let hindi = data.profanityList[\"Hindi\"];\n  let spanish = data.profanityList[\"Spanish\"];\n  let french = data.profanityList[\"French\"];\n  let portugese = data.profanityList[\"Portugese\"];\n\n  function noProfanityFilterSelected() {\n    return `if(request && request.ok){\n        return request.ok();\n    }`;\n  }\n\n  const checkForWordListProfanity =\n    constantBoolean(wordListProfanity) && constantBoolean(textModerationToggle);\n\n  const checkForAutomaticProfanity =\n    constantBoolean(automaticProfanity) && constantBoolean(textModerationToggle);\n\n  const filterConditions = () => {\n    if (checkForWordListProfanity) {\n      return FilterConditionForWordList(data);\n    } else if (checkForAutomaticProfanity) {\n      return FilterConditionForAutomatic(data);\n    } else {\n      return noProfanityFilterSelected();\n    }\n  };\n\n  return `function runProfanity(request){\n     ${filterConditions()}\n     return {\n       wordListProfanity: '${wordListProfanity}',\n       automaticProfanity: '${automaticProfanity}',\n       textModerationToggle: '${textModerationToggle}',\n       wordList:{\n         applyToAllChannelIdsWordlist:'${applyToAllChannelIdsWordlist}',\n         wordListReRouteMessages: '${wordListReRouteMessages}',\n         wordListModType: '${wordListModType}',\n         wordListCharacterToMaskWith:'${wordListCharacterToMaskWith}',\n         englishProfanity:'${groupLanguageWords(english)}',\n         hindiProfanity: '${groupLanguageWords(hindi)}',\n         frenchProfanity: '${groupLanguageWords(french)}',\n         spanishProfanity: '${groupLanguageWords(spanish)}',\n         portugeseProfanity: '${groupLanguageWords(portugese)}'\n       },\n       automaticDetection:{\n         applyToAllChannelIdsAutomatic: '${applyToAllChannelIdsAutomatic}',\n         automaticDetectionReRouteMessages: '${automaticDetectionReRouteMessages}',\n         automaticDetectionModType: '${automaticDetectionModType}',\n         automaticDetectionCharacterToMaskWith:'${automaticDetectionCharacterToMaskWith}',\n         toolForAutomaticDetection:'${toolForAutomaticDetection}',\n         siftNinjaRiskFactorThresholdVulgar:'${siftNinjaRiskFactorThresholdVulgar}',\n         siftNinjaRiskFactorThresholdSexting:'${siftNinjaRiskFactorThresholdSexting}',\n         siftNinjaRiskFactorThresholdRacism:'${siftNinjaRiskFactorThresholdRacism}',\n         siftNinjaAccountName:'${siftNinjaAccountName}',\n         siftNinjaChannelName:'${siftNinjaChannelName}',\n         siftNinjaApiKey:'${siftNinjaApiKey}',\n         tisaneRiskFactorThresholdBigotry:'${tisaneRiskFactorThresholdBigotry}',\n         tisaneRiskFactorThresholdCyberBullying:'${tisaneRiskFactorThresholdCyberBullying}',\n         tisaneRiskFactorThresholdCriminalActivity:'${tisaneRiskFactorThresholdCriminalActivity}',\n         tisaneRiskFactorThresholdSexualAdvances:'${tisaneRiskFactorThresholdSexualAdvances}',\n         tisaneRiskFactorThresholdProfanity:'${tisaneRiskFactorThresholdProfanity}',\n         tisaneApiKey:'${tisaneApiKey}',\n         tisaneLanguage:'${tisaneLanguage}'\n       },\n     };\n  }`;\n}\n","import { constantBoolean } from \"./helpers\";\nimport { FilterConditionForWordList } from \"./wordlist/index\";\nimport { FilterConditionForAutomatic } from \"./automaticTextModeration/filterConditionForAutomatic\";\n\n/* ---------\n    This functon will be passed to the PubNub event hanlder\n  ----------- */\nexport default function profanityFunctionForImage(data) {\n  const {\n    imageModerationToggle,\n    toolForImageModeration,\n    sightengineAPIUser,\n    sightengineAPIKey,\n    sightengineWorkflowId,\n    sightengineRiskFactorThreshold,\n    reRouteMessages,\n    applyToAllChannelIds,\n    textPnFnStatusdata,\n  } = data;\n  let regexForBanned = `\"\\\\b(banned)\\\\b\"`.replace(/\\\\/g, \"\\\\\\\\\");\n\n  const checkForTextModeration = () => {\n    if (!constantBoolean(textPnFnStatusdata.textModerationToggle)) {\n      return `console.log(\"skipping text moderation it is toggled off\");\n      return true;`;\n    }\n    if (constantBoolean(textPnFnStatusdata.wordListProfanity)) {\n      return FilterConditionForWordList(textPnFnStatusdata, \"image\");\n    }\n    if (constantBoolean(textPnFnStatusdata.automaticProfanity)) {\n      // update for automatic\n      return FilterConditionForAutomatic(textPnFnStatusdata, \"image\");\n    }\n    return `console.log(\"skipping text moderation it has never been enabled\");\n    return true;`;\n  };\n  /* -------\n   This PubNub function is use when admin turn on the image moderation.\n   This function will only block the image from the main channel if it passes the sightengine reject_prob value.\n   This will not re-route any image.\n   ---------  */\n  /* ------\n    This PubNub function is use when admin turn on the image moderation and select the re-route checkbox.\n    When this function runs it will moderate the image if it passes the sightengine reject_prob value\n    and then it will re-route the image to the respective banned channel\n  ---------  */\n  const imageModeration = (imageTypeFunction = \"block\") => {\n    let imageFunction = ` imageBannedFlag = true; `;\n    const textModerationPromise = checkForTextModeration();\n    if (imageTypeFunction === \"reroute\") {\n      imageFunction = ` imageBannedReouteFlag = true;`;\n    }\n\n    return `if (request && request.ok) {\n      const bannedChannel = new RegExp(${regexForBanned}, \"g\");\n      const console = require(\"console\");\n      const query = require(\"codec/query_string\");\n      const xhr = require(\"xhr\");\n      const pubnub = require(\"pubnub\");\n\n      if (bannedChannel.test(request.channels[0])) {\n        console.log('Skipping moderation on file sent to banned channel: ' + request.channels[0]);\n        return request.ok();\n      }\n\n      let envelope = request.message;\n      let message = envelope.message;\n      let file = envelope.file;\n\n      let originalMessage;\n      let moderatedMessage;\n      let fileUrl;\n      let imageBannedFlag = false;\n      let imageBannedReouteFlag = false;\n      let textBlockedFlag = false;\n      let textReouteFlag = false;\n      let reasonForModeration;\n\n      console.log(\"received image moderation request: \", envelope);\n\n      // A message that contains both text and a file generates a Before Publish File event.\n      // Perform text moderation if configured and the message contains text\n      const textmoderation = () => {\n        if (message && message.text) {\n          ${textModerationPromise}\n        } else {\n          console.log(\"skipping text moderation, either the message or the text field is missing\");\n          return true;\n        }\n      };\n\n      // Perform image moderation\n      const imageModerationFunction = () => {\n          if (file) {\n            const apiUrl = \"https://api.sightengine.com/1.0/check-workflow.json\";\n            const channel = request.channels[0];\n            fileUrl = pubnub.getFileUrl({\n              channel: channel,\n              id: file.id,\n              name: file.name,\n            });\n            const queryParams = {\n              'api_secret': '${sightengineAPIKey}',\n              'workflow': '${sightengineWorkflowId}',\n              'api_user': '${sightengineAPIUser}',\n              url: fileUrl\n            };\n\n            return new Promise((resolve, reject) => {\n              xhr\n                .fetch(apiUrl + \"?\" + query.stringify(queryParams))\n                .then(function (r) {\n                  const body = JSON.parse(r.body || r);\n                  return resolve(body);\n                })\n                .catch(function (e) {\n                  console.error(e);\n                  return reject(e);\n                });\n            });\n        } else {\n            console.log(\"image moderation skipping API call because there is no file in the message!\");\n            return true;\n        }\n      };\n\n      // Process the responses from both the text and image moderation\n      return Promise.all([imageModerationFunction(), textmoderation()])\n        .then((values) => {\n          console.log(\"image moderation result: \", values[0].summary);\n          let payload = {};\n\n          if (\n            values[0] &&\n            values[0].summary &&\n            values[0].summary.reject_prob &&\n            '${sightengineRiskFactorThreshold}' < values[0].summary.reject_prob\n          ) {\n              ${imageFunction}\n            }\n\n          if (imageBannedReouteFlag) {\n            payload[\"file\"] = {\n              url: fileUrl,\n              id: file.id,\n              name: file.name,\n              reason: values[0].summary.reject_reason,\n            };\n          }\n\n          if (textReouteFlag) {\n            payload[\"message\"] = { type: \"text\" };\n            payload.message.originalMessage = originalMessage || message.text;\n\n            if (moderatedMessage) {\n                payload.message.moderatedMessage = moderatedMessage;\n            }\n            if (reasonForModeration) {\n                payload.message.reason = reasonForModeration;\n            }\n          }\n\n          // this block handles re-routing\n          if (payload.file || payload.message) {\n            payload.senderUuid = request.params.uuid;\n            return pubnub.publish({\n              channel: \"banned.\" + request.channels[0],\n              message: payload,\n            })\n            .then((publishResponse) => {\n              if (textBlockedFlag && (imageBannedFlag || imageBannedReouteFlag)) {\n                console.log(\"aborting reason 1 (both text and image were re-routed)\");\n                return request.abort(\"moderated message\");\n              }\n\n              if (textBlockedFlag) {\n                console.log(\"text sent with image will be blocked\");\n                delete envelope.message;\n              }\n\n              if (imageBannedFlag || imageBannedReouteFlag) {\n                console.log(\"image will be blocked\");\n                // If text passed but image didn't, repackage as a plain text message\n                if (envelope.message && envelope.message.text) {\n                    const text = envelope.message.text += \"\\\\n - Image blocked by moderation -\";\n                    request.message = {\n                        type: \"text\",\n                        text\n                    };\n                } else {\n                  delete envelope.file;\n                }\n            }\n\n            if (!envelope.text && !envelope.message && !envelope.file) {\n                console.log(\"aborting reason 2 (message was empty or blocked, image was re-routed)\");\n                return request.abort(\"moderated message\");\n            }\n\n              console.log(\n                \"passing reason 1 (only one of message or file was re-routed)\",\n                request.message\n              );\n              return request.ok();\n            })\n            .catch((err) => {\n              console.error(err);\n            });\n          }\n\n          // this block handles blocking (no re-routing enabled)\n          if (values[0] || values[1]) {\n            if (textBlockedFlag && imageBannedFlag) {\n              console.log(\"aborting reason 3 (both text and image were blocked)\");\n              return request.abort(\"moderated message\");\n            }\n\n            if (textBlockedFlag) {\n              delete envelope.message;\n            }\n\n            if (imageBannedFlag || imageBannedReouteFlag) {\n              delete envelope.file;\n            }\n\n            if (!envelope.message && !envelope.file) {\n              console.log(\"aborting function (message was empty or blocked, image was blocked)\");\n              return request.abort(\"moderated message\");\n            }\n\n            console.log(\"passing function (file not blocked and message is ok or masked)\", request.message);\n            return request.ok();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          return request.abort(err);\n        });\n    }\n    `;\n  };\n  /* -------\n  This function is for handling differect use cases for image moderation\n---------- */\n  const filterConditions = () => {\n    let imageTypeFunction = \"block\";\n    if (constantBoolean(reRouteMessages)) {\n      imageTypeFunction = \"reroute\";\n    }\n    return imageModeration(imageTypeFunction);\n  };\n  return `function runProfanity(request){\n            ${filterConditions()}\n        return {\n          imageModerationToggle: '${imageModerationToggle}',\n          toolForImageModeration: '${toolForImageModeration}',\n          sightengineAPIUser: '${sightengineAPIUser}',\n          sightengineAPIKey: '${sightengineAPIKey}',\n          sightengineWorkflowId: '${sightengineWorkflowId}',\n          sightengineRiskFactorThreshold: '${sightengineRiskFactorThreshold}',\n          reRouteMessages: '${reRouteMessages}',\n          applyToAllChannelIds: '${applyToAllChannelIds}'\n        };\n    }`;\n}\n","import profanityFunctionForImage from \"../../utils/profanityFunctionForImage\";\n\nimport { startPubNubFunction, createPubNubEventHandler } from \"../../services/pubnub\";\nasync function CreateEventHandler({ blockId, keyId, token, state, setState, textPnFnStatusdata }) {\n  const {\n    imageModerationToggle,\n    channelId,\n    applyToAllChannelIds,\n    toolForImageModeration,\n    sightengineAPIUser,\n    sightengineAPIKey,\n    sightengineWorkflowId,\n    sightengineRiskFactorThreshold,\n    reRouteMessages,\n  } = state;\n\n  const config = {\n    type: \"js\",\n    key_id: keyId,\n    block_id: blockId,\n    channels: channelId,\n    code: `${profanityFunctionForImage({\n      imageModerationToggle,\n      channelId,\n      applyToAllChannelIds,\n      toolForImageModeration,\n      sightengineAPIUser,\n      sightengineAPIKey,\n      sightengineWorkflowId,\n      sightengineRiskFactorThreshold,\n      reRouteMessages,\n      textPnFnStatusdata,\n    })}`,\n    event: \"js-before-publish-file\",\n    log_level: \"debug\",\n    name: `BLOCK-${blockId}-IMAGE-MODERATION`,\n    output: \"output-0.5823105682419438\",\n  };\n  try {\n    await createPubNubEventHandler(config, token);\n    if (imageModerationToggle) {\n      await startPubNubFunction({ key_id: keyId, block_id: blockId }, token);\n    }\n    setState((prevState) => ({\n      ...prevState,\n      saveLoading: false,\n    }));\n  } catch (error) {\n    setState((previousStateValue) => ({\n      ...previousStateValue,\n      errorStatus: true,\n      saveLoading: false,\n      errorMsg: error.message,\n      successMsg: \"\",\n      successStatus: false,\n    }));\n  }\n}\n\nexport default CreateEventHandler;\n","import profanityFunctionForImage from \"../../utils/profanityFunctionForImage\";\n\nimport {\n  startPubNubFunction,\n  stopPubNubFunction,\n  updatePubNubEventHandler,\n} from \"../../services/pubnub\";\n\n/* ------\n  This function is for updating the event hanlder\n---------  */\nasync function UpdateEventHandler({\n  eventHandler,\n  blockId,\n  keyId,\n  token,\n  setState,\n  state,\n  textPnFnStatusdata,\n  uiPagecall,\n}) {\n  const {\n    imageModerationToggle,\n    channelId,\n    applyToAllChannelIds,\n    toolForImageModeration,\n    sightengineAPIUser,\n    sightengineAPIKey,\n    sightengineWorkflowId,\n    sightengineRiskFactorThreshold,\n    reRouteMessages,\n  } = state;\n\n  const updatedConfig = {\n    type: \"js\",\n    key_id: keyId,\n    block_id: blockId,\n    id: eventHandler[0].id,\n    channels: channelId,\n    code: `${profanityFunctionForImage({\n      imageModerationToggle,\n      channelId,\n      applyToAllChannelIds,\n      toolForImageModeration,\n      sightengineAPIUser,\n      sightengineAPIKey,\n      sightengineWorkflowId,\n      sightengineRiskFactorThreshold,\n      reRouteMessages,\n      textPnFnStatusdata,\n    })}`,\n    event: \"js-before-publish-file\",\n    log_level: \"debug\",\n    name: `BLOCK-${blockId}-IMAGE-MODERATION`,\n    output: \"output-0.5823105682419438\",\n  };\n\n  try {\n    await updatePubNubEventHandler(updatedConfig, token);\n    if (!imageModerationToggle) {\n      await stopPubNubFunction({ key_id: keyId, block_id: blockId }, token);\n      if (uiPagecall === \"textModeration\") {\n        return true;\n      }\n      return setState((previousState) => ({\n        ...previousState,\n        saveLoading: false,\n        successStatus: true,\n        errorStatus: false,\n        errorMsg: \"\",\n        successMsg: \"Successfully Updated.\",\n      }));\n    }\n    await startPubNubFunction({ key_id: keyId, block_id: blockId }, token);\n    if (uiPagecall === \"textModeration\") {\n      return true;\n    }\n    setState((previous) => ({\n      ...previous,\n      saveLoading: false,\n      successStatus: true,\n      errorStatus: false,\n      errorMsg: \"\",\n      successMsg: \"Successfully Updated.\",\n    }));\n  } catch (error) {\n    if (uiPagecall === \"textModeration\") {\n      return true;\n    }\n    setState((previousValue) => ({\n      ...previousValue,\n      errorStatus: true,\n      saveLoading: false,\n      errorMsg: error.message,\n      successMsg: \"\",\n      successStatus: false,\n    }));\n  }\n}\n\nexport default UpdateEventHandler;\n","import {\n  filterImageFunction,\n  pnFunctionFilterStatus,\n  filterImageEventHandler,\n  filterFunction,\n  filterEventHandler,\n  constantBoolean,\n} from \"../helpers\";\nimport CreateEventHandler from \"../../components/imageModeration/CreateEventHandler\";\nimport UpdateEventHandler from \"../../components/imageModeration/UpdateEventHandler\";\nimport { fetchPubNubFunction, createPubNubFunction } from \"../../services/pubnub\";\n\nexport const textModerationCode = (selectedApp, fetchFunctionsResponse) => {\n  const findTextModerationFunction = filterFunction(fetchFunctionsResponse, selectedApp);\n  let blockId;\n  let eventHandlerList;\n  let eventHandler = [];\n  if (findTextModerationFunction.length) {\n    blockId = findTextModerationFunction[0].id;\n    eventHandlerList = findTextModerationFunction[0].event_handlers;\n    eventHandler = filterEventHandler(eventHandlerList, findTextModerationFunction);\n  }\n  let textPnFnStatusdata = [];\n  let wordListProfanity = false;\n  let automaticProfanity = false;\n  let textModerationToggle = false;\n  let textChannelId;\n  if (eventHandler.length) {\n    textPnFnStatusdata = pnFunctionFilterStatus(eventHandler[0].code);\n    ({ wordListProfanity, automaticProfanity, textModerationToggle } = textPnFnStatusdata);\n    textChannelId = eventHandler[0].channels;\n  }\n  return {\n    findTextModerationFunction,\n    blockId,\n    eventHandlerList,\n    eventHandler,\n    wordListProfanity,\n    automaticProfanity,\n    textModerationToggle: constantBoolean(textModerationToggle),\n    textPnFnStatusdata,\n    textChannelId,\n  };\n};\n\nconst handleEventHandler = ({\n  eventHandler,\n  blockId,\n  token,\n  state,\n  setState,\n  keyId,\n  textPnFnStatusdata,\n  uiPagecall,\n}) => {\n  if (eventHandler.length === 0) {\n    return CreateEventHandler({\n      blockId,\n      token,\n      state,\n      setState,\n      keyId,\n      textPnFnStatusdata,\n    });\n  } else {\n    return UpdateEventHandler({\n      eventHandler,\n      blockId,\n      state,\n      setState,\n      keyId,\n      token,\n      textPnFnStatusdata,\n      uiPagecall,\n    });\n  }\n};\n\nexport const handleImageModerationSave = async (\n  app,\n  token,\n  { state, setState, uiPagecall = \"imageModeration\" }\n) => {\n  const fetchFunctionsResponse = await fetchPubNubFunction(app.id, token, true);\n  const { findImageFunction, eventHandler, blockId } = imageModerationCode(\n    app,\n    fetchFunctionsResponse\n  );\n  const { textPnFnStatusdata, textChannelId, textModerationToggle } = textModerationCode(\n    app,\n    fetchFunctionsResponse\n  );\n\n  if (uiPagecall === \"textModeration\") {\n    if (eventHandler.length) {\n      const data = pnFunctionFilterStatus(eventHandler[0].code);\n      if (!data.imageModerationToggle) {\n        return true;\n      }\n      data.channelId = textChannelId;\n      data.isState = false;\n      await UpdateEventHandler({\n        eventHandler,\n        blockId,\n        state: data,\n        setState,\n        keyId: app.id,\n        token,\n        textPnFnStatusdata,\n        uiPagecall,\n      });\n    }\n  } else {\n    if (textModerationToggle && textChannelId && textChannelId !== state.channelId) {\n      return setState((previousState) => ({\n        ...previousState,\n        saveLoading: false,\n        successStatus: false,\n        errorStatus: true,\n        errorMsg: \"Channel ID is not same as Text moderation\",\n        successMsg: \"\",\n      }));\n    }\n    const keyId = app.id;\n    if (findImageFunction.length) {\n      await handleEventHandler({\n        eventHandler,\n        blockId,\n        state,\n        setState,\n        keyId,\n        token,\n        textPnFnStatusdata,\n        uiPagecall,\n      });\n    } else {\n      const config = {\n        key_id: app.id,\n        name: `KEY-${app.id}-IMAGE-MODERATION`,\n        description: \"Image moderation function\",\n      };\n      await createPubNubFunction(config, token);\n      const fetchFunctions = await fetchPubNubFunction(app.id, token);\n      const blockIdForImage = filterImageFunction(fetchFunctions, app)[0].id;\n      await CreateEventHandler({\n        blockId: blockIdForImage,\n        token,\n        state,\n        setState,\n        keyId: app.id,\n        textPnFnStatusdata,\n      });\n    }\n  }\n};\n\nexport const imageModerationCode = (selectedApp, fetchFunctionsResponse) => {\n  const findImageFunction = filterImageFunction(fetchFunctionsResponse, selectedApp);\n  let blockId;\n  let eventHandlerList;\n  let eventHandler = [];\n  if (findImageFunction.length) {\n    blockId = findImageFunction[0].id;\n    eventHandlerList = findImageFunction[0].event_handlers;\n    eventHandler = filterImageEventHandler(eventHandlerList, findImageFunction);\n  }\n  return {\n    findImageFunction,\n    blockId,\n    eventHandlerList,\n    eventHandler,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, CircularProgress, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/textModeration.js\";\nimport SnackBar from \"../core/SnackBar\";\nimport ModerationMethods from \"./ModerationMethods\";\nimport SwitchButton from \"../core/SwitchButton\";\nimport FilterCard from \"./FilterCard\";\nimport profanityFunction from \"../../utils/profanityFunction\";\n\nimport { getCookie } from \"../../services/localStorage\";\nimport {\n  fetchWords,\n  constantBoolean,\n  selectedAppFromLS,\n  filterFunction,\n  filterEventHandler,\n  getProfanityWordsByLanguage,\n  pnFunctionFilterStatus,\n} from \"../../utils/helpers\";\nimport {\n  fetchPubNubFunction,\n  createPubNubFunction,\n  startPubNubFunction,\n  stopPubNubFunction,\n  createPubNubEventHandler,\n  updatePubNubEventHandler,\n} from \"../../services/pubnub\";\n\nimport { handleImageModerationSave } from \"../../utils/imageModeration\";\n\nconst TextModeration = () => {\n  const classes = useStyles();\n  const [profanityList, setProfanityList] = useState({\n    English: \"\",\n    Hindi: \"\",\n    French: \"\",\n    Portugese: \"\",\n    Spanish: \"\",\n  });\n  const [state, setState] = useState({\n    wordList: {\n      wordListChannel: \"*\",\n      applyToAllChannelIdsWordlist: true,\n      wordsListPatternError: false,\n      wordListLanguage: \"English\",\n      wordListModType: \"Mask-word\",\n      wordListReRouteMessages: false,\n      wordsListMaskCharError: false,\n      wordsListChannelError: false,\n      wordListCharacterToMaskWith: \"*\",\n    },\n    automaticDetection: {\n      applyToAllChannelIdsAutomatic: true,\n      toolForAutomaticDetection: \"tisane\",\n      siftNinjaRiskFactorThresholdVulgar: 0,\n      siftNinjaRiskFactorThresholdSexting: 0,\n      siftNinjaRiskFactorThresholdRacism: 0,\n      siftNinjaAccountName: \"\",\n      siftNinjaChannelName: \"\",\n      siftNinjaApiKey: \"\",\n      tisaneRiskFactorThresholdBigotry: 0,\n      tisaneRiskFactorThresholdCyberBullying: 0,\n      tisaneRiskFactorThresholdCriminalActivity: 0,\n      tisaneRiskFactorThresholdSexualAdvances: 0,\n      tisaneRiskFactorThresholdProfanity: 0,\n      tisaneApiKey: \"\",\n      tisaneLanguage: \"Autodetect\",\n      automaticDetectionChannel: \"*\",\n      automaticChannelError: false,\n      automaticMaskCharError: false,\n      automaticDetectionReRouteMessages: false,\n      automaticDetectionModType: \"mask-message\",\n      automaticDetectionCharacterToMaskWith: \"*\",\n    },\n    textModerationToggle: false,\n    wordListProfanity: false,\n    automaticProfanity: false,\n    channelOnChange: false,\n    saveLoading: false,\n    initialLoading: true,\n    errorStatus: false,\n    successStatus: false,\n    errorMsg: \"\",\n    successMsg: \"\",\n  });\n\n  const checkForWordListProfanity = constantBoolean(state.wordListProfanity);\n  const checkForTextModerationToogle = constantBoolean(state.textModerationToggle);\n  const badWordsByLanguage = getProfanityWordsByLanguage(\n    profanityList,\n    state.wordList.wordListLanguage\n  );\n\n  const handleChange = (e) => {\n    setState({ ...state, textModerationToggle: e.target.checked });\n  };\n\n  const handleClick = (name) => (e) => {\n    e.preventDefault();\n    if (name === \"wordListMethod\") {\n      setState({\n        ...state,\n        wordListProfanity: \"true\",\n        automaticProfanity: \"false\",\n      });\n    } else if (name === \"automaticMethod\") {\n      setState({\n        ...state,\n        wordListProfanity: \"false\",\n        automaticProfanity: \"true\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setState((previousState) => ({\n      ...previousState,\n      errorStatus: false,\n      errorMsg: \"\",\n      successStatus: false,\n      successMsg: \"\",\n    }));\n  }, [state.wordListProfanity, state.automaticProfanity]);\n\n  useEffect(() => {\n    const regexForValidateWordList = /^.*?[,.]$/;\n    const wordListValidationResult = regexForValidateWordList.test(badWordsByLanguage.trim());\n    if (wordListValidationResult) {\n      setState((beforeState) => ({\n        ...beforeState,\n        errorStatus: true,\n        errorMsg: `Invalid word list pattern, word list\n          should not end with period or delimiter`,\n        wordList: {\n          ...beforeState.wordList,\n          wordsListPatternError: true,\n        },\n      }));\n    } else {\n      setState((previous) => ({\n        ...previous,\n        errorStatus: false,\n        errorMsg: \"\",\n        wordList: {\n          ...previous.wordList,\n          wordsListPatternError: false,\n        },\n      }));\n    }\n  }, [badWordsByLanguage]);\n\n  useEffect(() => {\n    setState((before) => ({\n      ...before,\n      errorStatus: false,\n      errorMsg: \"\",\n      wordList: {\n        ...before.wordList,\n        wordsListMaskCharError: false,\n      },\n    }));\n    if (\n      !state.wordList.wordListCharacterToMaskWith.trim() &&\n      state.wordListProfanity &&\n      state.wordList.wordListModType === \"Mask-word\"\n    ) {\n      setState((prev) => ({\n        ...prev,\n        errorStatus: true,\n        errorMsg: \"Please set a making character\",\n        wordList: {\n          ...prev.wordList,\n          wordsListMaskCharError: true,\n        },\n      }));\n    }\n  }, [\n    state.wordList.wordListCharacterToMaskWith,\n    state.wordListProfanity,\n    state.wordList.wordListModType,\n  ]);\n\n  useEffect(() => {\n    setState((prevStateValue) => ({\n      ...prevStateValue,\n      errorStatus: false,\n      errorMsg: \"Please set a making character\",\n      automaticDetection: {\n        ...prevStateValue.automaticDetection,\n        automaticMaskCharError: false,\n      },\n    }));\n    if (\n      !state.automaticDetection.automaticDetectionCharacterToMaskWith.trim() &&\n      state.automaticProfanity &&\n      state.automaticDetection.automaticDetectionModType === \"mask-message\"\n    ) {\n      setState((prevValue) => ({\n        ...prevValue,\n        errorStatus: true,\n        errorMsg: \"Please set a making character\",\n        automaticDetection: {\n          ...prevValue.automaticDetection,\n          automaticMaskCharError: true,\n        },\n      }));\n    }\n  }, [\n    state.automaticDetection.automaticDetectionCharacterToMaskWith,\n    state.automaticProfanity,\n    state.automaticDetection.automaticDetectionModType,\n  ]);\n\n  useEffect(() => {\n    if (state.channelOnChange) {\n      if (\n        checkForWordListProfanity\n          ? !state.wordList.wordListChannel.length\n          : !state.automaticDetection.automaticDetectionChannel.length\n      ) {\n        setState((previousValue) => ({\n          ...previousValue,\n          errorStatus: true,\n          saveLoading: false,\n          wordList: {\n            ...previousValue.wordList,\n            wordsListChannelError: checkForWordListProfanity ? true : false,\n          },\n          automaticDetection: {\n            ...previousValue.automaticDetection,\n            automaticChannelError: checkForWordListProfanity ? false : true,\n          },\n          errorMsg: \"Channel name is required\",\n          successMsg: \"\",\n          successStatus: false,\n        }));\n      } else {\n        setState((preValue) => ({\n          ...preValue,\n          errorStatus: false,\n          saveLoading: false,\n          errorMsg: \"\",\n          successMsg: \"\",\n          wordList: {\n            ...preValue.wordList,\n            wordsListChannelError: false,\n          },\n          automaticDetection: {\n            ...preValue.automaticDetection,\n            automaticChannelError: false,\n          },\n          successStatus: false,\n        }));\n      }\n    }\n  }, [\n    state.wordList.wordListChannel,\n    checkForWordListProfanity,\n    state.channelOnChange,\n    state.automaticDetection.automaticDetectionChannel,\n  ]);\n\n  useEffect(() => {\n    const selectedApp = selectedAppFromLS();\n    const headerToken = getCookie(\"token\");\n    (async () => {\n      if (selectedApp) {\n        try {\n          const fetchFunctionsResponse = await fetchPubNubFunction(\n            selectedApp.id,\n            headerToken,\n            true\n          );\n\n          if (filterFunction(fetchFunctionsResponse, selectedApp).length) {\n            const eventHandlers = filterFunction(fetchFunctionsResponse, selectedApp)[0]\n              .event_handlers;\n            const eventHandler = filterEventHandler(\n              eventHandlers,\n              filterFunction(fetchFunctionsResponse, selectedApp)\n            );\n            if (eventHandler.length > 0) {\n              const data = pnFunctionFilterStatus(eventHandler[0].code);\n\n              const { wordListProfanity, automaticProfanity, textModerationToggle } = data;\n\n              const {\n                wordListReRouteMessages,\n                wordListModType,\n                applyToAllChannelIdsWordlist,\n                wordListCharacterToMaskWith,\n                englishProfanity,\n                hindiProfanity,\n                frenchProfanity,\n                spanishProfanity,\n                portugeseProfanity,\n              } = data.wordList;\n\n              const {\n                automaticDetectionReRouteMessages,\n                automaticDetectionModType,\n                applyToAllChannelIdsAutomatic,\n                automaticDetectionCharacterToMaskWith,\n                toolForAutomaticDetection,\n                siftNinjaRiskFactorThresholdVulgar,\n                siftNinjaRiskFactorThresholdSexting,\n                siftNinjaRiskFactorThresholdRacism,\n                siftNinjaAccountName,\n                siftNinjaChannelName,\n                siftNinjaApiKey,\n                tisaneRiskFactorThresholdBigotry,\n                tisaneRiskFactorThresholdCyberBullying,\n                tisaneRiskFactorThresholdCriminalActivity,\n                tisaneRiskFactorThresholdSexualAdvances,\n                tisaneRiskFactorThresholdProfanity,\n                tisaneApiKey,\n                tisaneLanguage,\n              } = data.automaticDetection;\n\n              setState((prev) => ({\n                ...prev,\n                wordList: {\n                  ...prev.wordList,\n                  wordListChannel: eventHandler[0].channels,\n                  wordListModType,\n                  applyToAllChannelIdsWordlist,\n                  wordListCharacterToMaskWith,\n                  wordListReRouteMessages,\n                },\n                automaticDetection: {\n                  automaticDetectionChannel: eventHandler[0].channels,\n                  automaticDetectionReRouteMessages,\n                  automaticDetectionModType,\n                  applyToAllChannelIdsAutomatic,\n                  automaticDetectionCharacterToMaskWith,\n                  toolForAutomaticDetection,\n                  siftNinjaRiskFactorThresholdVulgar,\n                  siftNinjaRiskFactorThresholdSexting,\n                  siftNinjaRiskFactorThresholdRacism,\n                  siftNinjaAccountName,\n                  siftNinjaChannelName,\n                  siftNinjaApiKey,\n                  tisaneRiskFactorThresholdBigotry,\n                  tisaneRiskFactorThresholdCyberBullying,\n                  tisaneRiskFactorThresholdCriminalActivity,\n                  tisaneRiskFactorThresholdSexualAdvances,\n                  tisaneRiskFactorThresholdProfanity,\n                  tisaneApiKey,\n                  tisaneLanguage,\n                },\n                initialLoading: false,\n                textModerationToggle: textModerationToggle,\n                wordListProfanity: wordListProfanity,\n                automaticProfanity: automaticProfanity,\n              }));\n              setProfanityList((prev) => ({\n                ...prev,\n                English: englishProfanity.split(\"|\").join(\",\"),\n                Hindi: hindiProfanity.split(\"|\").join(\",\"),\n                Portugese: portugeseProfanity.split(\"|\").join(\",\"),\n                French: frenchProfanity.split(\"|\").join(\",\"),\n                Spanish: spanishProfanity.split(\"|\").join(\",\"),\n              }));\n            } else {\n              setState((prevState) => ({\n                ...prevState,\n                wordList: { ...prevState.wordList },\n                initialLoading: false,\n              }));\n            }\n          } else {\n            setState((previous) => ({\n              ...previous,\n              wordList: { ...previous.wordList },\n              initialLoading: false,\n            }));\n          }\n        } catch (error) {\n          setState({\n            ...state,\n            errorStatus: true,\n            saveLoading: false,\n            errorMsg: error.message,\n            successMsg: \"\",\n            successStatus: false,\n            initialLoading: false,\n          });\n        }\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function CreateEventHandler(app, block_id, key_id, token) {\n    const {\n      wordListChannel,\n      applyToAllChannelIdsWordlist,\n      wordListCharacterToMaskWith,\n      wordListModType,\n      wordListReRouteMessages,\n    } = state.wordList;\n\n    const {\n      automaticDetectionModType,\n      automaticDetectionChannel,\n      applyToAllChannelIdsAutomatic,\n      automaticDetectionReRouteMessages,\n      automaticDetectionCharacterToMaskWith,\n      toolForAutomaticDetection,\n      siftNinjaRiskFactorThresholdVulgar,\n      siftNinjaRiskFactorThresholdSexting,\n      siftNinjaRiskFactorThresholdRacism,\n      siftNinjaAccountName,\n      siftNinjaChannelName,\n      siftNinjaApiKey,\n      tisaneRiskFactorThresholdBigotry,\n      tisaneRiskFactorThresholdCyberBullying,\n      tisaneRiskFactorThresholdCriminalActivity,\n      tisaneRiskFactorThresholdSexualAdvances,\n      tisaneRiskFactorThresholdProfanity,\n      tisaneApiKey,\n      tisaneLanguage,\n    } = state.automaticDetection;\n\n    const { wordListProfanity, automaticProfanity, textModerationToggle } = state;\n\n    const config = {\n      type: \"js\",\n      key_id: key_id,\n      block_id: block_id,\n      channels: checkForWordListProfanity ? wordListChannel : automaticDetectionChannel,\n      code: `${profanityFunction({\n        wordListProfanity,\n        automaticProfanity,\n        applyToAllChannelIdsAutomatic,\n        applyToAllChannelIdsWordlist,\n        textModerationToggle,\n        profanityList,\n        wordListModType,\n        wordListReRouteMessages,\n        wordListCharacterToMaskWith,\n        automaticDetectionModType,\n        automaticDetectionReRouteMessages,\n        automaticDetectionCharacterToMaskWith,\n        toolForAutomaticDetection,\n        siftNinjaRiskFactorThresholdVulgar,\n        siftNinjaRiskFactorThresholdSexting,\n        siftNinjaRiskFactorThresholdRacism,\n        siftNinjaAccountName,\n        siftNinjaChannelName,\n        siftNinjaApiKey,\n        tisaneRiskFactorThresholdBigotry,\n        tisaneRiskFactorThresholdCyberBullying,\n        tisaneRiskFactorThresholdCriminalActivity,\n        tisaneRiskFactorThresholdSexualAdvances,\n        tisaneRiskFactorThresholdProfanity,\n        tisaneApiKey,\n        tisaneLanguage,\n      })}`,\n      event: \"js-before-publish\",\n      log_level: \"debug\",\n      name: `BLOCK-${block_id}`,\n      output: \"output-0.5823105682419438\",\n    };\n    try {\n      await createPubNubEventHandler(config, token);\n      if (checkForTextModerationToogle) {\n        await startPubNubFunction({ key_id: key_id, block_id: block_id }, token);\n      }\n      await handleImageModerationSave(app, token, {\n        state,\n        setState,\n        uiPagecall: \"textModeration\",\n      });\n      setState({\n        ...state,\n        errorStatus: false,\n        saveLoading: false,\n        errorMsg: \"\",\n        successMsg: \"Successfully updated\",\n        successStatus: true,\n      });\n    } catch (error) {\n      setState({\n        ...state,\n        errorStatus: true,\n        saveLoading: false,\n        errorMsg: error.message,\n        successMsg: \"\",\n        successStatus: false,\n      });\n    }\n  }\n\n  async function UpdateEventHandler(app, eventHandler, block_id, key_id, token) {\n    const {\n      wordListChannel,\n      applyToAllChannelIdsWordlist,\n      wordListCharacterToMaskWith,\n      wordListModType,\n      wordListReRouteMessages,\n    } = state.wordList;\n\n    const {\n      automaticDetectionModType,\n      automaticDetectionChannel,\n      applyToAllChannelIdsAutomatic,\n      automaticDetectionReRouteMessages,\n      automaticDetectionCharacterToMaskWith,\n      toolForAutomaticDetection,\n      siftNinjaRiskFactorThresholdVulgar,\n      siftNinjaRiskFactorThresholdSexting,\n      siftNinjaRiskFactorThresholdRacism,\n      siftNinjaAccountName,\n      siftNinjaChannelName,\n      siftNinjaApiKey,\n      tisaneRiskFactorThresholdBigotry,\n      tisaneRiskFactorThresholdCyberBullying,\n      tisaneRiskFactorThresholdCriminalActivity,\n      tisaneRiskFactorThresholdSexualAdvances,\n      tisaneRiskFactorThresholdProfanity,\n      tisaneApiKey,\n      tisaneLanguage,\n    } = state.automaticDetection;\n\n    const { wordListProfanity, automaticProfanity, textModerationToggle } = state;\n\n    const updatedConfig = {\n      type: \"js\",\n      key_id: key_id,\n      block_id: block_id,\n      id: eventHandler[0].id,\n      channels: checkForWordListProfanity ? wordListChannel : automaticDetectionChannel,\n      code: `${profanityFunction({\n        wordListProfanity,\n        applyToAllChannelIdsAutomatic,\n        applyToAllChannelIdsWordlist,\n        automaticProfanity,\n        textModerationToggle,\n        wordListCharacterToMaskWith,\n        profanityList,\n        wordListModType,\n        wordListReRouteMessages,\n        automaticDetectionModType,\n        automaticDetectionReRouteMessages,\n        automaticDetectionCharacterToMaskWith,\n        toolForAutomaticDetection,\n        siftNinjaRiskFactorThresholdVulgar,\n        siftNinjaRiskFactorThresholdSexting,\n        siftNinjaRiskFactorThresholdRacism,\n        siftNinjaAccountName,\n        siftNinjaChannelName,\n        siftNinjaApiKey,\n        tisaneRiskFactorThresholdBigotry,\n        tisaneRiskFactorThresholdCyberBullying,\n        tisaneRiskFactorThresholdCriminalActivity,\n        tisaneRiskFactorThresholdSexualAdvances,\n        tisaneRiskFactorThresholdProfanity,\n        tisaneApiKey,\n        tisaneLanguage,\n      })}`,\n      event: \"js-before-publish\",\n      log_level: \"debug\",\n      name: `BLOCK-${block_id}`,\n      output: \"output-0.5823105682419438\",\n    };\n\n    try {\n      await updatePubNubEventHandler(updatedConfig, token);\n      if (!checkForTextModerationToogle) {\n        await stopPubNubFunction({ key_id: key_id, block_id: block_id }, token);\n        await handleImageModerationSave(app, token, {\n          state,\n          setState,\n          uiPagecall: \"textModeration\",\n        });\n        return setState({\n          ...state,\n          errorStatus: false,\n          saveLoading: false,\n          errorMsg: \"\",\n          successMsg: \"Successfully updated\",\n          successStatus: true,\n        });\n      }\n      await startPubNubFunction({ key_id: key_id, block_id: block_id }, token);\n      await handleImageModerationSave(app, token, {\n        state,\n        setState,\n        uiPagecall: \"textModeration\",\n      });\n      setState({\n        ...state,\n        errorStatus: false,\n        saveLoading: false,\n        errorMsg: \"\",\n        successMsg: \"Successfully updated\",\n        successStatus: true,\n      });\n    } catch (err) {\n      setState({\n        ...state,\n        errorStatus: true,\n        saveLoading: false,\n        errorMsg: err.message,\n        successMsg: \"\",\n        successStatus: false,\n      });\n    }\n  }\n\n  const defaultWords = async (language) => {\n    let response = await fetchWords(`${process.env.PUBLIC_URL}/words/${language}.txt`);\n    setProfanityList({ ...profanityList, [language]: response });\n  };\n\n  const handleSave = async (e) => {\n    e.preventDefault();\n\n    if (state.errorStatus) {\n      return;\n    }\n\n    setState({ ...state, saveLoading: true });\n    const token = getCookie(\"token\");\n    const app = selectedAppFromLS();\n\n    if (app) {\n      try {\n        const functionResponse = await fetchPubNubFunction(app.id, token);\n        const key_id = app.id;\n\n        if (filterFunction(functionResponse, app).length) {\n          const blockId = filterFunction(functionResponse, app)[0].id;\n          const eventHandlerList = filterFunction(functionResponse, app)[0].event_handlers;\n          const eventHandler = filterEventHandler(\n            eventHandlerList,\n            filterFunction(functionResponse, app)\n          );\n          if (eventHandler.length === 0) {\n            await CreateEventHandler(app, blockId, key_id, token);\n          } else {\n            await UpdateEventHandler(app, eventHandler, blockId, key_id, token);\n          }\n        } else {\n          const config = {\n            key_id: app.id,\n            name: `KEY-${app.id}`,\n            description: \"This is a profanity function\",\n          };\n          await createPubNubFunction(config, token);\n          const fetchFunctions = await fetchPubNubFunction(app.id, token);\n          const block_id = filterFunction(fetchFunctions, app)[0].id;\n          await CreateEventHandler(app, block_id, key_id, token);\n          setState((previous) => ({\n            ...previous,\n            initialLoading: false,\n          }));\n        }\n      } catch (error) {\n        setState({\n          ...state,\n          errorStatus: true,\n          saveLoading: false,\n          errorMsg: error.message,\n          successMsg: \"\",\n          successStatus: false,\n        });\n      }\n    }\n  };\n\n  return (\n    <>\n      {state.successStatus && <SnackBar status=\"success\" msg={state.successMsg} />}\n      {state.errorStatus && <SnackBar status=\"error\" msg={state.errorMsg} />}\n      <Typography testid=\"title\" variant=\"h6\" className={classes.title}>\n        Text Moderation\n        <SwitchButton\n          checked={constantBoolean(state.textModerationToggle)}\n          onChange={handleChange}\n        />\n      </Typography>\n      <br />\n      <Typography testid=\"sub_title\" className={classes.subTitle}>\n        Profanity detection method\n      </Typography>\n\n      <FilterCard state={state} handleClick={handleClick} />\n      <br />\n      {state.initialLoading && (\n        <Grid container justify=\"center\">\n          <CircularProgress size={65} thickness={4} color=\"primary\" className={classes.loader} />\n        </Grid>\n      )}\n      <br />\n      <ModerationMethods\n        handleSave={handleSave}\n        state={state}\n        profanityList={profanityList}\n        defaultWords={defaultWords}\n        setState={setState}\n        setProfanityList={setProfanityList}\n      />\n    </>\n  );\n};\n\nexport default TextModeration;\n","import React from \"react\";\nimport DashboardLayout from \"../../layouts/Dashboard\";\nimport TextModeration from \"../../components/textModeration/index\";\n\nconst TextModerationPage = () => {\n  return (\n    <>\n      <DashboardLayout>\n        <TextModeration />\n      </DashboardLayout>\n    </>\n  );\n};\n\nexport default TextModerationPage;\n","import React from \"react\";\nimport AccountList from \"../../components/accounts/AccountList\";\n\nconst Account = () => {\n  return (\n    <>\n      <AccountList />\n    </>\n  );\n};\nexport default Account;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  confirmButton: {\n    background: \"#F53C56 0% 0% no-repeat padding-box\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#FFFFFF\",\n    \"&:hover\": {\n      backgroundColor: \"#F53C56\",\n    },\n    width: \"150px\",\n    height: \"45px\",\n    textTransform: \"none\",\n  },\n  cancelButton: {\n    background: \" #FFFFFF 0% 0% no-repeat padding-box\",\n    border: \"1px solid #172B4D\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    \"&:hover\": {\n      backgroundColor: \"#FFFFFF\",\n    },\n    width: \"100px\",\n    height: \"45px\",\n  },\n  confirmDialog: {\n    boxShadow: \"0px 3px 6px #2C28281C\",\n    borderRadius: \"10px\",\n    opacity: 1,\n  },\n});\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStyles } from \"../../style/confirmDialog\";\nimport { Typography } from \"@material-ui/core\";\n\nconst ConfirmDialog = (props) => {\n  const { title, children, open, setOpen, onConfirm } = props;\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      id=\"dialog\"\n      open={open}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"confirm-dialog\"\n      fullWidth\n      maxWidth=\"xs\"\n      className={classes.confirmDialog}\n    >\n      <DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\n      <DialogContent id=\"content\">{children}</DialogContent>\n      <DialogActions>\n        <Button\n          id=\"confirm\"\n          onClick={() => {\n            setOpen(false);\n            onConfirm();\n          }}\n          className={classes.confirmButton}\n        >\n          <Typography>{props.actionMessage}</Typography>\n        </Button>\n\n        <Button\n          id=\"cancel\"\n          variant=\"contained\"\n          onClick={() => setOpen(false)}\n          className={classes.cancelButton}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default ConfirmDialog;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  button: {\n    backgroundColor: \"#7082e4\",\n    fontSize: \"14px\",\n    padding: \"5px 15px 5px 15px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"10px\",\n    },\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  joinChannelButton: {\n    transition: theme.transitions.create(\"width\"),\n    background: \"#6387ED\",\n    borderRadius: \"8px\",\n    \"&:hover\": {\n      backgroundColor: \"#6387ED\",\n    },\n    padding: \"10px 25px 10px 25px\",\n    height: \"49px\",\n  },\n  buttonText: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13px/16px var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#FFFFFF\",\n    textTransform: \"uppercase\",\n  },\n  inputBox: {\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    borderRadius: \" 8px\",\n    opacity: 1,\n    width: \"100%\",\n  },\n  loader: {\n    color: \"white\",\n  },\n  modalLayout: {\n    border: \"1px solid #F3F3F3\",\n    borderRadius: \"10px\",\n    opacity: 1,\n  },\n  cancelButton: {\n    border: \"1px solid #707070\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    width: \"140px\",\n    height: \"45px\",\n  },\n  avatar: {\n    width: \"70px\",\n    height: \"70px\",\n  },\n  uploadIcon: {\n    bottom: \"30px\",\n    right: \"-30px\",\n  },\n  subHeadingFont: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-14)/16px Graphik\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#606060\",\n    opacity: 1,\n    lineHeight: 2.5,\n    paddingLeft: \"12px\",\n  },\n  headingFont: {\n    font: \"normal normal medium 22px/27px Proxima Nova\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#414141\",\n    opacity: 1,\n  },\n  addButton: {\n    transition: theme.transitions.create(\"width\"),\n    background: \"#6387ED\",\n    borderRadius: \"8px\",\n    \"&:hover\": {\n      backgroundColor: \"#6387ED\",\n    },\n    width: \"140px\",\n    height: \"45px\",\n  },\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n  addChannelButton: {\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    border: \"1px solid #6387ED67\",\n    borderRadius: \"5px\",\n    opacity: 1,\n    \"&:hover\": {\n      backgroundColor: \"#FFFFFF\",\n    },\n    padding: \"10px 25px 10px 25px\",\n    height: \"49px\",\n  },\n  addChannelButtonFont: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13px/16px var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#6387ED\",\n    textTransform: \"uppercase\",\n    opacity: 1,\n  },\n}));\n","import React from \"react\";\nimport { useStyles } from \"../../style/createModerationModal\";\nimport {\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  TextField,\n  CircularProgress,\n  Box,\n} from \"@material-ui/core\";\n\nexport default function AddChannelForm(props) {\n  const classes = useStyles();\n  return (\n    <form onSubmit={props.formik.handleSubmit}>\n      <DialogContent>\n        <Typography testid=\"Channel_Id\" className={classes.subHeadingFont}>\n          Channel ID\n        </Typography>\n        <TextField\n          name=\"id\"\n          id=\"id\"\n          disabled={props.disabled}\n          placeholder=\"Enter Channel ID\"\n          variant=\"outlined\"\n          className={classes.inputBox}\n          autoComplete=\"off\"\n          onChange={props.formik.handleChange}\n          value={props.formik.values.id}\n          error={props.formik.touched.id && Boolean(props.formik.errors.id)}\n          helperText={props.formik.touched.id && props.formik.errors.id}\n        />\n        <Box pt={1}>\n          <Typography testid=\"Display_Name\" className={classes.subHeadingFont}>\n            Display Name\n          </Typography>\n          <TextField\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Enter Display Name\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            autoComplete=\"off\"\n            onChange={props.formik.handleChange}\n            value={props.formik.values.name}\n            error={props.formik.touched.name && Boolean(props.formik.errors.name)}\n            helperText={props.formik.touched.name && props.formik.errors.name}\n          />\n        </Box>\n        <Box pt={1}>\n          <Typography testid=\"Description\" className={classes.subHeadingFont}>\n            Description\n          </Typography>\n          <TextField\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"Enter Channel Description\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            multiline\n            rows={3}\n            autoComplete=\"off\"\n            onChange={props.formik.handleChange}\n            value={props.formik.values.description}\n            error={props.formik.touched.description && Boolean(props.formik.errors.description)}\n            helperText={props.formik.touched.description && props.formik.errors.description}\n          />\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus className={classes.cancelButton} onClick={props.handleClose}>\n          CANCEL\n        </Button>\n        <Button\n          autoFocus\n          className={classes.addButton}\n          type=\"submit\"\n          color=\"primary\"\n          disabled={props.channelAlert.loading}\n          startIcon={\n            props.channelAlert.loading ? (\n              <CircularProgress className={classes.loader} size={30} />\n            ) : null\n          }\n        >\n          <Typography className={classes.buttonText}>{props.buttonTitle}</Typography>\n        </Button>\n      </DialogActions>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { DialogTitle, Dialog, Typography, IconButton, Button } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useStyles } from \"../../style/createModerationModal\";\nimport { addChannelMetadata, checkChannelExistence } from \"../../services/pubnub\";\nimport SnackBar from \"../core/SnackBar\";\nimport { checkValidChannelName, showError } from \"../../utils/helpers\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport AddChannelForm from \"./AddChannelForm\";\n\nexport const channelValidationSchema = yup.object({\n  id: yup\n    .string(\"Enter channel name\")\n    .strict(true)\n    .matches(/^\\S*$/, \"Channel ID must not contain spaces\")\n    .test(\"Channel ID not valid\", \"Channel ID not valid\", (value) => !checkValidChannelName(value))\n    .required(\"Channe ID is required\"),\n  name: yup.string(\"Enter display name\").required(\"Display name is required\"),\n});\n\nexport default function AddChannelMetadataModal({ pubnubObject, isAdded }) {\n  const [open, setOpen] = useState(false);\n  const [addChannelAlert, setAddChannelAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n    loading: false,\n  });\n\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    formik.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      description: \"\",\n      name: \"\",\n      id: \"\",\n    },\n    validationSchema: channelValidationSchema,\n    onSubmit: (values) => {\n      addNewChannelMetadata(values);\n    },\n  });\n\n  const addNewChannelMetadata = (values) => {\n    setAddChannelAlert({\n      ...addChannelAlert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n      loading: true,\n    });\n    (async () => {\n      try {\n        const channel = await checkChannelExistence(pubnubObject, values.id);\n        if (channel && channel.length) {\n          setAddChannelAlert({\n            ...addChannelAlert,\n            success: { status: false, msg: \"\" },\n            error: { status: true, msg: \"Channel already exists!\" },\n            loading: false,\n          });\n        } else {\n          try {\n            const channelResponse = await addChannelMetadata(\n              pubnubObject,\n              values.name,\n              values.description,\n              values.id\n            );\n            handleClose();\n            setAddChannelAlert({\n              ...addChannelAlert,\n              success: { status: true, msg: \"Channel added successfully.\" },\n              error: { status: false, msg: \"\" },\n              loading: false,\n            });\n            isAdded(channelResponse);\n          } catch (e) {\n            handleClose();\n            setAddChannelAlert({\n              ...addChannelAlert,\n              success: { status: false, msg: \"\" },\n              error: { status: true, msg: showError(e.status.errorData) },\n              loading: false,\n            });\n          }\n        }\n      } catch (e) {\n        setAddChannelAlert({\n          ...addChannelAlert,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: e.message },\n          loading: false,\n        });\n      }\n    })();\n  };\n\n  return (\n    <div>\n      <Button\n        id=\"addChannel\"\n        startIcon={<img src={process.env.PUBLIC_URL + \"/images/add-channel.svg\"} alt=\"add\" />}\n        onClick={handleClickOpen}\n        className={classes.addChannelButton}\n      >\n        <Typography className={classes.addChannelButtonFont}>Add Channel</Typography>\n      </Button>\n      <Dialog\n        id=\"dialog\"\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        className={classes.modalLayout}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} disableTypography>\n          <Typography variant=\"h6\" className={classes.headingFont}>\n            Add Channel\n          </Typography>\n          {open ? (\n            <IconButton\n              id=\"closeButton\"\n              aria-label=\"close\"\n              onClick={handleClose}\n              className={classes.closeButton}\n            >\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <AddChannelForm\n          id=\"add\"\n          formik={formik}\n          channelAlert={addChannelAlert}\n          handleClose={handleClose}\n          buttonTitle={\"ADD\"}\n          disabled={false}\n        />\n      </Dialog>\n      {addChannelAlert.error.status && <SnackBar msg={addChannelAlert.error.msg} status={\"info\"} />}\n      {addChannelAlert.success.status && (\n        <SnackBar msg={addChannelAlert.success.msg} status={\"success\"} />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { DialogTitle, Dialog, Typography, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useStyles } from \"../../style/createModerationModal\";\nimport { editChannelMetadata } from \"../../services/pubnub\";\nimport SnackBar from \"../core/SnackBar\";\nimport { showError } from \"../../utils/helpers\";\nimport { useFormik } from \"formik\";\nimport AddChannelForm from \"./AddChannelForm\";\nimport { channelValidationSchema } from \"./AddChannelMetadataModal\";\n\nexport default function UpdateChannelMetadataModal(props) {\n  const { pubnubObject, open, setOpen, data, channelUpdated } = props;\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(null);\n  const [channelID, setChannelID] = useState(\"\");\n  const [updateChannelAlert, setUpdateChannelAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n    loading: false,\n  });\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    setName(data.name);\n    setDescription(data.description);\n    setChannelID(data.id);\n  }, [data]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      description: !description ? \"\" : description,\n      name: name,\n      id: channelID,\n    },\n    enableReinitialize: true,\n    validationSchema: channelValidationSchema,\n    onSubmit: (values) => {\n      updateChannelMetadata(values);\n    },\n  });\n\n  const updateChannelMetadata = (values) => {\n    setUpdateChannelAlert({\n      ...updateChannelAlert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n      loading: true,\n    });\n    (async () => {\n      try {\n        const channelResponse = await editChannelMetadata(\n          pubnubObject,\n          values.name,\n          values.description,\n          channelID\n        );\n        handleClose();\n        setUpdateChannelAlert({\n          ...updateChannelAlert,\n          success: { status: true, msg: \"Channel updated successfully.\" },\n          error: { status: false, msg: \"\" },\n          loading: false,\n        });\n        channelUpdated(channelResponse);\n      } catch (e) {\n        handleClose();\n        setUpdateChannelAlert({\n          ...updateChannelAlert,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: showError(e.status.errorData) },\n          loading: false,\n        });\n      }\n    })();\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        className={classes.modalLayout}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} disableTypography>\n          <Typography testid=\"UpdateChannel\" variant=\"h6\" className={classes.headingFont}>\n            Update Channel Metadata\n          </Typography>\n          {open ? (\n            <IconButton\n              testId=\"closeIcon\"\n              aria-label=\"close\"\n              onClick={handleClose}\n              className={classes.closeButton}\n            >\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <AddChannelForm\n          formik={formik}\n          channelAlert={updateChannelAlert}\n          handleClose={handleClose}\n          buttonTitle={\"UPDATE\"}\n          disabled={true}\n        />\n      </Dialog>\n      {updateChannelAlert.error.status && (\n        <SnackBar msg={updateChannelAlert.error.msg} status={\"info\"} />\n      )}\n      {updateChannelAlert.success.status && (\n        <SnackBar msg={updateChannelAlert.success.msg} status={\"success\"} />\n      )}\n    </div>\n  );\n}\n","/**\n * Displays paginated table containg channel metadata\n */\nimport React, { useState, useEffect } from \"react\";\nimport { getChannels, getChannelsOccupancy } from \"../../services/pubnub\";\nimport ListingTable from \"../tables/ListingTable\";\nimport { setLocalStorage } from \"../../services/localStorage\";\nimport { CircularProgress, Grid } from \"@material-ui/core\";\nimport { formatDate } from \"../../utils/helpers\";\nimport ConfirmDialog from \"../core/ConfirmDialog\";\nimport UpdateChannelMetadataModal from \"./UpdateChannelMetadataModal\";\nimport { useHistory } from \"react-router\";\n\nexport default function ChannelsTable({\n  searchResult,\n  setSearchableData,\n  deleteChannel,\n  data,\n  pubnub,\n}) {\n  const [channels, setChannels] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [channelData, setChannelData] = useState([]);\n  const [channelID, setChannelID] = useState(\"\");\n  const [updatedChannel, setUpdatedChannel] = useState([]);\n  const [tableCount, settableCount] = useState(0);\n  const [nextpage, setNextPage] = useState(\"\");\n  const [previousPage, setpreviousPage] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(0);\n  const history = useHistory();\n\n  /**\n   * Defines Table headcells on channels page\n   */\n  const headCells = [\n    { id: \"id\", alignment: \"left\", label: \"CHANNEL\", avatar: true },\n    { id: \"description\", alignment: \"left\", label: \"DESCRIPTION\" },\n    { id: \"occupancy\", alignment: \"left\", label: \"OCCUPANCY\" },\n    { id: \"icons\", alignment: \"left\", icons: true, user: false },\n  ];\n\n  useEffect(() => {\n    setPageNumber(0);\n    fetchChannels(pubnub, \"\", \"\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, updatedChannel]);\n\n  useEffect(() => {\n    if (searchResult.length) {\n      setChannels(searchResult);\n    }\n  }, [searchResult]);\n\n  useEffect(() => {\n    setSearchableData(channels);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channels]);\n\n  /**\n   * Fetches 25 channels and count of online users in that channels to show occupancy\n   */\n  const fetchChannels = (pubnubObject, next, prev) => {\n    setLoading(true);\n    setChannels([]);\n    (async () => {\n      try {\n        const applicationChannels = await getChannels(pubnubObject, next, prev);\n        if (!applicationChannels.data.length) {\n          setLoading(false);\n          setMessage(\"No Channel Metadata Found\");\n        }\n        settableCount(applicationChannels.totalCount);\n        setpreviousPage(applicationChannels.prev);\n        setNextPage(applicationChannels.next);\n        const channelsList = [];\n        const channelsIDs = [];\n        let selectedChannel = {};\n        applicationChannels.data.map((channel, index) => {\n          selectedChannel = channel;\n          selectedChannel.updated = formatDate(channel.updated);\n          channelsList.push(selectedChannel);\n          channelsIDs.push(selectedChannel.id);\n          return false;\n        });\n        const channelsOccupancy = await getChannelsOccupancy(pubnub, channelsIDs);\n        channelsIDs.forEach((id, channelIndex) => {\n          channelsList[channelIndex][\"occupancy\"] =\n            channelsOccupancy[id] && channelsOccupancy[id].occupancy;\n        });\n        setChannels(channelsList);\n        setLocalStorage(\"PubNubChannels\", channelsList);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n        setMessage(\"No Channel Metadata Found\");\n        setLocalStorage(\"PubNubChannels\", []);\n      }\n    })();\n  };\n\n  /**\n   * Handles channel row click to navigate to a channel\n   */\n  const handleRowClick = (event, row, iconsClick) => {\n    if (!iconsClick) viewRow(event, row.id);\n  };\n\n  /**\n   * Handles edit icon click to update channel metadata\n   */\n  const editRow = (event, row) => {\n    setModalOpen(true);\n    setChannelData(row);\n  };\n\n  /**\n   * Handles view icon click to  to navigate to a channel\n   */\n  const viewRow = (event, channelName) => {\n    history.push({\n      pathname: \"/channels/messages\",\n      state: { channel: channelName },\n    });\n  };\n\n  /**\n   * Handles delete confirm action to delete to a channel\n   */\n  const deleteRow = (event, rowId) => {\n    setConfirmOpen(true);\n    setChannelID(rowId);\n  };\n\n  /**\n   * Handles delete icon click to confirm delete action\n   */\n  const confirmDelete = () => {\n    deleteChannel(channelID);\n  };\n\n  /**\n   * Handles when a channel is updated\n   */\n  const channelUpdated = (updatedChannelData) => {\n    setUpdatedChannel(updatedChannelData);\n  };\n\n  /**\n   * Handles pagination for fetching next and prev channels\n   */\n  const getNewPage = (i) => {\n    if (pageNumber < i) {\n      setPageNumber(i);\n      fetchChannels(pubnub, nextpage, \"\");\n    } else {\n      setPageNumber(pageNumber - 1);\n      fetchChannels(pubnub, \"\", previousPage);\n    }\n  };\n\n  return (\n    <>\n      <ListingTable\n        data={channels}\n        headCells={headCells}\n        handleRowClick={handleRowClick}\n        message={message}\n        editRow={editRow}\n        deleteRow={deleteRow}\n        viewRow={viewRow}\n        getNewPage={getNewPage}\n        tableCount={tableCount}\n        number={pageNumber}\n      />\n      {loading ? (\n        <Grid justify=\"center\" container>\n          <CircularProgress />\n        </Grid>\n      ) : null}\n      <ConfirmDialog\n        id=\"delete\"\n        title=\"Are you sure?\"\n        open={confirmOpen}\n        setOpen={setConfirmOpen}\n        onConfirm={confirmDelete}\n        actionMessage={\"Yes, Delete it\"}\n      >\n        You want to delete this channel?\n      </ConfirmDialog>\n      <UpdateChannelMetadataModal\n        open={modalOpen}\n        setOpen={setModalOpen}\n        pubnubObject={pubnub}\n        data={channelData}\n        channelUpdated={channelUpdated}\n      />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  DialogContent,\n  DialogActions,\n  DialogTitle,\n  Button,\n  Dialog,\n  Typography,\n  IconButton,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useStyles } from \"../../style/createModerationModal\";\nimport { LightTooltip } from \"../../style/tooltip\";\nimport { useHistory } from \"react-router\";\n\nexport function JoinChannelModal() {\n  const [open, setOpen] = useState(false);\n  const [channelName, setChannelName] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const history = useHistory();\n\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setError(false);\n    setOpen(false);\n  };\n\n  const joinChannel = () => {\n    if (!channelName) {\n      setError(true);\n      return false;\n    }\n    history.push({\n      pathname: \"/channels/messages\",\n      state: { channel: channelName },\n    });\n  };\n\n  return (\n    <div>\n      <LightTooltip title=\"If you have a channel ID, you can directly join in this by clicking on this button and entering the channel ID\">\n        <Button\n          id=\"joinChannelButton\"\n          onClick={handleClickOpen}\n          className={classes.joinChannelButton}\n          startIcon={<img src={process.env.PUBLIC_URL + \"/images/link.svg\"} alt=\"\" />}\n        >\n          <Typography className={classes.buttonText}>Join Channel</Typography>\n        </Button>\n      </LightTooltip>\n      <Dialog\n        id=\"dialog\"\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} disableTypography>\n          <Typography variant=\"h6\" className={classes.headingFont}>\n            Join Channel\n          </Typography>\n          {open ? (\n            <IconButton aria-label=\"close\" onClick={handleClose} className={classes.closeButton}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <DialogContent>\n          <Typography testid=\"channelId\" className={classes.subHeadingFont}>\n            Channel ID\n          </Typography>\n          <TextField\n            id=\"channelId\"\n            placeholder=\"Enter Channel ID\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            onChange={(e) => setChannelName(e.target.value)}\n            error={error}\n            helperText={error ? \"Channel is Required\" : \"\"}\n            autoComplete=\"off\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"cancelButton\" onClick={handleClose} className={classes.cancelButton}>\n            Cancel\n          </Button>\n          <Button\n            id=\"joinButton\"\n            className={classes.addButton}\n            onClick={joinChannel}\n            color=\"primary\"\n          >\n            <Typography className={classes.buttonText}>Join Channel</Typography>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import PubNub from \"pubnub\";\nimport { selectedAppFromLS, uuidFromLS } from \"./helpers\";\nimport { version } from \"../../package.json\";\n\nconst usePubNub = () => {\n  const selectedApp = selectedAppFromLS();\n  const uuid = uuidFromLS();\n\n  if (selectedApp && uuid) {\n    const pubnub = new PubNub({\n      subscribeKey: selectedApp.subscribe_key,\n      secretKey: selectedApp.secret_key,\n      publishKey: selectedApp.publish_key,\n      uuid: uuid,\n    });\n\n    pubnub._config._addPnsdkSuffix(\"moderation-dashboard\", `MD/${version}`);\n\n    return { pubnub };\n  }\n  return {};\n};\n\nexport default usePubNub;\n","import React, { useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Grid, Typography, Box } from \"@material-ui/core\";\nimport ChannelsTable from \"./ChannelsTable\";\nimport { JoinChannelModal } from \"./JoinChannelModal\";\nimport { channelsFromLS, formatDate, showError } from \"../../utils/helpers\";\nimport Search from \"../core/Search\";\nimport AddChannelMetadataModal from \"./AddChannelMetadataModal\";\nimport usePubNub from \"../../utils/usePubNub\";\nimport { deleteChannelMetadata, getChannelByName } from \"../../services/pubnub\";\nimport SnackBar from \"../core/SnackBar\";\n\nfunction ChannelsListing() {\n  const [searchResult, setSearchResult] = useState([]);\n  const [updatedData, setupdatedData] = useState([]);\n  const [searched] = useState(\"\");\n  const [channelAlert, setChannelAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n  });\n  const { pubnub } = usePubNub();\n\n  const requestChannelSearch = (searchedVal) => {\n    setChannelAlert({\n      ...channelAlert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n    });\n    (async () => {\n      try {\n        const filteredRows = await getChannelByName(pubnub, searchedVal);\n        const channelsList = [];\n        let selectedChannel = {};\n        if (!filteredRows.length) {\n          setChannelAlert({\n            ...channelAlert,\n            success: { status: false, msg: \"\" },\n            error: { status: true, msg: \"No channels found\" },\n          });\n        }\n        filteredRows.map((user, index) => {\n          selectedChannel = user;\n          selectedChannel.updated = formatDate(user.updated);\n          channelsList.push(selectedChannel);\n          return false;\n        });\n        setSearchResult(channelsList);\n      } catch (e) {\n        setChannelAlert({\n          ...channelAlert,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: \"Failed to filter channel\" },\n        });\n      }\n    })();\n  };\n  const cancelChannelSearch = () => {\n    setSearchResult(channelsFromLS());\n  };\n\n  const setSearchableData = (channelsData) => {\n    setSearchResult(channelsData);\n  };\n\n  const channelUpdated = (updatedChannelsData) => {\n    setupdatedData(updatedChannelsData);\n  };\n\n  const deleteChannel = (channelID) => {\n    if (channelID) {\n      (async () => {\n        try {\n          await deleteChannelMetadata(pubnub, channelID);\n          setupdatedData([]);\n          setChannelAlert({\n            ...channelAlert,\n            success: { status: true, msg: \"Channel deleted successfully\" },\n            error: { status: false, msg: \"\" },\n          });\n        } catch (e) {\n          setChannelAlert({\n            ...channelAlert,\n            success: { status: true, msg: showError(e.status.errorData) },\n            error: { status: false, msg: \"\" },\n          });\n        }\n      })();\n    }\n  };\n\n  return (\n    <>\n      <Helmet title=\"Channels\" />\n      <Grid justify=\"space-between\" container>\n        <Grid item sm={3}>\n          <Box pl={1}>\n            <Typography testid=\"channelHeader\" variant=\"h5\">\n              Channels\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid item sm={9}>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n            <Box ml={2}>\n              <Search\n                id=\"search\"\n                searched={searched}\n                requestSearch={requestChannelSearch}\n                cancelSearch={cancelChannelSearch}\n                placeholder={\"Search for channel name\"}\n              />\n            </Box>\n            <Box ml={2}>\n              <AddChannelMetadataModal pubnubObject={pubnub} isAdded={channelUpdated} />\n            </Box>\n            <Box ml={2}>\n              <JoinChannelModal />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <br />\n      <Grid container spacing={6}>\n        <Grid item xs={12}>\n          <ChannelsTable\n            searchResult={searchResult}\n            setSearchableData={setSearchableData}\n            deleteChannel={deleteChannel}\n            data={updatedData}\n            pubnub={pubnub}\n          />\n        </Grid>\n      </Grid>\n      {channelAlert.error.status && <SnackBar msg={channelAlert.error.msg} status={\"info\"} />}\n      {channelAlert.success.status && (\n        <SnackBar msg={channelAlert.success.msg} status={\"success\"} />\n      )}\n    </>\n  );\n}\n\nexport default ChannelsListing;\n","import React from \"react\";\nimport ChannelsListing from \"../../components/channels/ChannelsListing\";\nimport DashboardLayout from \"../../layouts/Dashboard\";\n\nconst Channels = () => {\n  return (\n    <>\n      <DashboardLayout>\n        <ChannelsListing />\n      </DashboardLayout>\n    </>\n  );\n};\nexport default Channels;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  gridOne: {\n    padding: theme.spacing(2),\n    opacity: 1,\n    borderRadius: \"10px\",\n    border: \"1px solid #F3F3F3\",\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    boxShadow: \"0px 3px 6px #00000014\",\n    height: \"100%\",\n  },\n  gridTwo: {\n    padding: theme.spacing(2),\n    opacity: 1,\n    borderRadius: \"10px\",\n    border: \"1px solid #F3F3F3\",\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    boxShadow: \"0px 3px 6px #00000014\",\n    height: \"100%\",\n  },\n  headings: {\n    textAlign: \"left\",\n    opacity: 1,\n    color: \"#C2C2C2\",\n    textTransform: \"uppercase\",\n    font: \"var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-12)/var(--unnamed-line-spacing-15) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n  },\n  values: {\n    color: \"#414141\",\n    textAlign: \"left\",\n    opacity: 1,\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-18)/var(--unnamed-line-spacing-23) var(--unnamed-font-family-proxima-nova)\",\n  },\n  avatar: {\n    background: \"#FCF0EF\",\n    color: \"#E66E68\",\n    borderRadius: \"8px\",\n  },\n  test: {\n    text: \"ellipsis\",\n  },\n  appName: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    fontSize: \"12px\",\n    color: \"#C2C2C2\",\n    opacity: 1,\n  },\n}));\n","/**\n * Displays overview page for a selected ketset\n */\nimport React, { useEffect, useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Grid, Typography, Paper, Avatar, Box, Divider, IconButton } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/overview\";\nimport { capitalizeNameInitials, selectedAppFromLS } from \"../../utils/helpers\";\nimport { RemoveRedEye, RemoveRedEyeOutlined } from \"@material-ui/icons\";\n\nconst OverviewGrid = () => {\n  const classes = useStyles();\n  const [application, setApplication] = useState([]);\n  const [secretKeyIsMasked, setSecretKeyIsMasked] = useState(false);\n\n  useEffect(() => {\n    setApplication(selectedAppFromLS());\n  }, []);\n\n  /**\n   * Handles secret key icon toggle action to view/hide secret key\n   */\n  const toggleSecretKeyMask = () => {\n    setSecretKeyIsMasked((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Helmet title=\"Overview\" />\n      <Grid justify=\"space-between\" container>\n        <Grid item>\n          <Box pl={1}>\n            <Typography testid=\"overview_Header\" variant=\"h5\">\n              Overview\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n      <br />\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Paper className={classes.gridOne}>\n              <Grid justify=\"flex-start\" container>\n                <Box mr={1}>\n                  <Avatar className={classes.avatar} variant=\"square\">\n                    {!application.name ? \"\" : capitalizeNameInitials(application.name)}\n                  </Avatar>\n                </Box>\n                <Grid item sm={6} xs={12} md={6}>\n                  <small className={classes.values}>\n                    {!application.name ? \"\" : application.name}\n                  </small>\n                  <br />\n                  <small className={classes.appName}>\n                    {!application.appName ? \"\" : application.appName}\n                  </small>\n                </Grid>\n              </Grid>\n              <br />\n              <Divider />\n              <br />\n              <Grid justify=\"space-between\" container>\n                <Grid item xs={12} sm={6}>\n                  <Typography testid=\"modified_date\" className={classes.headings}>\n                    Modified Date\n                  </Typography>\n                  <Typography className={classes.values}>\n                    {!application.modified ? \"\" : application.modified}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography testid=\"created_on\" className={classes.headings}>\n                    Created on\n                  </Typography>\n                  <Typography className={classes.values}>\n                    {!application.created ? \"\" : application.created}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.gridTwo}>\n              <Typography testid=\"pubnub_keys\" variant=\"h6\">\n                PubNub Keys\n              </Typography>\n              <br />\n              <Divider />\n              <br />\n              <Grid justify=\"space-between\" container>\n                <Grid item xs={12} sm={6}>\n                  <Typography testid=\"publish_key\" variant=\"h6\" className={classes.headings}>\n                    Publish Key\n                  </Typography>\n                  <Typography className={classes.values}>\n                    {!application.publish_key ? \"\" : application.publish_key}\n                  </Typography>\n                  <br />\n                  <Typography testid=\"secret_key\" className={classes.headings}>\n                    Secret Key\n                    <IconButton\n                      id=\"maskableIcon\"\n                      className={classes.headings}\n                      onClick={toggleSecretKeyMask}\n                    >\n                      {secretKeyIsMasked ? <RemoveRedEyeOutlined /> : <RemoveRedEye />}\n                    </IconButton>\n                  </Typography>\n\n                  <Typography id=\"maskableText\" className={classes.values}>\n                    {secretKeyIsMasked\n                      ? application.secret_key\n                      : application.secret_key && \"*\".repeat(application.secret_key.length)}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"h6\" testid=\"subsciber_key\" className={classes.headings}>\n                    Subscribe Key\n                  </Typography>\n                  <Typography className={classes.values}>\n                    {!application.subscribe_key ? \"\" : application.subscribe_key}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default OverviewGrid;\n","import React from \"react\";\nimport OverviewGrid from \"../../components/overview/overviewGrid\";\nimport DashboardLayout from \"../../layouts/Dashboard\";\n\nconst Overview = () => {\n  return (\n    <>\n      <DashboardLayout>\n        <OverviewGrid />\n      </DashboardLayout>\n    </>\n  );\n};\nexport default Overview;\n","import React from \"react\";\nimport { useStyles } from \"../../style/createModerationModal\";\nimport {\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nexport default function AddUserForm(props) {\n  const classes = useStyles();\n  return (\n    <form onSubmit={props.formik.handleSubmit}>\n      <DialogContent>\n        <Typography testid=\"User_Id\" className={classes.subHeadingFont}>\n          User ID\n        </Typography>\n        <TextField\n          id=\"user_id\"\n          name=\"user_id\"\n          placeholder=\"Enter user ID\"\n          variant=\"outlined\"\n          disabled={props.disabled}\n          className={classes.inputBox}\n          autoComplete=\"off\"\n          onChange={props.formik.handleChange}\n          value={props.formik.values.user_id}\n          error={props.formik.touched.user_id && Boolean(props.formik.errors.user_id)}\n          helperText={props.formik.touched.user_id && props.formik.errors.user_id}\n        />\n        <Typography testid=\"User_Name\" className={classes.subHeadingFont}>\n          User Name\n        </Typography>\n        <TextField\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Enter user name\"\n          variant=\"outlined\"\n          className={classes.inputBox}\n          autoComplete=\"off\"\n          onChange={props.formik.handleChange}\n          value={props.formik.values.name}\n          error={props.formik.touched.name && Boolean(props.formik.errors.name)}\n          helperText={props.formik.touched.name && props.formik.errors.name}\n        />\n        <Typography testid=\"Email\" className={classes.subHeadingFont}>\n          Email Address\n        </Typography>\n        <TextField\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Enter email address\"\n          variant=\"outlined\"\n          className={classes.inputBox}\n          autoComplete=\"off\"\n          onChange={props.formik.handleChange}\n          value={props.formik.values.email}\n          error={props.formik.touched.email && Boolean(props.formik.errors.email)}\n          helperText={props.formik.touched.email && props.formik.errors.email}\n        />\n        <Typography testid=\"Profile_Url\" className={classes.subHeadingFont}>\n          Profile URL\n        </Typography>\n        <TextField\n          id=\"profile_url\"\n          name=\"profile_url\"\n          placeholder=\"Enter Profile URL\"\n          variant=\"outlined\"\n          className={classes.inputBox}\n          autoComplete=\"off\"\n          onChange={props.formik.handleChange}\n          value={props.formik.values.profile_url}\n          error={props.formik.touched.profile_url && Boolean(props.formik.errors.profile_url)}\n          helperText={props.formik.touched.profile_url && props.formik.errors.profile_url}\n        />\n        <br />\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus className={classes.cancelButton} onClick={props.handleClose}>\n          CANCEL\n        </Button>\n\n        <Button\n          autoFocus\n          className={classes.addButton}\n          type=\"submit\"\n          color=\"primary\"\n          disabled={props.userAlert.loading}\n          startIcon={\n            props.userAlert.loading ? (\n              <CircularProgress className={classes.loader} size={30} />\n            ) : null\n          }\n        >\n          <Typography className={classes.buttonText}>{props.buttonTitle}</Typography>\n        </Button>\n      </DialogActions>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { DialogTitle, Button, Dialog, Typography, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useStyles } from \"../../style/createModerationModal\";\nimport { addUserMetadata, checkUserIDExistence } from \"../../services/pubnub\";\nimport SnackBar from \"../core/SnackBar\";\nimport { showError } from \"../../utils/helpers\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport AddUserForm from \"./AddUserForm\";\n\nexport const userValidationSchema = yup.object({\n  email: yup.string(\"Enter your email\").email(\"Enter a valid email\"),\n  name: yup.string(\"Enter your name\").required(\"User name is required\"),\n  user_id: yup\n    .string(\"Enter your user ID\")\n    .required(\"User ID is required\")\n    .min(3, \"Must be min 3 characters\")\n    .max(64, \"Must be max 64 characters\"),\n  profile_url: yup.lazy((value) =>\n    /^data/.test(value)\n      ? yup\n          .string()\n          .matches(\n            /^data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*)$/i,\n            \"Must be a valid data URI\"\n          )\n      : yup.string().url(\"Enter a valid URL\")\n  ),\n});\n\nexport default function AddUserMetadataModal({ pubnubObject, isAdded }) {\n  const [open, setOpen] = useState(false);\n  const [addUserAlert, setAddUserAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n    loading: false,\n  });\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      name: \"\",\n      user_id: \"\",\n      profile_url: \"\",\n    },\n    validationSchema: userValidationSchema,\n    enableReinitialize: true,\n    onSubmit: (values) => {\n      addNewUserMetadata(values);\n    },\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n    formik.resetForm();\n  };\n\n  const addNewUserMetadata = (values) => {\n    setAddUserAlert({\n      ...addUserAlert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n      loading: true,\n    });\n    (async () => {\n      try {\n        const user = await checkUserIDExistence(pubnubObject, values.user_id);\n        if (user && user.length) {\n          setAddUserAlert({\n            ...addUserAlert,\n            success: { status: false, msg: \"\" },\n            error: { status: true, msg: \"User ID already exists!\" },\n            loading: false,\n          });\n        } else {\n          try {\n            const userData = await addUserMetadata(\n              pubnubObject,\n              values.name,\n              values.email,\n              values.user_id,\n              values.profile_url\n            );\n            handleClose();\n            setAddUserAlert({\n              ...addUserAlert,\n              success: { status: true, msg: \"User added successfully\" },\n              error: { status: false, msg: \"\" },\n              loading: false,\n            });\n            isAdded(userData);\n          } catch (e) {\n            handleClose();\n            setAddUserAlert({\n              ...addUserAlert,\n              success: { status: false, msg: \"\" },\n              error: { status: true, msg: showError(e.status.errorData) },\n              loading: false,\n            });\n          }\n        }\n      } catch (e) {\n        setAddUserAlert({\n          ...addUserAlert,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: e.message },\n          loading: false,\n        });\n      }\n    })();\n  };\n\n  return (\n    <div>\n      <Button\n        testid=\"button_id\"\n        className={classes.joinChannelButton}\n        startIcon={<img src={process.env.PUBLIC_URL + \"/images/plus.svg\"} alt=\"add\" />}\n        onClick={handleClickOpen}\n      >\n        <Typography testid=\"add_user\" className={classes.buttonText}>\n          Add user\n        </Typography>\n      </Button>\n      <Dialog\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        className={classes.modalLayout}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} disableTypography>\n          <Typography variant=\"h6\" className={classes.headingFont}>\n            Add User\n          </Typography>\n          {open ? (\n            <IconButton aria-label=\"close\" onClick={handleClose} className={classes.closeButton}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <AddUserForm\n          formik={formik}\n          userAlert={addUserAlert}\n          handleClose={handleClose}\n          buttonTitle={\"ADD\"}\n          disabled={false}\n        />\n      </Dialog>\n      {addUserAlert.error.status && <SnackBar msg={addUserAlert.error.msg} status={\"info\"} />}\n      {addUserAlert.success.status && (\n        <SnackBar msg={addUserAlert.success.msg} status={\"success\"} />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { DialogTitle, Dialog, Typography, IconButton } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useStyles } from \"../../style/createModerationModal\";\nimport { editUserMetadata } from \"../../services/pubnub\";\nimport SnackBar from \"../core/SnackBar\";\nimport { showError } from \"../../utils/helpers\";\nimport { useFormik } from \"formik\";\nimport AddUserForm from \"./AddUserForm\";\nimport { userValidationSchema } from \"./AddUserMetadataModal\";\n\nexport default function UpdateUserMetadataModal(props) {\n  const { pubnubObject, open, setOpen, data, isUpdated } = props;\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(null);\n  const [UUID, setUUID] = useState(\"\");\n  const [profileUrl, setProfileUrl] = useState(null);\n  const [updateUserAlert, setUpdateUserAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n    loading: false,\n  });\n  const classes = useStyles();\n\n  useEffect(() => {\n    setUserName(data.name);\n    setEmail(data.email);\n    setUUID(data.id);\n    setProfileUrl(data.profileUrl);\n  }, [data]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: !email ? \"\" : email,\n      name: userName,\n      user_id: UUID,\n      profile_url: !profileUrl ? \"\" : profileUrl,\n    },\n    enableReinitialize: true,\n    validationSchema: userValidationSchema,\n    onSubmit: (values) => {\n      updateUserMetadata(values);\n    },\n  });\n\n  const updateUserMetadata = (values) => {\n    setUpdateUserAlert({\n      ...updateUserAlert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n      loading: true,\n    });\n    (async () => {\n      try {\n        const userResponse = await editUserMetadata(\n          pubnubObject,\n          values.name,\n          values.email,\n          values.user_id,\n          values.profile_url\n        );\n        handleClose();\n        setUpdateUserAlert({\n          ...updateUserAlert,\n          success: { status: true, msg: \"User updated successfully\" },\n          error: { status: false, msg: \"\" },\n          loading: false,\n        });\n        isUpdated(userResponse);\n      } catch (e) {\n        handleClose();\n        setUpdateUserAlert({\n          ...updateUserAlert,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: showError(e.status.errorData) },\n          loading: false,\n        });\n      }\n    })();\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        className={classes.modalLayout}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} disableTypography>\n          <Typography variant=\"h6\" className={classes.headingFont}>\n            Update User Metadata\n          </Typography>\n          {open ? (\n            <IconButton aria-label=\"close\" onClick={handleClose} className={classes.closeButton}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <AddUserForm\n          formik={formik}\n          userAlert={updateUserAlert}\n          handleClose={handleClose}\n          buttonTitle={\"UPDATE\"}\n          disabled={true}\n        />\n      </Dialog>\n      {updateUserAlert.error.status && <SnackBar msg={updateUserAlert.error.msg} status={\"info\"} />}\n      {updateUserAlert.success.status && (\n        <SnackBar msg={updateUserAlert.success.msg} status={\"success\"} />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  DialogTitle,\n  Dialog,\n  Typography,\n  IconButton,\n  TextField,\n  DialogActions,\n  Button,\n  CircularProgress,\n  DialogContent,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useStyles } from \"../../style/createModerationModal\";\nimport { setUserMetadata } from \"../../services/pubnub\";\nimport SnackBar from \"../core/SnackBar\";\nimport { capitalizeFirstLetter, showError, selectedAccountsFromLS } from \"../../utils/helpers\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nconst validationSchema = yup.object({\n  reason: yup.string().required(\"Reason is required\"),\n});\n\nexport default function FlagUser(props) {\n  const { pubnub, open, setOpen, uuid, isUpdated, action } = props;\n  const [userID, setuserID] = useState(\"\");\n  const [flagAlert, setFlagAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n    loading: false,\n  });\n  const classes = useStyles();\n  const selectedAcount = selectedAccountsFromLS();\n  const updatedAt = new Date();\n  const customMetaData = uuid.custom || {};\n\n  useEffect(() => {\n    setuserID(uuid.id);\n  }, [uuid]);\n\n  const handleClose = () => {\n    formik.resetForm();\n    setOpen(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      reason: \"\",\n    },\n    enableReinitialize: true,\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      flagUser(values);\n    },\n  });\n\n  const flagUser = (values) => {\n    setFlagAlert({\n      ...flagAlert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n      loading: true,\n    });\n    customMetaData.reason = values.reason;\n    customMetaData.flaggedBy = selectedAcount && selectedAcount.email;\n    customMetaData.flaggedAt = updatedAt;\n    customMetaData.flag = action === \"flag\" ? true : false;\n    (async () => {\n      try {\n        const userResponse = await setUserMetadata(pubnub, userID, customMetaData);\n        handleClose();\n        setFlagAlert({\n          ...flagAlert,\n          success: {\n            status: true,\n            msg: `User ${capitalizeFirstLetter(action)}ged successfully.`,\n          },\n          error: { status: false, msg: \"\" },\n          loading: false,\n        });\n        isUpdated(userResponse);\n      } catch (e) {\n        handleClose();\n        setFlagAlert({\n          ...flagAlert,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: showError(e.status.errorData) },\n          loading: false,\n        });\n      }\n    })();\n  };\n\n  return (\n    <>\n      <Dialog\n        fullWidth={true}\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        className={classes.modalLayout}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} disableTypography>\n          <Typography variant=\"h6\" className={classes.headingFont}>\n            {capitalizeFirstLetter(action)} User\n          </Typography>\n          <IconButton aria-label=\"close\" onClick={handleClose} className={classes.closeButton}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogContent>\n            <Typography testid=\"reason\" className={classes.subHeadingFont}>\n              Reason\n            </Typography>\n            <TextField\n              id=\"reason\"\n              name=\"reason\"\n              placeholder=\"Add Reason\"\n              variant=\"outlined\"\n              className={classes.inputBox}\n              autoComplete=\"off\"\n              onChange={formik.handleChange}\n              value={formik.values.reason}\n              error={formik.touched.reason && Boolean(formik.errors.reason)}\n              helperText={formik.touched.reason && formik.errors.reason}\n            />\n\n            <br />\n          </DialogContent>\n          <DialogActions>\n            <Button id=\"cancel\" autoFocus className={classes.cancelButton} onClick={handleClose}>\n              CANCEL\n            </Button>\n\n            <Button\n              id=\"submit\"\n              autoFocus\n              className={classes.addButton}\n              type=\"submit\"\n              color=\"primary\"\n              disabled={flagAlert.loading}\n              startIcon={\n                flagAlert.loading ? <CircularProgress className={classes.loader} size={30} /> : null\n              }\n            >\n              <Typography className={classes.buttonText}>Submit</Typography>\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n      {flagAlert.error.status && <SnackBar msg={flagAlert.error.msg} status={\"info\"} />}\n      {flagAlert.success.status && <SnackBar msg={flagAlert.success.msg} status={\"success\"} />}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  DialogTitle,\n  Dialog,\n  Typography,\n  DialogActions,\n  Button,\n  DialogContent,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../../style/confirmDialog\";\nimport SnackBar from \"../core/SnackBar\";\nimport { capitalizeFirstLetter, showError } from \"../../utils/helpers\";\nimport { setUserMetadata } from \"../../services/pubnub\";\nexport default function BanUser(props) {\n  const { pubnubObject, open, setOpen, uuid, action } = props;\n  const [UUID, setUUID] = useState(\"\");\n  const [banAlert, setBanAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n  });\n  const classes = useStyles();\n  const customMetaData = uuid.custom || {};\n\n  useEffect(() => {\n    setUUID(uuid.id);\n  }, [uuid]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleBanClick = (values) => {\n    customMetaData.ban = action === \"ban\" ? true : false;\n\n    setBanAlert({\n      ...banAlert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n    });\n    (async () => {\n      try {\n        await setUserMetadata(pubnubObject, UUID, customMetaData);\n        handleClose();\n        setBanAlert({\n          ...banAlert,\n          success: {\n            status: true,\n            msg: `User ${capitalizeFirstLetter(action)}ned successfully`,\n          },\n          error: { status: false, msg: \"\" },\n        });\n      } catch (e) {\n        handleClose();\n        setBanAlert({\n          ...banAlert,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: showError(e.status.errorData) },\n        });\n      }\n    })();\n  };\n\n  return (\n    <>\n      <Dialog\n        testid=\"DialogId\"\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"confirm-dialog\"\n        fullWidth\n        maxWidth=\"xs\"\n        className={classes.confirmDialog}\n      >\n        <DialogTitle id=\"confirm-dialog\">{props.title}</DialogTitle>\n        <DialogContent>{props.children}</DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              setOpen(false);\n              handleBanClick();\n            }}\n            className={classes.confirmButton}\n          >\n            <Typography> Yes</Typography>\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            onClick={() => props.setOpen(false)}\n            className={classes.cancelButton}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {banAlert.error.status && <SnackBar msg={banAlert.error.msg} status={\"info\"} />}\n      {banAlert.success.status && <SnackBar msg={banAlert.success.msg} status={\"success\"} />}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { getUsers } from \"../../services/pubnub\";\nimport ListingTable from \"../tables/ListingTable\";\nimport { setLocalStorage } from \"../../services/localStorage\";\nimport { CircularProgress, Grid } from \"@material-ui/core\";\nimport { formatDate } from \"../../utils/helpers\";\nimport ConfirmDialog from \"../core/ConfirmDialog\";\nimport UpdateUserMetadataModal from \"./UpdateUserMetadataModal\";\nimport FlagUser from \"./FlagUser\";\nimport BanUser from \"./BanUser\";\n\nexport default function UsersTable({\n  searchResult,\n  setSearchableData,\n  deleteUser,\n  data,\n  pubnub,\n  filterBy,\n}) {\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [userData, setUserData] = useState([]);\n  const [updatedData, setUpdatedData] = useState([]);\n  const [UUID, setUUID] = useState(\"\");\n  const [tableCount, settableCount] = useState(0);\n  const [nextpage, setNextpage] = useState(\"\");\n  const [previousPage, setpreviousPage] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(0);\n  const [flagConfirmOpen, setFlagConfirmOpen] = useState(false);\n  const [action, setAction] = useState(\"\");\n  const [banModalOpen, setBanModalOpen] = useState(false);\n\n  const headCells = [\n    {\n      id: \"name\",\n      alignment: \"left\",\n      label: \"USER NAME\",\n      avatar: true,\n      user: true,\n    },\n    { id: \"email\", alignment: \"left\", label: \"EMAIL ID\" },\n    { id: \"updated\", alignment: \"left\", label: \"UPDATED ON\" },\n    { id: \"icons\", alignment: \"left\", icons: true, user: true },\n  ];\n\n  useEffect(() => {\n    setPageNumber(0);\n    fetchUsers(pubnub, \"\", \"\", filterBy);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, updatedData, filterBy]);\n\n  useEffect(() => {\n    if (searchResult.length) {\n      setUsers(searchResult);\n    }\n  }, [searchResult]);\n\n  useEffect(() => {\n    setSearchableData(users);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [users]);\n\n  const fetchUsers = (pubnubObject, next, prev, filter) => {\n    setUsers([]);\n    setLoading(true);\n    (async () => {\n      try {\n        const applicationUsers = await getUsers(pubnubObject, next, prev, filter);\n        if (!applicationUsers.data.length) {\n          setLoading(false);\n          setMessage(\"No User Metadata Found\");\n        }\n        settableCount(applicationUsers.totalCount);\n        setpreviousPage(applicationUsers.prev);\n        setNextpage(applicationUsers.next);\n        const usersList = [];\n        let selectedUser = {};\n        applicationUsers.data.map((user, index) => {\n          selectedUser = user;\n          selectedUser.updated = formatDate(user.updated);\n          selectedUser.uuid = user.id;\n          usersList.push(selectedUser);\n          return false;\n        });\n        setUsers(usersList);\n        setLocalStorage(\"PubNubUsers\", usersList);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n        setMessage(\"No User Metadata Found\");\n        setLocalStorage(\"PubNubUsers\", []);\n      }\n    })();\n  };\n\n  const editRow = (event, row) => {\n    setModalOpen(true);\n    setUserData(row);\n  };\n\n  const deleteRow = (event, rowId) => {\n    setConfirmOpen(true);\n    setUUID(rowId);\n  };\n\n  const confirmDelete = () => {\n    deleteUser(UUID);\n  };\n\n  const isUpdated = (x) => {\n    setUpdatedData(x);\n  };\n\n  const getNewPage = (i) => {\n    if (pageNumber < i) {\n      setPageNumber(i);\n      fetchUsers(pubnub, nextpage, \"\", \"\");\n    } else {\n      setPageNumber(pageNumber - 1);\n      fetchUsers(pubnub, \"\", previousPage, \"\");\n    }\n  };\n\n  const flagUser = (event, rowId) => {\n    setFlagConfirmOpen(true);\n    setAction(\"flag\");\n    setUUID(rowId);\n  };\n\n  const banUser = (event, rowId) => {\n    setBanModalOpen(true);\n    setAction(\"ban\");\n    setUUID(rowId);\n  };\n\n  const unFlagUser = (event, rowId) => {\n    setFlagConfirmOpen(true);\n    setAction(\"unflag\");\n    setUUID(rowId);\n  };\n\n  const unbanUser = (event, rowId) => {\n    setBanModalOpen(true);\n    setAction(\"unban\");\n    setUUID(rowId);\n  };\n\n  return (\n    <>\n      <ListingTable\n        data={users}\n        headCells={headCells}\n        message={message}\n        editRow={editRow}\n        deleteRow={deleteRow}\n        flagUser={flagUser}\n        banUser={banUser}\n        unbanUser={unbanUser}\n        unFlagUser={unFlagUser}\n        getNewPage={getNewPage}\n        tableCount={tableCount}\n        number={pageNumber}\n      />\n      {loading ? (\n        <Grid justify=\"center\" container>\n          <CircularProgress />\n        </Grid>\n      ) : null}\n      <ConfirmDialog\n        title=\"Are you sure?\"\n        open={confirmOpen}\n        setOpen={setConfirmOpen}\n        onConfirm={confirmDelete}\n        actionMessage={\"Yes, Delete it\"}\n      >\n        You want to delete this user?\n      </ConfirmDialog>\n      <UpdateUserMetadataModal\n        open={modalOpen}\n        setOpen={setModalOpen}\n        pubnubObject={pubnub}\n        data={userData}\n        isUpdated={isUpdated}\n      />\n      <BanUser\n        title=\"Are you sure?\"\n        open={banModalOpen}\n        setOpen={setBanModalOpen}\n        pubnubObject={pubnub}\n        uuid={UUID}\n        isUpdated={isUpdated}\n        action={action}\n      >\n        You want to {action} this user?\n      </BanUser>\n      <FlagUser\n        open={flagConfirmOpen}\n        setOpen={setFlagConfirmOpen}\n        uuid={UUID}\n        isUpdated={isUpdated}\n        pubnub={pubnub}\n        action={action}\n      >\n        You want to {action} this user?\n      </FlagUser>\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  list: {\n    width: 400,\n  },\n  title: {\n    font: \"normal normal medium 28px/38px Proxima Nova\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#414141\",\n    opacity: 1,\n  },\n  avatar: {\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    border: \"1px solid #6387ED67\",\n    borderRadius: \"5px\",\n    opacity: 1,\n    height: \"50px\",\n  },\n  listText: {\n    font: \"var(--unnamed-font-style-normal) normal medium var(--unnamed-font-size-16)/var(--unnamed-line-spacing-24) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#414141\",\n    opacity: 1,\n  },\n  userType: {\n    font: \"var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-16)/var(--unnamed-line-spacing-24) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#6387ED\",\n    opacity: 1,\n  },\n});\n","import React from \"react\";\nimport { useStyles } from \"../../style/drawer\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  Avatar,\n  Box,\n  Checkbox,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nexport default function FilterUsers(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [isBanChecked, setIsBanChecked] = React.useState(false);\n  const [isFlagChecked, setIsFlagChecked] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (action) => {\n    if (action === \"ban\" && !isBanChecked) {\n      setIsFlagChecked(false);\n      setIsBanChecked(true);\n      props.isFiltered(action);\n    } else if (action === \"flag\" && !isFlagChecked) {\n      setIsBanChecked(false);\n      setIsFlagChecked(true);\n      props.isFiltered(action);\n    } else {\n      props.isFiltered(\"all\");\n      setIsBanChecked(false);\n      setIsFlagChecked(false);\n    }\n  };\n\n  return (\n    <>\n      <Avatar id=\"openDrawer\" variant=\"square\" onClick={handleClickOpen} className={classes.avatar}>\n        <IconButton>\n          <img src={process.env.PUBLIC_URL + \"/images/filter.svg\"} alt=\"filter\" />\n        </IconButton>\n      </Avatar>\n      <Drawer anchor=\"right\" open={open} onClose={handleClose}>\n        <div className={classes.list}>\n          <Box pl={3} pt={4} pr={1}>\n            <Grid justify=\"space-between\" container>\n              <Grid item>\n                <Typography className={classes.title}>Filters</Typography>\n              </Grid>\n              <Grid item>\n                <Button id=\"drawer\" onClick={handleClose}>\n                  <img src={process.env.PUBLIC_URL + \"/images/times.svg\"} alt=\"filter\" />\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box pl={3} pt={4}>\n            <Typography testid=\"UserType\" className={classes.userType}>\n              User Type\n            </Typography>\n          </Box>\n          <List>\n            <ListItem button onClick={() => handleChange(\"ban\")} testid=\"banButton\">\n              <ListItemIcon>\n                <Checkbox\n                  id=\"banCheck\"\n                  name=\"banned_users\"\n                  value=\"ban\"\n                  color=\"primary\"\n                  checked={isBanChecked}\n                />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography testid=\"bannedUsers\" className={classes.listText}>\n                  Banned Users\n                </Typography>\n              </ListItemText>\n            </ListItem>\n            <ListItem button onClick={() => handleChange(\"flag\")} testid=\"flagButton\">\n              <ListItemIcon>\n                <Checkbox\n                  id=\"flagCheck\"\n                  name=\"flagged_users\"\n                  value=\"flag\"\n                  color=\"primary\"\n                  checked={isFlagChecked}\n                />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography testid=\"flaggedUsers\" className={classes.listText}>\n                  Flagged Users\n                </Typography>\n              </ListItemText>\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Grid, Typography, Box } from \"@material-ui/core\";\nimport { formatDate, showError, usersFromLS } from \"../../utils/helpers\";\nimport Search from \"../core/Search\";\nimport UsersTable from \"./UsersTable\";\nimport AddUserMetadataModal from \"./AddUserMetadataModal\";\nimport usePubNub from \"../../utils/usePubNub\";\nimport { deleteUserMetadata, getUserByName } from \"../../services/pubnub\";\nimport FilterUsers from \"./FilterUsers\";\nimport SnackBar from \"../core/SnackBar\";\n\nfunction UsersListing() {\n  const [searchResult, setSearchResult] = useState([]);\n  const [dataAdded, setDataAdded] = useState([]);\n  const { pubnub } = usePubNub();\n  const [searched] = useState(\"\");\n  const [filterBy, setFilterBy] = useState(\"\");\n  const [userAlert, setUserAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n  });\n\n  const requestUserSearch = (searchedVal) => {\n    setUserAlert({\n      ...userAlert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n    });\n    (async () => {\n      setUserAlert({\n        ...userAlert,\n        success: { status: false, msg: \"\" },\n        error: { status: false, msg: \"\" },\n      });\n      try {\n        const filteredRows = await getUserByName(pubnub, searchedVal);\n        const usersList = [];\n        let selectedUser = {};\n        if (!filteredRows.length) {\n          setUserAlert({\n            ...userAlert,\n            success: { status: false, msg: \"\" },\n            error: { status: true, msg: \"No users found\" },\n          });\n        }\n        filteredRows.map((user, index) => {\n          selectedUser = user;\n          selectedUser.updated = formatDate(user.updated);\n          usersList.push(selectedUser);\n          return false;\n        });\n        setSearchResult(usersList);\n      } catch (e) {\n        setUserAlert({\n          ...userAlert,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: \"Failed to filter user\" },\n        });\n      }\n    })();\n  };\n  const cancelUserSearch = () => {\n    setSearchResult(usersFromLS());\n  };\n\n  const setSearchableData = (usersData) => {\n    setSearchResult(usersData);\n  };\n\n  const deleteUser = (UUID) => {\n    if (UUID) {\n      (async () => {\n        try {\n          await deleteUserMetadata(pubnub, UUID);\n          setDataAdded([]);\n          setUserAlert({\n            ...userAlert,\n            success: { status: true, msg: \"User deleted successfully\" },\n            error: { status: false, msg: \"\" },\n          });\n        } catch (e) {\n          setUserAlert({\n            ...userAlert,\n            success: { status: false, msg: \"\" },\n            error: { status: true, msg: showError(e.status.errorData) },\n          });\n        }\n      })();\n    }\n  };\n\n  const userAdded = (data) => {\n    setDataAdded(data);\n  };\n\n  const handleFilterChange = (value) => {\n    let filter = \"\";\n    if (value !== \"all\") {\n      filter = `custom.${value} == true`;\n    }\n    setFilterBy(filter);\n  };\n\n  return (\n    <>\n      <Helmet title=\"Users\" />\n      <Grid justify=\"space-between\" container>\n        <Grid item sm={4}>\n          <Box pl={1}>\n            <Typography testid=\"title\" variant=\"h5\">\n              Users\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid item sm={8}>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n            <Box ml={2}>\n              <Search\n                searched={searched}\n                requestSearch={requestUserSearch}\n                cancelSearch={cancelUserSearch}\n                placeholder={\"Search for user name\"}\n              />\n            </Box>\n            <Box ml={2}>\n              <FilterUsers isFiltered={handleFilterChange} />\n            </Box>\n            <Box ml={2}>\n              <AddUserMetadataModal pubnubObject={pubnub} isAdded={userAdded} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n      <br />\n      <Grid container spacing={6}>\n        <Grid item xs={12}>\n          <UsersTable\n            searchResult={searchResult}\n            setSearchableData={setSearchableData}\n            deleteUser={deleteUser}\n            data={dataAdded}\n            pubnub={pubnub}\n            filterBy={filterBy}\n          />\n        </Grid>\n      </Grid>\n      {userAlert.error.status && <SnackBar msg={userAlert.error.msg} status={\"info\"} />}\n      {userAlert.success.status && <SnackBar msg={userAlert.success.msg} status={\"success\"} />}\n    </>\n  );\n}\n\nexport default UsersListing;\n","import React from \"react\";\nimport UsersListing from \"../../components/users/UsersListing\";\nimport DashboardLayout from \"../../layouts/Dashboard\";\n\nconst Users = () => {\n  return (\n    <>\n      <DashboardLayout>\n        <UsersListing />\n      </DashboardLayout>\n    </>\n  );\n};\nexport default Users;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  header: {\n    opacity: 1,\n    background: \"#F7F8FA 0% 0% no-repeat padding-box\",\n    height: \"50px\",\n  },\n  messages: {\n    padding: theme.spacing(2),\n    opacity: 1,\n    border: \"1px solid #F3F3F3\",\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    boxShadow: \"0px 3px 6px #00000014\",\n    height: \"57vh\",\n    overflow: \"auto\",\n  },\n  chat: {\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    borderRadius: \"0px 10px 10px 10px\",\n    opacity: 1,\n    height: \"auto\",\n    width: \"auto\",\n    border: \"1px solid #DDDDDD\",\n    marginBottom: \"5px\",\n    marginLeft: \"8%\",\n    maxWidth: \"40%\",\n  },\n  values: {\n    color: \"#414141\",\n    textAlign: \"left\",\n    opacity: 1,\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-18)/var(--unnamed-line-spacing-23) var(--unnamed-font-family-proxima-nova)\",\n  },\n  avatar: {\n    background: \"#EACAFF\",\n    color: \"#BD59FF\",\n    borderRadius: \"8px\",\n  },\n  appName: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    fontSize: \"12px\",\n    color: \"#C2C2C2\",\n    opacity: 1,\n  },\n  timeField: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 11px/13px var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#C2C2C2\",\n    opacity: 1,\n    marginBottom: \"10px\",\n    marginLeft: \"8%\",\n  },\n  channelMember: {\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    borderRadius: \"10px\",\n    opacity: 1,\n    height: \"48px\",\n    width: \"100%\",\n    marginBottom: \"20px\",\n  },\n  user: {\n    font: \"var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-14)/var(--unnamed-line-spacing-17) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#4B5155\",\n    opacity: 1,\n    marginBottom: \"10px\",\n    marginLeft: \"3%\",\n  },\n  chatText: {\n    font: \"var(--unnamed-font-style-normal) normal medium var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#414141\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    marginLeft: \"20px\",\n    marginRight: \"20px\",\n    wordBreak: \"break-word\",\n    whiteSpace: \"pre-wrap\",\n  },\n  members: {\n    font: \"var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-14)/var(--unnamed-line-spacing-17) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#4B5155\",\n    opacity: 1,\n    margin: \"10px 0px 10px 10px\",\n  },\n  channelMembers: {\n    padding: theme.spacing(2),\n    opacity: 1,\n    border: \"1px solid #F3F3F3\",\n    background: \"#FFFFFF 0% 0% no-repeat padding-box\",\n    boxShadow: \"0px 3px 6px #00000014\",\n    maxHeight: \"74vh\",\n    overflow: \"auto\",\n  },\n  totalCount: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-12)/var(--unnamed-line-spacing-15) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#414141\",\n    opacity: 1,\n    marginBottom: \"10px\",\n  },\n  userProfile: {\n    borderRadius: \"8px\",\n  },\n  totalUsers: {\n    background: \"#C2C2C2 0% 0% no-repeat padding-box\",\n    borderRadius: \"5px\",\n    opacity: 1,\n    font: \"var(--unnamed-font-style-normal) normal 600 11px/13px var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#FFFFFF\",\n    height: \"auto\",\n    width: \"25px\",\n  },\n  onlineUsers: {\n    background: \"#76C00D 0% 0% no-repeat padding-box\",\n    borderRadius: \"5px\",\n    opacity: 1,\n    font: \"var(--unnamed-font-style-normal) normal 600 11px/13px var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#FFFFFF\",\n    height: \"auto\",\n    width: \"25px\",\n  },\n  alertMessage: {\n    background: \"transparent\",\n  },\n  messagesCount: {\n    background: \"#E5EAF9 0% 0% no-repeat padding-box\",\n    borderRadius: \"0px 0px 5px 5px\",\n    opacity: 1,\n    textTransform: \"none\",\n  },\n  messagesCountFont: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-12)/16px var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"center\",\n    color: \"#6387ED\",\n    opacity: 1,\n    textTransform: \"camelcase\",\n  },\n  deletedChat: {\n    font: \"var(--unnamed-font-style-normal) normal medium var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"left\",\n    color: \"#414141\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    marginLeft: \"20px\",\n    marginRight: \"20px\",\n    textDecoration: \"line-through\",\n  },\n  messageContainer: {\n    \"& button\": {\n      display: \"none\",\n    },\n    \"&:hover\": {\n      \"& button\": {\n        display: \"inline-block\",\n      },\n    },\n  },\n  activeToggled: {\n    background: \"#6387ED 0% 0% no-repeat padding-box\",\n    borderRadius: \"5px\",\n    opacity: 1,\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-12)/16px Graphik\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"center\",\n    color: \"#FFFFFF\",\n    textTransform: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#6387ED\",\n    },\n  },\n  disableToggled: {\n    background: \"#E5EAF9 0% 0% no-repeat padding-box\",\n    borderRadius: \"5px\",\n    opacity: 1,\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textAlign: \"center\",\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-12)/16px Graphik\",\n    color: \"#6387ED\",\n    textTransform: \"none\",\n    \"&:hover\": {\n      backgroundColor: \"#E5EAF9\",\n    },\n  },\n  messageBox: {\n    background: \"#F7F8FA 0% 0% no-repeat padding-box\",\n    border: \"1px solid #DBE5ED\",\n    borderRadius: \"8px 8px 0px 0px\",\n    opacity: 1,\n    height: \"auto\",\n    borderRight: \"#6387ED\",\n  },\n  editMessageHeader: {\n    font: \"var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    color: \"#414141\",\n    opacity: 1,\n    marginTop: \"10px\",\n    marginLeft: \"20px\",\n  },\n  editMessageFont: {\n    font: \"var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    color: \"#414141\",\n    opacity: 1,\n    marginTop: \"10px\",\n    marginLeft: \"20px\",\n    marginBottom: \"10px\",\n    wordBreak: \"break-word\",\n    whiteSpace: \"pre-wrap\",\n  },\n  image: {\n    maxWidth: \"240px\",\n    maxHeight: \"165px\",\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n    border: \"1px solid #DDDDDD\",\n    borderRadius: \"0px 10px 10px 10px\",\n  },\n  imageIcon: {\n    position: \"absolute\",\n    top: \"10px\",\n    right: \"10px\",\n  },\n  imageContainer: {\n    padding: \"0px\",\n    cursor: \"default\",\n  },\n}));\n","import { Badge, withStyles } from \"@material-ui/core\";\n\nexport const OnlineBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: \"#76C00D\",\n    color: \"#76C00D\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n}))(Badge);\n\nexport const OfflineBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: \"#C2C2C2\",\n    color: \"#C2C2C2\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n}))(Badge);\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStyles } from \"../../style/confirmDialog\";\nimport { Typography } from \"@material-ui/core\";\nimport { setUserMetadata } from \"../../services/pubnub\";\nimport SnackBar from \"../core/SnackBar\";\nimport { capitalizeFirstLetter, selectedChannelFromLS } from \"../../utils/helpers\";\n\nconst UserAction = (props) => {\n  const classes = useStyles();\n  const [muteAlert, setMuteAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n  });\n  const selectedChannel = selectedChannelFromLS();\n  const customMetaData = props.user.custom || {};\n  let mutedChannels = props.user.custom && props.user.custom.mutedChannels;\n  let blockedChannels = props.user.custom && props.user.custom.blockedChannels;\n\n  const getMutedChannels = () => {\n    if (!mutedChannels) {\n      mutedChannels = selectedChannel;\n    } else {\n      let channels = mutedChannels.split(\",\");\n      if (props.action === \"mute\") channels.push(selectedChannel);\n      else channels = channels.filter((item) => item !== selectedChannel);\n      mutedChannels = channels.join(\",\");\n    }\n    return mutedChannels;\n  };\n\n  const getBlockedChannels = () => {\n    if (!blockedChannels) {\n      blockedChannels = selectedChannel;\n    } else {\n      let channels = blockedChannels.split(\",\");\n      if (props.action === \"block\") channels.push(selectedChannel);\n      else channels = channels.filter((item) => item !== selectedChannel);\n      blockedChannels = channels.join(\",\");\n    }\n    return blockedChannels;\n  };\n\n  const handleMuteClick = () => {\n    setMuteAlert({\n      ...muteAlert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n    });\n    if (props.action === \"mute\" || props.action === \"unmute\") {\n      let channels = getMutedChannels();\n      customMetaData.mutedChannels = channels;\n    }\n    if (props.action === \"block\" || props.action === \"unblock\") {\n      let channels = getBlockedChannels();\n      customMetaData.blockedChannels = channels;\n    }\n    (async () => {\n      try {\n        const response = await setUserMetadata(props.pubnub, props.user.id, customMetaData);\n        props.updated(response, props.action);\n        setMuteAlert({\n          ...muteAlert,\n          success: {\n            status: true,\n            msg: \"Successfully updated\",\n          },\n          error: { status: false, msg: \"\" },\n        });\n      } catch (e) {\n        setMuteAlert({\n          ...muteAlert,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: \"Failed to add metadata\" },\n        });\n      }\n    })();\n  };\n\n  return (\n    <>\n      <Dialog\n        testid=\"DialogId\"\n        open={props.open}\n        onClose={() => props.setOpen(false)}\n        aria-labelledby=\"confirm-dialog\"\n        fullWidth\n        maxWidth=\"xs\"\n        className={classes.confirmDialog}\n      >\n        <DialogTitle id=\"confirm-dialog\">{props.title}</DialogTitle>\n        <DialogContent>{props.children}</DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              props.setOpen(false);\n              handleMuteClick();\n            }}\n            className={classes.confirmButton}\n          >\n            <Typography>Yes, {capitalizeFirstLetter(props.action)} them</Typography>\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            onClick={() => props.setOpen(false)}\n            className={classes.cancelButton}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {muteAlert.error.status && <SnackBar msg={muteAlert.error.msg} status={\"info\"} />}\n      {muteAlert.success.status && <SnackBar msg={muteAlert.success.msg} status={\"success\"} />}\n    </>\n  );\n};\nexport default UserAction;\n","import React from \"react\";\nimport { Waypoint } from \"react-waypoint\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\n\nexport default function MembersLoader(props) {\n  return (\n    <>\n      {props.membersLength > 99 && props.membersLength < props.totalCount ? (\n        <Waypoint onEnter={props.fetchChannelsMembersOnScroll} />\n      ) : null}\n      {props.loading ? (\n        <Grid justify=\"center\" container>\n          <CircularProgress />\n        </Grid>\n      ) : null}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Avatar, Box, Grid, IconButton, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/messages\";\nimport { getChannelMembers, getOnlineMembers } from \"../../services/pubnub\";\nimport { OnlineBadge, OfflineBadge } from \"../../style/badge\";\nimport {\n  capitalizeFirstLetter,\n  formatProfileImageUrl,\n  checkMuteStatus,\n  checkBlockStatus,\n} from \"../../utils/helpers\";\nimport { LightTooltip } from \"../../style/tooltip\";\nimport UserAction from \"../users/UserAction\";\nimport MembersLoader from \"./MembersLoader\";\n\nexport default function Members(props) {\n  const classes = useStyles();\n  const [members, setMembers] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState(0);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [over, setOver] = useState(false);\n  const [selectedUser, setSelectedUser] = useState([]);\n  const [action, setAction] = useState(\"\");\n  const [nextPage, setNextPage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchOnlineMembers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.channelMembers]);\n\n  useEffect(() => {\n    setNextPage(props.page);\n  }, [props.page]);\n\n  /**\n   * Fetches online users of a channel\n   */\n  const fetchOnlineMembers = () => {\n    (async () => {\n      try {\n        const onlineMembersResponse = await getOnlineMembers(props.pubnub, props.channelName);\n        setOnlineUsers(onlineMembersResponse.length);\n        props.channelMembers.map((member, i) => {\n          props.channelMembers[i][\"mute\"] = false;\n          props.channelMembers[i][\"block\"] = false;\n          if (checkMuteStatus(member, props.channelName)) {\n            props.channelMembers[i][\"mute\"] = true;\n          }\n          if (checkBlockStatus(member, props.channelName)) {\n            props.channelMembers[i][\"block\"] = true;\n          }\n          onlineMembersResponse.map((onlineMember, j) => {\n            if (member.uuid.id === onlineMember.uuid) {\n              props.channelMembers[i][\"status\"] = \"online\";\n            }\n            return false;\n          });\n          return false;\n        });\n        let onlineUsersArray = [];\n        onlineMembersResponse.map((onlineMember, j) => {\n          let userObj = {\n            uuid: {\n              name: null,\n              profileUrl: null,\n              id: null,\n            },\n            status: \"online\",\n            actionsDisable: true,\n            toolTipTitle: \"User not a member of channel\",\n          };\n          let filterMember = props.channelMembers.filter(\n            (member) => member.uuid.id === onlineMember.uuid\n          );\n          if (!filterMember.length) {\n            userObj.uuid.id = onlineMember.uuid;\n            onlineUsersArray.push(userObj);\n          }\n          return false;\n        });\n\n        const setOnlineUsersArray = [...new Set(onlineUsersArray)];\n        const users = [...setOnlineUsersArray, ...props.channelMembers];\n        setMembers(users);\n      } catch (e) {}\n    })();\n  };\n\n  /**\n   * Handles clicking on a member to view use details in a card\n   */\n  const handleClick = (detail) => {\n    if (!over) props.selectedMemberDetail(detail);\n  };\n\n  /**\n   * Handles mute icon click to mute a user\n   */\n  const confirmMute = (event, user) => {\n    setAction(\"mute\");\n    setConfirmOpen(true);\n    setSelectedUser(user);\n  };\n\n  /**\n   * Handles unmute icon click to unmute a user\n   */\n  const confirmUnmute = (event, user) => {\n    setAction(\"unmute\");\n    setConfirmOpen(true);\n    setSelectedUser(user);\n  };\n\n  /**\n   * Handles block icon click to blcok a user\n   */\n  const confirmBlock = (event, user) => {\n    setAction(\"block\");\n    setConfirmOpen(true);\n    setSelectedUser(user);\n  };\n\n  /**\n   * Handles unblock icon click to unblock a user\n   */\n  const confirmUnblock = (event, user) => {\n    setAction(\"unblock\");\n    setConfirmOpen(true);\n    setSelectedUser(user);\n  };\n\n  const metadataUpdated = (userDetail, response) => {\n    let filteredArray = members.filter((item) => item.uuid.id !== userDetail.id);\n    let filteredMember = members.filter((row) => {\n      return row.uuid.id.includes(userDetail.id);\n    });\n    switch (response) {\n      case \"mute\":\n        filteredMember[0].mute = true;\n        break;\n      case \"unmute\":\n        filteredMember[0].mute = false;\n        break;\n      case \"block\":\n        filteredMember[0].block = true;\n        break;\n      case \"unblock\":\n        filteredMember[0].block = false;\n        break;\n      default:\n        break;\n    }\n    const memberIndex = members.findIndex((row) => {\n      return row.uuid.id.includes(userDetail.id);\n    });\n    filteredArray.splice(memberIndex, 0, filteredMember[0]);\n    setMembers(filteredArray);\n  };\n\n  /**\n   * Fetches other channel members on scrolling down\n   */\n  const fetchChannelsMembersOnScroll = () => {\n    setLoading(true);\n    (async () => {\n      try {\n        const channelMembers = await getChannelMembers(props.pubnub, props.channelName, nextPage);\n        setMembers((oldArray) => [...oldArray, ...channelMembers.data]);\n        setNextPage(channelMembers.next);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n      }\n    })();\n  };\n\n  return (\n    <>\n      <Grid>\n        <Typography className={classes.members}>Members</Typography>\n        <Grid container>\n          <Grid>\n            <Box mr={1} ml={1} mb={2}>\n              <Avatar variant=\"square\" className={classes.onlineUsers}>\n                {onlineUsers}\n              </Avatar>\n            </Box>\n          </Grid>\n          <Box>\n            <small className={classes.totalCount}>Online Users</small>\n          </Box>\n          <Grid>\n            <Box mr={1} mb={2} ml={1}>\n              <Avatar variant=\"square\" className={classes.totalUsers}>\n                {members.length}\n              </Avatar>\n            </Box>\n          </Grid>\n          <Box>\n            <small className={classes.totalCount}>Total Users</small>\n          </Box>\n        </Grid>\n        {members?.map((member, i) => {\n          return (\n            <Grid\n              justify=\"flex-start\"\n              container\n              className={classes.channelMember}\n              key={i}\n              onClick={() => handleClick(member)}\n            >\n              <Box mr={1}>\n                {member.status ? (\n                  <OnlineBadge\n                    variant=\"dot\"\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"right\",\n                    }}\n                  >\n                    <Avatar\n                      variant=\"square\"\n                      className={classes.userProfile}\n                      src={formatProfileImageUrl(member.uuid.profileUrl)}\n                    />\n                  </OnlineBadge>\n                ) : (\n                  <OfflineBadge\n                    variant=\"dot\"\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"right\",\n                    }}\n                  >\n                    <Avatar\n                      variant=\"square\"\n                      className={classes.userProfile}\n                      src={formatProfileImageUrl(member.uuid.profileUrl)}\n                    />\n                  </OfflineBadge>\n                )}\n              </Box>\n              <Grid item sm={6} xs={12} md={6}>\n                <small className={classes.values}>\n                  {!member.uuid.name\n                    ? member.uuid.id.substring(0, 12) + \"..\" || \"Unknown\"\n                    : capitalizeFirstLetter(member.uuid.name)}\n                </small>\n                <br />\n                <small className={classes.appName}>\n                  {!member.status ? \"offline\" : member.status}\n                </small>\n              </Grid>\n              <Box ml={1}>\n                {!member.mute ? (\n                  <>\n                    <LightTooltip title={member.toolTipTitle || \"Mute\"}>\n                      <span>\n                        <IconButton\n                          edge=\"start\"\n                          onClick={(event) => confirmMute(event, member.uuid)}\n                          onMouseOver={() => setOver(true)}\n                          onMouseOut={() => setOver(false)}\n                          disabled={member.actionsDisable}\n                        >\n                          <img\n                            src={process.env.PUBLIC_URL + \"/images/unmute.svg\"}\n                            alt=\"mute\"\n                            style={{ width: \"20px\", height: \"16px\" }}\n                          />\n                        </IconButton>\n                      </span>\n                    </LightTooltip>\n                  </>\n                ) : (\n                  <>\n                    <LightTooltip title=\"Unmute\">\n                      <span>\n                        <IconButton\n                          edge=\"start\"\n                          onClick={(event) => confirmUnmute(event, member.uuid)}\n                          onMouseOver={() => setOver(true)}\n                          onMouseOut={() => setOver(false)}\n                          disabled={member.actionsDisable}\n                        >\n                          <img src={process.env.PUBLIC_URL + \"/images/mute.svg\"} alt=\"unmute\" />\n                        </IconButton>\n                      </span>\n                    </LightTooltip>\n                  </>\n                )}\n                {!member.block ? (\n                  <>\n                    <LightTooltip title={member.toolTipTitle || \"Block\"}>\n                      <span>\n                        <IconButton\n                          edge=\"start\"\n                          onClick={(event) => confirmBlock(event, member.uuid)}\n                          onMouseOver={() => setOver(true)}\n                          onMouseOut={() => setOver(false)}\n                          disabled={member.actionsDisable}\n                        >\n                          <img src={process.env.PUBLIC_URL + \"/images/unblock.svg\"} alt=\"block\" />\n                        </IconButton>\n                      </span>\n                    </LightTooltip>\n                  </>\n                ) : (\n                  <>\n                    <LightTooltip title=\"Unblock\">\n                      <span>\n                        <IconButton\n                          edge=\"start\"\n                          onClick={(event) => confirmUnblock(event, member.uuid)}\n                          onMouseOver={() => setOver(true)}\n                          onMouseOut={() => setOver(false)}\n                          disabled={member.actionsDisable}\n                        >\n                          <img src={process.env.PUBLIC_URL + \"/images/block.svg\"} alt=\"unblock\" />\n                        </IconButton>\n                      </span>\n                    </LightTooltip>\n                  </>\n                )}\n              </Box>\n            </Grid>\n          );\n        })}\n      </Grid>\n      <UserAction\n        open={confirmOpen}\n        user={selectedUser}\n        title=\"Are you sure?\"\n        setOpen={setConfirmOpen}\n        pubnub={props.pubnub}\n        action={action}\n        updated={metadataUpdated}\n      >\n        You want to {action} this user?\n      </UserAction>\n      <MembersLoader\n        loading={loading}\n        membersLength={members.length}\n        fetchChannelsMembersOnScroll={fetchChannelsMembersOnScroll}\n        totalCount={props.totalCount}\n      />\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  sectionHeading: {\n    font: \"font: var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-18)/var(--unnamed-line-spacing-23) var(--unnamed-font-family-proxima-nova)\",\n    color: \"#414141\",\n    opacity: 1,\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    fontWeight: 700,\n  },\n  profilePicture: {\n    width: \"100%\",\n  },\n  name: {\n    fontSize: \"15px\",\n    marginTop: \"15px\",\n    marginBottom: \"25px\",\n    fontWeight: 700,\n    font: \"font: var(--unnamed-font-style-normal) normal 600 var(--unnamed-font-size-18)/var(--unnamed-line-spacing-23) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"0px\",\n    color: \"#414141\",\n    opacity: 1,\n  },\n  label: {\n    color: \"#C2C2C2\",\n    fontSize: \"15px\",\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-12)/var(--unnamed-line-spacing-15) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"-1px\",\n  },\n  labelItem: {\n    fontSize: \"15px\",\n  },\n  containerRoot: {\n    padding: \"10px\",\n  },\n  closeIcon: {\n    background: \"transparent url(images/closeBg.svg) 0% 0% no-repeat padding-box;\",\n    padding: \"12px 12px 10px 12px\",\n    borderRadius: \"5px\",\n  },\n  blockIcon: {\n    background: \"transparent url(images/greyBg.svg) 0% 0% no-repeat padding-box;\",\n    padding: \"12px 12px 10px 12px\",\n    borderRadius: \"5px\",\n  },\n  online: {\n    height: \"10px\",\n    width: \"10px\",\n    marginLeft: \"2px\",\n    backgroundColor: \"#76C00D\",\n    borderRadius: \"50%\",\n    display: \" inline-block\",\n  },\n}));\n","import React, { useEffect, useState } from \"react\";\nimport { useStyles } from \"../../style/memberDetail\";\nimport { Box, Grid, Typography, IconButton } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport UserAction from \"../users/UserAction\";\nimport { LightTooltip } from \"../../style/tooltip\";\nimport { formatProfileImageUrl } from \"../../utils/helpers\";\n\nconst MemberDetail = ({ member, toggleMemberDetails, pubnub }) => {\n  const classes = useStyles();\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState([]);\n  const [action, setAction] = useState(\"\");\n  const [mute, setMute] = useState(false);\n  const [block, setBlock] = useState(false);\n\n  useEffect(() => {\n    if (member.block) setBlock(member.block);\n    if (member.mute) setMute(member.mute);\n  }, [member]);\n\n  const muteMember = (event, user) => {\n    setAction(\"mute\");\n    setDialogOpen(true);\n    setSelectedUser(user);\n  };\n\n  const unmuteMember = (event, user) => {\n    setAction(\"unmute\");\n    setDialogOpen(true);\n    setSelectedUser(user);\n  };\n\n  const blockUser = (event, user) => {\n    setAction(\"block\");\n    setDialogOpen(true);\n    setSelectedUser(user);\n  };\n\n  const unblockUser = (event, user) => {\n    setAction(\"unblock\");\n    setDialogOpen(true);\n    setSelectedUser(user);\n  };\n\n  const metadataUpdated = (userDetail, response) => {\n    switch (response) {\n      case \"mute\":\n        setMute(true);\n        break;\n      case \"unmute\":\n        setMute(false);\n        break;\n      case \"block\":\n        setBlock(true);\n        break;\n      case \"unblock\":\n        setBlock(false);\n        break;\n      default:\n        break;\n    }\n  };\n\n  if (member) {\n    return (\n      <>\n        <Grid container justify=\"flex-start\">\n          <Grid item>\n            <Grid container>\n              <Grid item>\n                <IconButton onClick={() => toggleMemberDetails(false)}>\n                  <img src={process.env.PUBLIC_URL + \"/images/Button-Arrow.svg\"} alt=\"toggle\" />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <Box pt={1} pl={1}>\n                  <Typography variant=\"body2\" className={classes.sectionHeading}>\n                    More Details\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container justify=\"center\">\n          <Grid sm={6} md={6} item>\n            <img\n              src={formatProfileImageUrl(member.uuid.profileUrl)}\n              className={classes.profilePicture}\n              alt=\"profile\"\n            />\n          </Grid>\n          <Grid sm={12} md={12} item>\n            <Typography variant=\"h6\" align=\"center\" className={classes.name}>\n              {member.uuid.name || member.uuid.id}{\" \"}\n              {member.status && <span className={classes.online} />}\n            </Typography>\n          </Grid>\n          <Grid container justify=\"center\">\n            <Grid sm={4} md={4} lg={3} item>\n              {!mute ? (\n                <LightTooltip title=\"Mute\">\n                  <span>\n                    <IconButton\n                      aria-label=\"notification\"\n                      size=\"small\"\n                      onClick={(event) => muteMember(event, member.uuid)}\n                      disabled={member.actionsDisable}\n                    >\n                      <div className={classes.blockIcon}>\n                        <img\n                          src={process.env.PUBLIC_URL + \"/images/unmute.svg\"}\n                          alt=\"mute\"\n                          style={{ width: \"20px\", height: \"16px\" }}\n                        />\n                      </div>\n                    </IconButton>\n                  </span>\n                </LightTooltip>\n              ) : (\n                <LightTooltip title=\"UnMute\">\n                  <span>\n                    <IconButton\n                      aria-label=\"notification\"\n                      size=\"small\"\n                      onClick={(event) => unmuteMember(event, member.uuid)}\n                      disabled={member.actionsDisable}\n                    >\n                      <div className={classes.closeIcon}>\n                        <img src={process.env.PUBLIC_URL + \"/images/mute.svg\"} alt=\"unmute\" />\n                      </div>\n                    </IconButton>\n                  </span>\n                </LightTooltip>\n              )}\n            </Grid>\n            <Grid sm={4} md={4} lg={3} item>\n              {!block ? (\n                <LightTooltip title=\"Block\">\n                  <span>\n                    <IconButton\n                      aria-label=\"close\"\n                      size=\"small\"\n                      onClick={(event) => blockUser(event, member.uuid)}\n                      disabled={member.actionsDisable}\n                    >\n                      <div className={classes.blockIcon}>\n                        <img src={process.env.PUBLIC_URL + \"/images/unblock.svg\"} alt=\"block\" />\n                      </div>\n                    </IconButton>\n                  </span>\n                </LightTooltip>\n              ) : (\n                <LightTooltip title=\"UnBlock\">\n                  <span>\n                    <IconButton\n                      aria-label=\"close\"\n                      size=\"small\"\n                      onClick={(event) => unblockUser(event, member.uuid)}\n                      disabled={member.actionsDisable}\n                    >\n                      <div className={classes.closeIcon}>\n                        <img\n                          src={process.env.PUBLIC_URL + \"/images/times-circle.svg\"}\n                          alt=\"block\"\n                        />\n                      </div>\n                    </IconButton>\n                  </span>\n                </LightTooltip>\n              )}\n            </Grid>\n            <Grid></Grid>\n          </Grid>\n          <Grid container justify=\"flex-start\" spacing={2} className={classes.containerRoot}>\n            <Grid item sm={12} md={12}>\n              <Typography testid=\"nick_name\" className={classes.label}>\n                NICK NAME\n              </Typography>\n              <Typography className={classes.labelItem}>{member.uuid.name}</Typography>\n            </Grid>\n            <Grid item sm={12} md={12}>\n              <Typography testid=\"created_at\" className={classes.label}>\n                CREATED DATE\n              </Typography>\n              <Typography className={classes.labelItem}>\n                {moment(member.updated).format(\"MMMM DD, YYYY hh:mm a\")}\n              </Typography>\n            </Grid>\n            <Grid item sm={12} md={12}>\n              <Typography testid=\"email\" className={classes.label}>\n                EMAIL ADDRESS\n              </Typography>\n              <Typography className={classes.labelItem}>{member.uuid.email}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <UserAction\n          open={dialogOpen}\n          user={selectedUser}\n          title=\"Are you sure?\"\n          setOpen={setDialogOpen}\n          pubnub={pubnub}\n          action={action}\n          updated={metadataUpdated}\n        >\n          You want to {action} this user?\n        </UserAction>\n      </>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default MemberDetail;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStyles } from \"../../style/confirmDialog\";\nimport { Typography } from \"@material-ui/core\";\nimport { deleteMessageAction } from \"../../services/pubnub\";\n\nconst UndoDelete = (props) => {\n  const { title, children, open, setOpen, pubnub, channel, message } = props;\n  const classes = useStyles();\n\n  const handleUndoClick = () => {\n    (async () => {\n      try {\n        await deleteMessageAction(pubnub, channel, message.timetoken, message.actionToken);\n        props.updated(message.timetoken, message.actionToken, \"undo\");\n      } catch (e) {}\n    })();\n  };\n\n  return (\n    <Dialog\n      id=\"dialog\"\n      open={open}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"confirm-dialog\"\n      fullWidth\n      maxWidth=\"xs\"\n      className={classes.confirmDialog}\n    >\n      <DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button\n          id=\"undo\"\n          onClick={() => {\n            setOpen(false);\n            handleUndoClick();\n          }}\n          className={classes.confirmButton}\n        >\n          <Typography> Yes</Typography>\n        </Button>\n\n        <Button\n          id=\"close\"\n          variant=\"contained\"\n          onClick={() => setOpen(false)}\n          className={classes.cancelButton}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default UndoDelete;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  TextField,\n  Button,\n  InputAdornment,\n  Box,\n  Typography,\n  IconButton,\n  Grid,\n} from \"@material-ui/core\";\nimport { addEditMessageAction, deleteMessageAction } from \"../../services/pubnub\";\nimport { useStyles } from \"../../style/messages\";\nimport SnackBar from \"../core/SnackBar\";\n\nconst EditMessage = (props) => {\n  const { pubnub, channel, message } = props;\n  const [text, setText] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [displayBox, setDisplayBox] = useState(false);\n  const [actionToken, setActionToken] = useState(\"\");\n  const classes = useStyles();\n  const [alertMessage, setAlertMessage] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n  });\n\n  useEffect(() => {\n    if (message.text) {\n      let token =\n        message.actions &&\n        message.actions.updated &&\n        message.actions.updated[Object.keys(message.actions.updated)[0]];\n      if (token) setActionToken(token[0].actionTimetoken);\n      setText(message.text);\n      setDisabled(false);\n      setDisplayBox(true);\n    }\n  }, [message]);\n\n  const updateMessage = () => {\n    setAlertMessage({\n      ...alertMessage,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n    });\n    (async () => {\n      try {\n        if (actionToken) {\n          await deleteMessageAction(pubnub, channel, message.timetoken, actionToken);\n        }\n        const response = await addEditMessageAction(pubnub, channel, message.timetoken, text);\n        setText(\"\");\n        setDisabled(true);\n        setDisplayBox(false);\n        props.updated(message.timetoken, message.actionToken, \"updated\", response);\n      } catch (e) {\n        setAlertMessage({\n          ...alertMessage,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: \"Failed to edit message\" },\n        });\n      }\n    })();\n  };\n\n  const handleInputChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const closeEditing = () => {\n    setDisplayBox(false);\n    setDisabled(true);\n    setText(\"\");\n    props.updated(message.timetoken, message.actionToken, \"updated\", \"\");\n  };\n  return (\n    <>\n      {displayBox ? (\n        <Box className={classes.messageBox}>\n          <Grid justify=\"space-between\" container>\n            <Grid item>\n              <Typography className={classes.editMessageHeader}>Edit Message</Typography>\n              <Typography className={classes.editMessageFont}>{message.text}</Typography>\n            </Grid>\n            <Grid item>\n              <IconButton id=\"close\" onClick={closeEditing}>\n                <img src={process.env.PUBLIC_URL + \"/images/close.svg\"} alt=\"close\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Box>\n      ) : null}\n      {props.messagesLength ? (\n        <TextField\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Button onClick={updateMessage}>\n                  <img src={process.env.PUBLIC_URL + \"/images/send-button.svg\"} alt=\"edit\" />\n                </Button>\n              </InputAdornment>\n            ),\n          }}\n          id=\"message\"\n          name=\"message\"\n          placeholder=\"Enter your message here\"\n          variant=\"outlined\"\n          fullWidth\n          value={text}\n          onChange={handleInputChange}\n          autoComplete=\"off\"\n          disabled={disabled}\n        />\n      ) : null}\n      {alertMessage.error.status && <SnackBar msg={alertMessage.error.msg} status={\"info\"} />}\n    </>\n  );\n};\nexport default EditMessage;\n","/**\n * Displays Message content of a message in a selected channel\n */\nimport React from \"react\";\nimport { useStyles } from \"../../style/messages\";\nimport { Box, Grid, Typography, IconButton, Avatar } from \"@material-ui/core\";\nimport { LightTooltip } from \"../../style/tooltip\";\nimport { getModeratedMessageTooltip, getModeratedReasonTooltip } from \"../../utils/helpers\";\n\nconst MessageContent = (props) => {\n  const { message, confirmDelete, updateMessage, confirmUndo, index, toggledVal } = props;\n  const classes = useStyles();\n  return (\n    <>\n      {toggledVal === \"chat\" && (\n        <Grid container className={classes.messageContainer}>\n          {message.actions && (message.actions === \"deleted\" || message.actions.deleted) ? (\n            <>\n              <span\n                className={classes.chat}\n                style={{\n                  backgroundColor: index % 2 !== 0 ? \"#FFFFFF\" : \"#EEF3FF\",\n                }}\n              >\n                <Typography className={classes.deletedChat}>{message.text}</Typography>\n              </span>\n              <Box ml={2}>\n                <LightTooltip title=\"Undo\">\n                  <IconButton\n                    id=\"undoIcon\"\n                    edge=\"start\"\n                    onClick={(event) => confirmUndo(event, message)}\n                  >\n                    <img src={process.env.PUBLIC_URL + \"/images/undo.svg\"} alt=\"delete\" />\n                  </IconButton>\n                </LightTooltip>\n              </Box>\n            </>\n          ) : (\n            <>\n              <span\n                className={classes.chat}\n                style={{\n                  backgroundColor: index % 2 !== 0 ? \"#FFFFFF\" : \"#EEF3FF\",\n                }}\n              >\n                {message.text && (\n                  <Typography className={classes.chatText}>{message.text}</Typography>\n                )}\n                {message.file && message.file.url && (\n                  <>\n                    <Avatar src={message.file.url} className={classes.image} />\n                  </>\n                )}\n              </span>\n\n              <Box ml={2}>\n                <LightTooltip title=\"Edit\">\n                  <IconButton\n                    id=\"updateIcon\"\n                    edge=\"start\"\n                    label=\"edit\"\n                    onClick={(event) => updateMessage(event, message)}\n                  >\n                    <img src={process.env.PUBLIC_URL + \"/images/edit-message.svg\"} alt=\"edit\" />\n                  </IconButton>\n                </LightTooltip>\n                <LightTooltip title=\"Delete\">\n                  <IconButton\n                    id=\"deleteIcon\"\n                    edge=\"start\"\n                    label=\"delete\"\n                    onClick={(event) => confirmDelete(event, message)}\n                  >\n                    <img src={process.env.PUBLIC_URL + \"/images/delete-message.svg\"} alt=\"delete\" />\n                  </IconButton>\n                </LightTooltip>\n              </Box>\n            </>\n          )}\n        </Grid>\n      )}\n      {toggledVal === \"banned\" && (\n        <Grid container>\n          <>\n            <span\n              className={classes.chat}\n              style={{\n                backgroundColor: index % 2 !== 0 ? \"#FFFFFF\" : \"#EEF3FF\",\n              }}\n            >\n              <Typography className={classes.chatText}>\n                <LightTooltip\n                  title={\n                    <>\n                      <Typography>{getModeratedReasonTooltip(message.reason)}</Typography>\n                      <br />\n                      <Typography>\n                        {getModeratedMessageTooltip(message.moderatedMessage)}\n                      </Typography>\n                    </>\n                  }\n                >\n                  <Typography className={classes.chatText}>{message.originalMessage}</Typography>\n                </LightTooltip>\n              </Typography>\n              {message.image && (\n                <>\n                  <IconButton className={classes.imageContainer}>\n                    <img className={classes.image} src={message.image} alt=\"sentImage\" />\n                    {message.imageReason && (\n                      <LightTooltip\n                        title={\n                          <>\n                            <Typography>{`Reason: ${\n                              message.imageReason[0] && message.imageReason[0].text\n                            }`}</Typography>\n                          </>\n                        }\n                        placement=\"right-start\"\n                      >\n                        <img\n                          src={process.env.PUBLIC_URL + \"/images/info.svg\"}\n                          alt=\"profilePicture\"\n                          className={classes.imageIcon}\n                        />\n                      </LightTooltip>\n                    )}\n                  </IconButton>\n                </>\n              )}\n            </span>\n          </>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default MessageContent;\n","/**\n * Displays Messages in a selected channel\n */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Avatar, Box, Grid, Typography, CircularProgress } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/messages\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { formatUserName, formatProfileImageUrl } from \"../../utils/helpers\";\nimport ConfirmDialog from \"../core/ConfirmDialog\";\nimport { softDeleteMessage } from \"../../services/pubnub\";\nimport UndoDelete from \"./UndoDelete\";\nimport EditMessage from \"./EditMessage\";\nimport MessageContent from \"./MessageContent\";\n\nexport default function Chat(props) {\n  const classes = useStyles();\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [selectedMessage, setSelectedMessage] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [undoConfirmOpen, setUndoConfirmOpen] = useState(false);\n\n  /**\n   * Handles delete icon click to confirm delete message action\n   */\n  const confirmDelete = (event, message) => {\n    setConfirmOpen(true);\n    setSelectedMessage(message);\n  };\n\n  /**\n   * Handles soft deleting a message in a channel\n   */\n  const deleteMessage = () => {\n    (async () => {\n      try {\n        const response = await softDeleteMessage(\n          props.pubnub,\n          props.channel,\n          selectedMessage.timetoken\n        );\n        props.updated(selectedMessage.timetoken, response.actionTimetoken);\n      } catch (e) {}\n    })();\n  };\n\n  /**\n   * Handles undo icon click to confirm recovering a message\n   */\n  const confirmUndo = (event, message) => {\n    setUndoConfirmOpen(true);\n    setSelectedMessage(message);\n  };\n\n  /**\n   * Handles edit icon click to edit a message\n   */\n  const updateMessage = (event, message) => {\n    props.setMessageToEdit(message);\n  };\n\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    setMessages(props.messages);\n    setTimeout(() => {\n      messagesEndRef.current?.scrollIntoView();\n    }, 100);\n  }, [props.messages]);\n\n  return (\n    <>\n      {messages.length || props.isLoading ? (\n        <Grid item className={classes.messages}>\n          {messages.map((message, n) => {\n            return (\n              <div key={n}>\n                {props.toggledVal === \"chat\" && (\n                  <>\n                    <Grid container>\n                      <Box>\n                        <Avatar variant=\"square\" src={formatProfileImageUrl(message.profileUrl)} />\n                      </Box>\n                      <Typography className={classes.user}>\n                        {formatUserName(message.name)}\n                      </Typography>\n                    </Grid>\n                    <MessageContent\n                      id=\"messageContent\"\n                      message={message}\n                      confirmDelete={confirmDelete}\n                      updateMessage={updateMessage}\n                      confirmUndo={confirmUndo}\n                      index={n}\n                      toggledVal={props.toggledVal}\n                    />\n                    <Typography className={classes.timeField}>{message.time}</Typography>\n                  </>\n                )}\n                {props.toggledVal === \"banned\" && (\n                  <>\n                    <Grid container>\n                      <Box>\n                        <Avatar variant=\"square\" src={formatProfileImageUrl(message.profileUrl)} />\n                      </Box>\n                      <Typography className={classes.user}>\n                        {formatUserName(message.name)}\n                      </Typography>\n                    </Grid>\n                    <MessageContent message={message} toggledVal={props.toggledVal} index={n} />\n                    <Typography className={classes.timeField}>{message.time}</Typography>\n                  </>\n                )}\n              </div>\n            );\n          })}\n          <div ref={messagesEndRef} />\n        </Grid>\n      ) : (\n        <Alert severity={\"info\"} className={classes.alertMessage}>\n          No recent messages found\n        </Alert>\n      )}\n\n      <ConfirmDialog\n        id=\"delete\"\n        title=\"Are you sure?\"\n        open={confirmOpen}\n        setOpen={setConfirmOpen}\n        onConfirm={deleteMessage}\n        actionMessage={\"Yes, Delete it\"}\n      >\n        You can always undo this action\n      </ConfirmDialog>\n      <UndoDelete\n        title=\"Are you sure?\"\n        open={undoConfirmOpen}\n        setOpen={setUndoConfirmOpen}\n        channel={props.channel}\n        pubnub={props.pubnub}\n        message={selectedMessage}\n        updated={props.updated}\n      >\n        You want to recover the message\n      </UndoDelete>\n      {props.isLoading ? (\n        <Grid justify=\"center\" container>\n          <Box pt={3}>\n            <CircularProgress />\n          </Box>\n        </Grid>\n      ) : null}\n      <EditMessage\n        message={props.messageToEdit}\n        channel={props.channel}\n        pubnub={props.pubnub}\n        updated={props.updated}\n        messagesLength={messages.length}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { getMessagesCount } from \"../../services/pubnub\";\nimport { useStyles } from \"../../style/messages\";\nimport SnackBar from \"../core/SnackBar\";\nimport { lastMidnightHours } from \"../../utils/helpers\";\n\nexport default function MessagesCount(props) {\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n  const [alert, setAlert] = useState({\n    success: { status: false, msg: \"\" },\n    error: { status: false, msg: \"\" },\n  });\n  const midnightTimeToken = lastMidnightHours();\n\n  useEffect(() => {\n    setAlert({\n      ...alert,\n      success: { status: false, msg: \"\" },\n      error: { status: false, msg: \"\" },\n    });\n    (async () => {\n      try {\n        const messagesCount = await getMessagesCount(\n          props.pubnub,\n          props.channelName,\n          midnightTimeToken\n        );\n        setCount(messagesCount);\n      } catch (e) {\n        setAlert({\n          ...alert,\n          success: { status: false, msg: \"\" },\n          error: { status: true, msg: e.message },\n        });\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.channelName]);\n\n  return (\n    <>\n      <Typography className={classes.messagesCountFont}>Today({count})</Typography>\n      {alert.error.status && <SnackBar msg={alert.error.msg} status={\"info\"} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/messages\";\n\nexport default function ToggleChat(props) {\n  const classes = useStyles();\n  return (\n    <>\n      <Button\n        id=\"chat\"\n        onClick={() => {\n          props.setToggledVal(\"chat\");\n        }}\n        className={props.toggledVal === \"chat\" ? classes.activeToggled : classes.disableToggled}\n      >\n        Chat\n      </Button>\n      <Button\n        id=\"ban\"\n        onClick={() => {\n          props.setToggledVal(\"banned\");\n        }}\n        className={props.toggledVal === \"banned\" ? classes.activeToggled : classes.disableToggled}\n      >\n        Banned\n      </Button>\n    </>\n  );\n}\n","/**\n * Fetches Messages and channel members of selected channel\n */\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Avatar, Box, Button, Grid } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/messages\";\nimport { fetchMessages, getChannelMembers, fetchChannelMetadata } from \"../../services/pubnub\";\nimport { useLocation } from \"react-router\";\nimport usePubNub from \"../../utils/usePubNub\";\nimport {\n  capitalizeFirstLetter,\n  capitalizeNameInitials,\n  formatTimeToken,\n  formatBannedMessage,\n  getMessageFileUrl,\n  membersFromLS,\n  truncateChannelDescription,\n  getMessageText,\n} from \"../../utils/helpers\";\nimport Members from \"./Members\";\nimport MemberDetail from \"./MemberDetail\";\nimport Chat from \"./Chat\";\nimport { setLocalStorage } from \"../../services/localStorage\";\nimport MessagesCount from \"./MessagesCount\";\nimport ToggleChat from \"./ToggleChat\";\n\nconst Messages = () => {\n  const firstUpdate = useRef(true);\n  const classes = useStyles();\n  const location = useLocation();\n  const { pubnub } = usePubNub();\n  const [messages, setMessages] = useState([]);\n  const [members, setMembers] = useState(membersFromLS());\n  const [channel, setChannel] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [memberDetails, setMemberDetails] = useState();\n  const [toggleMemberDetails, setToggleMemberDetails] = useState(false);\n  const [messageToEdit, setMessageToEdit] = useState([]);\n  const [toggledVal, setToggledVal] = useState(\"chat\");\n  const [channelID, setChannelID] = useState(\"\");\n  const [totalCount, setTotalCount] = useState(0);\n  const [page, setPage] = useState(\"\");\n\n  useEffect(() => {\n    fetchChannelMembers();\n    setLocalStorage(\"PubNubSelectedChannel\", location.state.channel);\n    setChannelID(location.state.channel);\n    (async () => {\n      try {\n        const channelResponse = await fetchChannelMetadata(pubnub, location.state.channel);\n        setChannel(channelResponse);\n      } catch (e) {}\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (toggledVal === \"chat\") {\n      setChannelID(location.state.channel);\n    } else if (toggledVal === \"banned\") {\n      setChannelID(\"banned.\" + location.state.channel);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toggledVal]);\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n    } else {\n      if (channelID) fetchChannelMessages();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [members]);\n\n  useEffect(() => {\n    if (channelID && !loading) fetchChannelMessages();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channelID]);\n\n  /**\n   * Fetches channel members related to selected channel\n   */\n  const fetchChannelMembers = () => {\n    setLoading(true);\n    (async () => {\n      try {\n        const channelMembers = await getChannelMembers(pubnub, location.state.channel);\n        setLocalStorage(\"PubNubChannelMembers\", channelMembers.data);\n        setMembers(channelMembers.data);\n        setTotalCount(channelMembers.totalCount);\n        setPage(channelMembers.next);\n      } catch (e) {}\n    })();\n  };\n\n  /**\n   * Fetches channel messages related to selected channel\n   */\n  const fetchChannelMessages = () => {\n    setMessages([]);\n    (async () => {\n      try {\n        const channelMessages = await fetchMessages(pubnub, channelID);\n        const messagesList = [];\n        let messageObject = {};\n        let messagesSet = [];\n        if (channelMessages) {\n          channelMessages.map((channelMessage, j) => {\n            messageObject = channelMessage.message;\n            messageObject.time = formatTimeToken(channelMessage.timetoken);\n            messageObject.timetoken = channelMessage.timetoken;\n            messageObject.actions = channelMessage.actions;\n            messageObject.actionToken =\n              channelMessage.actions &&\n              channelMessage.actions.deleted &&\n              channelMessage.actions.deleted[\".\"][0].actionTimetoken;\n            messageObject.text = getMessageText(channelMessage, messageObject);\n            // Get the original senders uuid from the user's publish or\n            // if message was sent to banned channel by a function, find it in the message payload\n            let senderUuid = channelMessage.uuid || channelMessage.message.senderUuid;\n            // Use the sender's uuid to add the name/avatar info to the message\n            let filterMember =\n              senderUuid && members && members.filter((member) => member.uuid.id === senderUuid);\n            if (filterMember && filterMember.length) {\n              messageObject.name = capitalizeFirstLetter(\n                filterMember[0].uuid.name || filterMember[0].uuid.id\n              );\n              messageObject.profileUrl = filterMember[0].uuid.profileUrl;\n            } else if (senderUuid) {\n              // Display uuid even if there is no name metadata\n              messageObject.name = senderUuid;\n            }\n            formatBannedMessage(messageObject);\n            messagesSet = getMessageFileUrl(messageObject, channelMessage, pubnub, channelID);\n            messagesList.push(messagesSet);\n            return false;\n          });\n        }\n\n        setMessages([...new Set(messagesList)]);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n      }\n    })();\n  };\n\n  /**\n   * Handles message updates action (edit, delte, undo delete)\n   */\n  const messageUpdate = (messageToken, actionToken, action, updatedResponse) => {\n    let filteredArray = messages.filter((item) => item.timetoken !== messageToken);\n    let filteredMessage = messages.filter((row) => {\n      return row.timetoken.includes(messageToken);\n    });\n    if (action) {\n      if (action === \"undo\") filteredMessage[0].actions = \"\";\n      if (action === \"updated\" && updatedResponse) {\n        setMessageToEdit([]);\n        filteredMessage[0].text = updatedResponse.value;\n      } else if (action === \"updated\") {\n        setMessageToEdit([]);\n      }\n    } else {\n      filteredMessage[0].actions = \"deleted\";\n      filteredMessage[0].actionToken = actionToken;\n    }\n    const messageIndex = messages.findIndex((row) => {\n      return row.timetoken.includes(messageToken);\n    });\n    filteredArray.splice(messageIndex, 0, filteredMessage[0]);\n    setMessages(filteredArray);\n  };\n\n  const handleMessage = (message) => {\n    let messageObject = {};\n    // messages sent to banned channel by moderation include a senderUuid field\n    let senderUuid = message.publisher || (message.message && message.message.senderUuid);\n    let filterMember =\n      senderUuid && members && members.filter((member) => member.uuid.id === senderUuid);\n    messageObject = message.message || message;\n    if (filterMember && filterMember.length) {\n      messageObject.name = filterMember[0].uuid.name || filterMember[0].uuid.id;\n      messageObject.profileUrl = filterMember[0].uuid.profileUrl;\n    } else if (senderUuid) {\n      // Display uuid even if there is no name metadata\n      messageObject.name = senderUuid;\n    }\n    if (\n      message &&\n      message.file &&\n      message.file.id &&\n      message.file.name &&\n      messageObject.message.file.url\n    ) {\n      const url = pubnub.getFileUrl({\n        channel: channelID,\n        id: message.file.id,\n        name: message.file.name,\n      });\n      messageObject.file.url = url;\n    }\n    messageObject.time = formatTimeToken(message.timetoken);\n    messageObject.timetoken = message.timetoken;\n    formatBannedMessage(messageObject);\n    setMessages((oldArray) => [...oldArray, messageObject]);\n  };\n\n  const pubnubListener = {\n    message: handleMessage,\n    file: handleMessage,\n  };\n\n  const leaveChannel = () => {\n    pubnub.removeListener(pubnubListener);\n    pubnub.unsubscribeAll();\n  };\n\n  useEffect(() => {\n    if (channelID) {\n      pubnub.addListener(pubnubListener);\n      pubnub.subscribe({ channels: [channelID] });\n      return leaveChannel;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [members, channelID]);\n\n  const handleMemberDetails = (memberData) => {\n    setMemberDetails(memberData);\n    setToggleMemberDetails(true);\n  };\n\n  return (\n    <>\n      <Helmet title=\"Messages\" />\n      <Grid justify=\"space-between\" container spacing={1}>\n        <Grid item sm={9}>\n          <Grid justify=\"space-between\" container>\n            <Grid item sm={12} className={classes.header}>\n              <Grid justify=\"flex-start\" container>\n                <Box mr={1}>\n                  <Avatar className={classes.avatar} variant=\"square\">\n                    {capitalizeNameInitials(location.state.channel)}\n                  </Avatar>\n                </Box>\n                <Grid item sm={8} xs={12} md={8}>\n                  {toggledVal === \"chat\" && (\n                    <small className={classes.values}>\n                      {location.state.channel} ({channel.name})\n                    </small>\n                  )}\n                  {toggledVal === \"banned\" && (\n                    <small className={classes.values}>\n                      {location.state.channel} - Banned ({channel.name})\n                    </small>\n                  )}\n                  <br />\n                  <small className={classes.appName}>\n                    {truncateChannelDescription(channel.description)}\n                  </small>\n                </Grid>\n                <Grid item sm={3} md={3} lg={3}>\n                  <Grid justify=\"space-between\" container>\n                    <Grid item />\n                    <Grid item>\n                      <Box mt={1}>\n                        <ToggleChat toggledVal={toggledVal} setToggledVal={setToggledVal} />\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              {toggledVal === \"chat\" && (\n                <Box mt={1}>\n                  <Grid justify=\"center\" container>\n                    <Button disabled className={classes.messagesCount}>\n                      <MessagesCount channelName={location.state.channel} pubnub={pubnub} />\n                    </Button>\n                  </Grid>\n                </Box>\n              )}\n            </Grid>\n          </Grid>\n          <Grid item sm={12}>\n            <Chat\n              messages={messages}\n              isLoading={loading}\n              pubnub={pubnub}\n              channel={location.state.channel}\n              updated={messageUpdate}\n              messageToEdit={messageToEdit}\n              setMessageToEdit={setMessageToEdit}\n              toggledVal={toggledVal}\n            />\n          </Grid>\n        </Grid>\n        <Grid item sm={3} className={classes.channelMembers}>\n          {!toggleMemberDetails && (\n            <Members\n              channelMembers={members}\n              pubnub={pubnub}\n              selectedMemberDetail={(details) => handleMemberDetails(details)}\n              channelName={location.state.channel}\n              totalCount={totalCount}\n              page={page}\n            />\n          )}\n          {toggleMemberDetails && (\n            <MemberDetail\n              toggleMemberDetails={(toggleValue) => setToggleMemberDetails(toggleValue)}\n              member={memberDetails}\n              pubnub={pubnub}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Messages;\n","import React from \"react\";\nimport Messages from \"../../components/messages/Messages\";\nimport DashboardLayout from \"../../layouts/Dashboard\";\n\nconst Overview = () => {\n  return (\n    <>\n      <DashboardLayout>\n        <Messages />\n      </DashboardLayout>\n    </>\n  );\n};\nexport default Overview;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  labelText: {\n    color: \"#606060\",\n  },\n  card: {\n    padding: \"20px\",\n  },\n  cancel: {\n    width: \"150px\",\n    margin: \"3px\",\n    height: \"37px\",\n    boxShadow: \"0px 0px 0px white\",\n    backgroundColor: \"white\",\n    border: \"1px solid #707070\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) 13px/16px var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    color: \"#707070\",\n    fontSize: \"13px\",\n  },\n  save: {\n    background: \"#6387ED 0% 0% no-repeat padding-box\",\n    borderRadius: \"8px\",\n    opacity: 1,\n    color: \"white\",\n    width: \"150px\",\n    margin: \"8px\",\n    height: \"37px\",\n    fontSize: \"13px\",\n    \"&:hover\": {\n      background: \"#6387ED 0% 0% no-repeat padding-box\",\n      color: \"white\",\n    },\n  },\n\n  testText: {\n    font: \"var(--unnamed-font-style-normal) normal var(--unnamed-font-weight-normal) var(--unnamed-font-size-16)/var(--unnamed-line-spacing-19) var(--unnamed-font-family-proxima-nova)\",\n    letterSpacing: \"var(--unnamed-character-spacing-0)\",\n    textDecoration: \"underline\",\n    color: \"#6387ED\",\n    cursor: \"pointer\",\n    opacity: 1,\n    \"&:hover\": {\n      background: \"#E7EDFF\",\n      color: \"#6387ED\",\n    },\n  },\n  loader: {\n    marginRight: \"5px\",\n    color: \"white\",\n  },\n  loaderLoading: {\n    marginRight: \"5px\",\n  },\n  reroute: {\n    textTransform: \"none\",\n    marginLeft: \"8px\",\n    backgroundColor: \"#FCF0EF\",\n    color: \"#FB6340\",\n    marginTop: \"5px\",\n  },\n  infoIcon: {\n    padding: \"3px 0px 0px 5px\",\n  },\n}));\n","import React from \"react\";\nimport { Grid, Box, Typography } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/textModeration.js\";\n\nconst FilterCard = ({ state }) => {\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"flex-start\" spacing={3}>\n      <Grid item>\n        <Box className={!state.initialLoading ? classes.methodSelected : classes.methodNotSelected}>\n          <Grid container justify=\"center\">\n            <Box p={1}>\n              <img\n                alt=\"\"\n                src={\n                  !state.initialLoading\n                    ? process.env.PUBLIC_URL + \"/images/automatic-profanity-selected.svg\"\n                    : process.env.PUBLIC_URL + \"/images/automatic-detection.svg\"\n                }\n              />\n            </Box>\n          </Grid>\n          <Typography testid=\"autoDetection\" variant=\"body1\" align=\"center\">\n            Automatic Detection\n          </Typography>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FilterCard;\n","export const handleChange =\n  ({ setState, state, name }) =>\n  (e, value) => {\n    if (e.target.name === \"channelId\") {\n      setState({ ...state, channelOnChange: true, channelId: e.target.value });\n    } else if (e.target.name === \"toolForImageModeration\") {\n      setState({ ...state, toolForImageModeration: e.target.value });\n    } else if (e.target.name === \"sightengineAPIUser\") {\n      setState({\n        ...state,\n        sightengineAPIUser: e.target.value,\n        sightengineAPIUserError: false,\n      });\n    } else if (e.target.name === \"sightengineAPIKey\") {\n      setState({\n        ...state,\n        sightengineAPIKey: e.target.value,\n        sightengineAPIKeyError: false,\n      });\n    } else if (e.target.name === \"sightengineWorkflowId\") {\n      setState({\n        ...state,\n        sightengineWorkflowId: e.target.value,\n        sightengineWorkflowIdError: false,\n      });\n    } else if (e.target.name === \"reRouteMessages\") {\n      setState({ ...state, reRouteMessages: e.target.checked });\n    } else if (name === \"sightengineRiskFactorThreshold\") {\n      setState({ ...state, sightengineRiskFactorThreshold: value });\n    } else if (e.target.name === \"imageModerationToggle\") {\n      setState({ ...state, imageModerationToggle: e.target.value });\n    } else if (name === \"applyToAllChannelIds\") {\n      if (e.target.checked) {\n        setState((preValue) => ({\n          ...preValue,\n          applyToAllChannelIds: e.target.checked,\n          channelId: \"*\",\n        }));\n      } else {\n        setState({ ...state, applyToAllChannelIds: e.target.checked });\n      }\n    }\n  };\n","import React from \"react\";\nimport {\n  Grid,\n  Button,\n  Box,\n  Card,\n  Chip,\n  Typography,\n  TextField,\n  Select,\n  Checkbox,\n  CircularProgress,\n  FormControl,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../../../style/imageModeration\";\nimport Slider from \"../../core/SliderComponent\";\nimport { LightTooltip } from \"../../../style/tooltip\";\nimport { handleChange } from \"./ImageModerationHandler\";\nimport { constantBoolean } from \"../../../utils/helpers\";\n\nconst TooltipText = (\n  <>\n    <span>Please follow steps listed </span>\n    <a\n      style={{ fontWeight: 600, color: \"black\", textDecorationLine: \"none\" }}\n      href=\"https://sightengine.com/docs/image-moderation-workflows\"\n    >\n      here\n    </a>\n    <span> and input values</span>\n  </>\n);\n\nconst AutomaticImageModeration = ({ state, setState, handleSave }) => {\n  const classes = useStyles();\n  const checkForApplyToAllChannelIds = constantBoolean(state.applyToAllChannelIds);\n  const checkboxForReroute = constantBoolean(state.reRouteMessages);\n\n  if (!state.initialLoading) {\n    return (\n      <>\n        <Card className={classes.card}>\n          <Box>\n            <Grid container>\n              <Grid item>\n                <label testid=\"Channel_ID\" className={classes.labelText}>\n                  Channel ID\n                </label>\n              </Grid>\n              <Grid item>\n                <Box className={classes.infoIcon}>\n                  <LightTooltip title=\"Note: Please add a Channel ID or a Channel pattern. eg. channel.* OR pubNub. Channel ID pattern applies to BOTH text & image moderation if both are enabled.\">\n                    <img\n                      src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                      alt=\"info-circle\"\n                    />\n                  </LightTooltip>\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Box pt={1} mb={2}>\n              <TextField\n                id=\"channelId\"\n                variant=\"outlined\"\n                name=\"channelId\"\n                error={state.channelIdError}\n                disabled={checkForApplyToAllChannelIds || state.channelIdDisabled}\n                placeholder=\"channel ID\"\n                value={state.channelId}\n                onChange={handleChange({ setState, state })}\n                size=\"small\"\n                fullWidth\n              />\n            </Box>\n          </Box>\n          <Grid item>\n            <Grid container justify=\"flex-start\">\n              <Grid item>\n                <Checkbox\n                  id=\"checkBox\"\n                  checked={checkForApplyToAllChannelIds}\n                  onChange={handleChange({\n                    setState,\n                    state,\n                    name: \"applyToAllChannelIds\",\n                  })}\n                  disabled={state.channelIdDisabled}\n                />\n              </Grid>\n              <Grid item>\n                <Box pt={1} pl={1}>\n                  <Typography testid=\"Apply_All\" variant=\"body1\">\n                    Apply to All Channel IDs\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Grid>\n          <br />\n          <Grid container justify=\"flex-start\">\n            <Grid item sm={12}>\n              <label id=\"SelectTool\" className={classes.labelText}>\n                Select third party tool for Automatic Detection\n              </label>\n              <Box pt={1} mb={2}>\n                <FormControl size=\"small\" fullWidth>\n                  <Select\n                    id=\"ImageModerationTool\"\n                    variant=\"outlined\"\n                    value={state.toolForImageModeration}\n                    name=\"toolForImageModeration\"\n                    onChange={handleChange({ setState, state })}\n                    MenuProps={{\n                      anchorOrigin: {\n                        vertical: \"bottom\",\n                        horizontal: \"left\",\n                      },\n                      getContentAnchorEl: null,\n                    }}\n                  >\n                    <MenuItem value=\"sightengine\">SightEngine</MenuItem>\n                  </Select>\n                </FormControl>\n              </Box>\n            </Grid>\n          </Grid>\n          <br />\n          <Box pt={1}>\n            <Grid container>\n              <Grid item>\n                <label testId=\"ApiUser\" className={classes.labelText}>\n                  Sightengine API User\n                </label>\n              </Grid>\n              <Grid item>\n                <Box className={classes.infoIcon}>\n                  <LightTooltip title={TooltipText} interactive>\n                    <img\n                      src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                      alt=\"info-circle\"\n                    />\n                  </LightTooltip>\n                </Box>\n              </Grid>\n            </Grid>\n            <Box pt={1} mb={2}>\n              <TextField\n                id=\"sightEngineAPIUser\"\n                variant=\"outlined\"\n                name=\"sightengineAPIUser\"\n                error={state.sightengineAPIUserError}\n                helperText={state.sightengineAPIUserError && \"Sightengine API User is required\"}\n                value={state.sightengineAPIUser}\n                onChange={handleChange({ setState, state })}\n                size=\"small\"\n                placeholder=\"Sightengine API User\"\n                fullWidth\n              />\n            </Box>\n          </Box>\n          <br />\n          <Box pt={1}>\n            <Grid container>\n              <Grid item>\n                <label testId=\"Api_Key\" className={classes.labelText}>\n                  Sightengine API Key\n                </label>\n              </Grid>\n              <Grid item>\n                <Box className={classes.infoIcon}>\n                  <LightTooltip title={TooltipText} interactive>\n                    <img\n                      src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                      alt=\"info-circle\"\n                    />\n                  </LightTooltip>\n                </Box>\n              </Grid>\n            </Grid>\n            <Box pt={1} mb={2}>\n              <TextField\n                id=\"apiKey\"\n                variant=\"outlined\"\n                name=\"sightengineAPIKey\"\n                error={state.sightengineAPIKeyError}\n                helperText={state.sightengineAPIKeyError && \"Sightengine API Key is required\"}\n                value={state.sightengineAPIKey}\n                onChange={handleChange({ setState, state })}\n                size=\"small\"\n                fullWidth\n                placeholder=\"Sightengine API Key\"\n              />\n            </Box>\n          </Box>\n          <br />\n          <Box pt={1}>\n            <Grid container>\n              <Grid item>\n                <label testId=\"workFlowId\" className={classes.labelText}>\n                  Sightengine Workflow ID\n                </label>\n              </Grid>\n              <Grid item>\n                <Box className={classes.infoIcon}>\n                  <LightTooltip title={TooltipText} interactive>\n                    <img\n                      src={process.env.PUBLIC_URL + \"/images/info-circle.svg\"}\n                      alt=\"info-circle\"\n                    />\n                  </LightTooltip>\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Box pt={1} mb={2}>\n              <TextField\n                id=\"sightEngineWorkflowId\"\n                name=\"sightengineWorkflowId\"\n                variant=\"outlined\"\n                size=\"small\"\n                error={state.sightengineWorkflowIdError}\n                helperText={\n                  state.sightengineWorkflowIdError && \"Sightengine Workflow ID is required\"\n                }\n                value={state.sightengineWorkflowId}\n                onChange={handleChange({ setState, state })}\n                fullWidth\n                placeholder=\"Sightengine Workflow ID\"\n              />\n            </Box>\n          </Box>\n          <br />\n          <Grid container justify=\"space-between\" spacing={6}>\n            <Grid item sm={6} xs={12} md={6} lg={6}>\n              <Box>\n                <label testId=\"riskFactor\" className={classes.labelText}>\n                  Sightengine Risk Factor\n                </label>\n                <Box pt={1}>\n                  <Slider\n                    id=\"riskFactorSlider\"\n                    value={state.sightengineRiskFactorThreshold}\n                    onChange={handleChange({\n                      setState,\n                      state,\n                      name: \"sightengineRiskFactorThreshold\",\n                    })}\n                  />\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n          <br />\n          <Grid container>\n            <Grid item>\n              <Grid container justify=\"flex-start\">\n                <Grid item>\n                  <Checkbox\n                    id=\"reRouteCheckBox\"\n                    name=\"reRouteMessages\"\n                    checked={checkboxForReroute}\n                    onChange={handleChange({ setState, state })}\n                  />\n                </Grid>\n                <Grid item>\n                  <Box pt={1} pl={1}>\n                    <Typography testid=\"reRouteMsg\" variant=\"body1\">\n                      Route messages to\n                    </Typography>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Box>\n                <Chip className={classes.reroute} label={\"banned.\" + state.channelId} />\n              </Box>\n            </Grid>\n          </Grid>\n          <br />\n          <Grid container justify=\"space-between\" spacing={3}>\n            <Grid item></Grid>\n            <Grid item>\n              <Button\n                id=\"save\"\n                className={classes.save}\n                disabled={state.saveLoading}\n                onClick={handleSave}\n                variant=\"contained\"\n              >\n                {state.saveLoading ? (\n                  <CircularProgress\n                    size={25}\n                    thickness={4}\n                    color=\"primary\"\n                    className={classes.loader}\n                  />\n                ) : (\n                  <></>\n                )}\n                Save\n              </Button>\n            </Grid>\n          </Grid>\n        </Card>\n      </>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default AutomaticImageModeration;\n","import React, { useState, useEffect } from \"react\";\nimport { Typography, Grid, CircularProgress } from \"@material-ui/core\";\nimport { useStyles } from \"../../style/imageModeration.js\";\nimport SwitchButton from \"../core/SwitchButton\";\nimport SnackBar from \"../core/SnackBar\";\nimport FilterCard from \"./FilterCard\";\nimport AutomaticImageModeration from \"./automaticModeration/AutomaticImageModeration\";\nimport { getCookie } from \"../../services/localStorage\";\nimport { selectedAppFromLS, constantBoolean, pnFunctionFilterStatus } from \"../../utils/helpers\";\n\nimport {\n  imageModerationCode,\n  handleImageModerationSave,\n  textModerationCode,\n} from \"../../utils/imageModeration\";\n\nimport { fetchPubNubFunction } from \"../../services/pubnub\";\nconst ImageModeration = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    applyToAllChannelIds: true,\n    initialLoading: true,\n    imageModerationToggle: \"\",\n    channelId: \"*\",\n    channelIdError: false,\n    sightengineAPIUserError: false,\n    sightengineAPIKeyError: false,\n    sightengineWorkflowIdError: false,\n    channelOnChange: false,\n    toolForImageModeration: \"sightengine\",\n    sightengineAPIUser: \"\",\n    sightengineAPIKey: \"\",\n    sightengineWorkflowId: \"\",\n    sightengineRiskFactorThreshold: \"\",\n    reRouteMessages: \"\",\n    error: {\n      status: false,\n      msg: \"\",\n    },\n    successMsg: \"\",\n    errorMsg: \"\",\n    successStatus: false,\n    errorStatus: false,\n    saveLoading: false,\n    channelIdDisabled: false,\n  });\n  const checkForToggleSwitch = constantBoolean(state.imageModerationToggle);\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      imageModerationToggle: e.target.checked,\n    });\n  };\n\n  useEffect(() => {\n    const selectedApp = selectedAppFromLS();\n    const headerToken = getCookie(\"token\");\n    (async () => {\n      if (selectedApp) {\n        try {\n          const fetchFunctionsResponse = await fetchPubNubFunction(\n            selectedApp.id,\n            headerToken,\n            true\n          );\n          const textModeration = textModerationCode(selectedApp, fetchFunctionsResponse);\n\n          const { findImageFunction, eventHandler } = imageModerationCode(\n            selectedApp,\n            fetchFunctionsResponse\n          );\n\n          if (findImageFunction.length && eventHandler.length > 0) {\n            const data = pnFunctionFilterStatus(eventHandler[0].code);\n            const {\n              imageModerationToggle,\n              toolForImageModeration,\n              sightengineAPIUser,\n              sightengineAPIKey,\n              applyToAllChannelIds,\n              sightengineWorkflowId,\n              sightengineRiskFactorThreshold,\n              reRouteMessages,\n            } = data;\n            setState((prevState) => ({\n              imageModerationToggle,\n              initialLoading: false,\n              channelId: eventHandler[0].channels,\n              toolForImageModeration,\n              applyToAllChannelIds,\n              sightengineAPIUser,\n              sightengineAPIKey,\n              sightengineWorkflowId,\n              sightengineRiskFactorThreshold,\n              reRouteMessages,\n              channelIdDisabled: textModeration.textModerationToggle,\n            }));\n          } else {\n            setState({\n              ...state,\n              initialLoading: false,\n              channelIdDisabled: textModeration.textModerationToggle,\n            });\n          }\n          if (\n            textModeration.textModerationToggle &&\n            textModeration.textChannelId &&\n            textModeration.textChannelId !== state.channelId\n          ) {\n            setState((previousState) => ({\n              ...previousState,\n              channelId: textModeration.textChannelId,\n              channelIdDisabled: textModeration.textModerationToggle,\n            }));\n          }\n        } catch (error) {\n          setState((prevState) => ({\n            initialLoading: false,\n          }));\n        }\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (state.channelOnChange) {\n      if (state.channelId.length === 0) {\n        setState((previousValue) => ({\n          ...previousValue,\n          errorStatus: true,\n          saveLoading: false,\n          channelIdError: true,\n          errorMsg: \"Channel name is required\",\n          successMsg: \"\",\n          successStatus: false,\n        }));\n      } else {\n        setState((preValue) => ({\n          ...preValue,\n          errorStatus: false,\n          saveLoading: false,\n          errorMsg: \"\",\n          successMsg: \"\",\n          channelIdError: false,\n          successStatus: false,\n        }));\n      }\n    }\n  }, [state.channelId, state.applyToAllChannelIds, state.channelOnChange]);\n  const handleSave = async (e) => {\n    e.preventDefault();\n    if (state.errorStatus) {\n      return;\n    }\n    if (state.channelId.length === 0) {\n      return setState({\n        ...state,\n        errorStatus: true,\n        channelIdError: true,\n        errorMsg: \"Channel Id is required.\",\n        successStatus: false,\n        successMsg: \"\",\n      });\n    }\n    if (!state.sightengineAPIUser.trim().length) {\n      return setState({\n        ...state,\n        sightengineAPIUserError: true,\n      });\n    }\n    if (!state.sightengineAPIKey.trim().length) {\n      return setState({\n        ...state,\n        sightengineAPIKeyError: true,\n      });\n    }\n    if (!state.sightengineWorkflowId.trim().length) {\n      return setState({\n        ...state,\n        sightengineWorkflowIdError: true,\n      });\n    }\n    setState((prevState) => ({\n      ...prevState,\n      saveLoading: true,\n    }));\n    const token = getCookie(\"token\");\n    const app = selectedAppFromLS();\n    if (app) {\n      try {\n        await handleImageModerationSave(app, token, { state, setState });\n      } catch (error) {\n        setState({\n          ...state,\n          errorStatus: true,\n          saveLoading: false,\n          errorMsg: error.message,\n          successMsg: \"\",\n          successStatus: false,\n        });\n      }\n    }\n  };\n  return (\n    <>\n      {state.successStatus && <SnackBar status=\"success\" msg={state.successMsg} />}\n      {state.errorStatus && <SnackBar status=\"error\" msg={state.errorMsg} />}\n      <Typography testid=\"title\" variant=\"h6\" className={classes.title}>\n        Image Moderation\n        <SwitchButton checked={checkForToggleSwitch} onChange={handleChange} />\n      </Typography>\n      <br />\n      <Typography testid=\"subTitle\" className={classes.subTitle}>\n        Profanity detection method\n      </Typography>\n      <FilterCard state={state} />\n      {state.initialLoading && (\n        <Grid container justify=\"center\">\n          <CircularProgress\n            size={65}\n            thickness={4}\n            color=\"primary\"\n            className={classes.loaderLoading}\n          />\n        </Grid>\n      )}\n      <br />\n      <AutomaticImageModeration state={state} handleSave={handleSave} setState={setState} />\n      <br />\n    </>\n  );\n};\nexport default ImageModeration;\n","import React from \"react\";\nimport DashboardLayout from \"../../layouts/Dashboard\";\nimport ImageModeration from \"../../components/imageModeration/index\";\n\nconst ImageModerationPage = () => {\n  return (\n    <>\n      <DashboardLayout>\n        <ImageModeration />\n      </DashboardLayout>\n    </>\n  );\n};\n\nexport default ImageModerationPage;\n","import React from \"react\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport Login from \"../pages/login\";\nimport Private from \"./PrivateRoute\";\nimport Auth from \"./AuthRoute\";\nimport Dashboard from \"../pages/dashboard\";\nimport TextModeration from \"../pages/textModeration\";\nimport Accounts from \"../pages/accounts\";\nimport Channels from \"../pages/channels\";\nimport Overview from \"../pages/overview\";\nimport Users from \"../pages/users\";\nimport Messages from \"../pages/messages\";\nimport ImageModeration from \"../pages/imageModeration\";\n\nconst Routes = () => (\n  <BrowserRouter basename=\"/moderation-dashboard\">\n    <Switch>\n      <Auth path=\"/\" exact component={Login} />\n      <Private path=\"/accounts\" exact component={Accounts} />\n      <Private path=\"/dashboard\" exact component={Dashboard} />\n      <Private path=\"/text-moderation\" exact component={TextModeration} />\n      <Private path=\"/channels\" exact component={Channels} />\n      <Private path=\"/overview\" exact component={Overview} />\n      <Private path=\"/users\" exact component={Users} />\n      <Private path=\"/channels/messages\" exact component={Messages} />\n      <Private path=\"/image-moderation\" exact component={ImageModeration} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from \"react\";\nimport { create } from \"jss\";\nimport { StylesProvider, jssPreset } from \"@material-ui/core/styles\";\n\nimport Routes from \"./routes/Routes\";\nconst jss = create({\n  ...jssPreset(),\n  insertionPoint: document.getElementById(\"jss-insertion-point\"),\n});\n\nconst App = () => {\n  return (\n    <>\n      <StylesProvider jss={jss}>\n        <Routes />\n      </StylesProvider>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./style/global.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}